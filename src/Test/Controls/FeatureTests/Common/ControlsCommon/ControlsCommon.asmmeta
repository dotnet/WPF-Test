#include "versions.h"
#include "ndp20.versions.h"

.assembly extern PresentationCore
{
	.publickeytoken = PRESENTATIONCORE_ASSEMBLY_PUBLIC_KEY_TOKEN_IL
	.ver PRESENTATIONCORE_ASSEMBLY_VERSION_IL
}
.assembly extern PresentationFramework
{
	.publickeytoken = PRESENTATIONFRAMEWORK_ASSEMBLY_PUBLIC_KEY_TOKEN_IL
	.ver PRESENTATIONFRAMEWORK_ASSEMBLY_VERSION_IL
}
.assembly extern System
{
	.publickeytoken = SYSTEM_ASSEMBLY_PUBLIC_KEY_TOKEN_IL
	.ver SYSTEM_ASSEMBLY_VERSION_IL
}
.assembly extern System.Drawing
{
	.publickeytoken = SYSTEM_DRAWING_ASSEMBLY_PUBLIC_KEY_TOKEN_IL
	.ver SYSTEM_DRAWING_ASSEMBLY_VERSION_IL
}
.assembly extern System.Xml
{
	.publickeytoken = SYSTEM_XML_ASSEMBLY_PUBLIC_KEY_TOKEN_IL
	.ver SYSTEM_XML_ASSEMBLY_VERSION_IL
}
.assembly extern TestRuntime
{
	.publickeytoken = TESTRUNTIME_ASSEMBLY_PUBLIC_KEY_TOKEN_IL
	.ver TESTRUNTIME_ASSEMBLY_VERSION_IL
}
.assembly extern WindowsBase
{
	.publickeytoken = WINDOWSBASE_ASSEMBLY_PUBLIC_KEY_TOKEN_IL
	.ver WINDOWSBASE_ASSEMBLY_VERSION_IL
}
.assembly extern mscorlib
{
	.publickeytoken = MSCORLIB_20_ASSEMBLY_PUBLIC_KEY_TOKEN_IL
	.ver MSCORLIB_20_ASSEMBLY_VERSION_IL
}
.assembly ControlsCommon
{
	.custom instance void [mscorlib]System.CLSCompliantAttribute::.ctor(bool) = { bool(false) }
	.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = { bool(false) }
	.custom instance void [mscorlib]System.Security.AllowPartiallyTrustedCallersAttribute::.ctor() = { }
	.publickey = CONTROLSCOMMON_ASSEMBLY_PUBLIC_KEY_IL
	.hash algorithm 0x00008004
	.ver CONTROLSCOMMON_ASSEMBLY_VERSION_IL
}
.namespace Avalon.Test.ComponentModel
{
	.class public ActionCompletedEventArgs
		extends [mscorlib]System.EventArgs
	{
		.method public hidebysig specialname 
			instance bool get_Status()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Status(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance bool Status()
		{
			.get instance bool Avalon.Test.ComponentModel.ActionCompletedEventArgs::get_Status()
			.set instance void Avalon.Test.ComponentModel.ActionCompletedEventArgs::set_Status(bool)
		}
	}
	.class public sealed ActionCompletedEventHandler
		extends [mscorlib]System.MulticastDelegate
	{
		.method public hidebysig specialname 
			instance void .ctor(object 'object', native int 'method')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void Invoke(object sender, class Avalon.Test.ComponentModel.ActionCompletedEventArgs args)
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance class [mscorlib]System.IAsyncResult BeginInvoke(object sender, class Avalon.Test.ComponentModel.ActionCompletedEventArgs args, class [mscorlib]System.AsyncCallback callback, object 'object')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void EndInvoke(class [mscorlib]System.IAsyncResult result)
			runtime 
		{
		}
	}
	.class public abstract sealed ControlPartHelper
		extends [mscorlib]System.Object
	{
		.method public static hidebysig 
			class [PresentationFramework]System.Windows.FrameworkElement FindPartById(class [PresentationFramework]System.Windows.Controls.Control curControl, string partId)
		{
			ret
		}
	}
	.class public ControlsLoader
		extends [mscorlib]System.Object
	{
		.method public hidebysig 
			instance void RunTest()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [PresentationFramework]System.Windows.Controls.StackPanel get_MainStackPanel()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_MainStackPanel(class [PresentationFramework]System.Windows.Controls.StackPanel 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.field static public class Avalon.Test.ComponentModel.ControlsLoader _hostApp
		.property instance class [PresentationFramework]System.Windows.Controls.StackPanel MainStackPanel()
		{
			.get instance class [PresentationFramework]System.Windows.Controls.StackPanel Avalon.Test.ComponentModel.ControlsLoader::get_MainStackPanel()
			.set instance void Avalon.Test.ComponentModel.ControlsLoader::set_MainStackPanel(class [PresentationFramework]System.Windows.Controls.StackPanel)
		}
	}
	.class public CountriesDataSource
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance class [WindowsBase]'System.Collections.ObjectModel.ObservableCollection`1'<class Avalon.Test.ComponentModel.CountryWithExtraInfo> get_Countries()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Countries(class [WindowsBase]'System.Collections.ObjectModel.ObservableCollection`1'<class Avalon.Test.ComponentModel.CountryWithExtraInfo> 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance class [WindowsBase]'System.Collections.ObjectModel.ObservableCollection`1'<class Avalon.Test.ComponentModel.CountryWithExtraInfo> Countries()
		{
			.get instance class [WindowsBase]'System.Collections.ObjectModel.ObservableCollection`1'<class Avalon.Test.ComponentModel.CountryWithExtraInfo> Avalon.Test.ComponentModel.CountriesDataSource::get_Countries()
			.set instance void Avalon.Test.ComponentModel.CountriesDataSource::set_Countries(class [WindowsBase]'System.Collections.ObjectModel.ObservableCollection`1'<class Avalon.Test.ComponentModel.CountryWithExtraInfo>)
		}
	}
	.class public Country
		extends [mscorlib]System.Object
		implements [System]System.ComponentModel.INotifyPropertyChanged
	{
		.method public hidebysig specialname 
			instance string get_CountryName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_CountryName(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Capital()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Capital(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [mscorlib]System.DateTime get_IndependenceDay()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_IndependenceDay(valuetype [mscorlib]System.DateTime 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_Population()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Population(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Avalon.Test.ComponentModel.GovernmentType get_Government()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Government(valuetype Avalon.Test.ComponentModel.GovernmentType 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void add_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void remove_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method family hidebysig 
			instance void OnPropertyChanged(string name)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string countryName, string capital, valuetype [mscorlib]System.DateTime independenceDay, int32 population, valuetype Avalon.Test.ComponentModel.GovernmentType government)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.event [System]System.ComponentModel.PropertyChangedEventHandler PropertyChanged
		{
			.addon instance void Avalon.Test.ComponentModel.Country::add_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler)
			.removeon instance void Avalon.Test.ComponentModel.Country::remove_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler)
		}
		.property instance string Capital()
		{
			.get instance string Avalon.Test.ComponentModel.Country::get_Capital()
			.set instance void Avalon.Test.ComponentModel.Country::set_Capital(string)
		}
		.property instance string CountryName()
		{
			.get instance string Avalon.Test.ComponentModel.Country::get_CountryName()
			.set instance void Avalon.Test.ComponentModel.Country::set_CountryName(string)
		}
		.property instance valuetype Avalon.Test.ComponentModel.GovernmentType Government()
		{
			.get instance valuetype Avalon.Test.ComponentModel.GovernmentType Avalon.Test.ComponentModel.Country::get_Government()
			.set instance void Avalon.Test.ComponentModel.Country::set_Government(valuetype Avalon.Test.ComponentModel.GovernmentType)
		}
		.property instance valuetype [mscorlib]System.DateTime IndependenceDay()
		{
			.get instance valuetype [mscorlib]System.DateTime Avalon.Test.ComponentModel.Country::get_IndependenceDay()
			.set instance void Avalon.Test.ComponentModel.Country::set_IndependenceDay(valuetype [mscorlib]System.DateTime)
		}
		.property instance int32 Population()
		{
			.get instance int32 Avalon.Test.ComponentModel.Country::get_Population()
			.set instance void Avalon.Test.ComponentModel.Country::set_Population(int32)
		}
	}
	.class public CountryWithExtraInfo
		extends Avalon.Test.ComponentModel.Country
	{
		.method public hidebysig specialname 
			instance string get_Region()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Region(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Hemisphere()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Hemisphere(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string countryName, string capital, valuetype [mscorlib]System.DateTime independenceDay, int32 population, valuetype Avalon.Test.ComponentModel.GovernmentType government, string region, string hemisphere)
		{
			ret
		}
		.property instance string Hemisphere()
		{
			.get instance string Avalon.Test.ComponentModel.CountryWithExtraInfo::get_Hemisphere()
			.set instance void Avalon.Test.ComponentModel.CountryWithExtraInfo::set_Hemisphere(string)
		}
		.property instance string Region()
		{
			.get instance string Avalon.Test.ComponentModel.CountryWithExtraInfo::get_Region()
			.set instance void Avalon.Test.ComponentModel.CountryWithExtraInfo::set_Region(string)
		}
	}
	.class public EarthDataSource
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance class [WindowsBase]'System.Collections.ObjectModel.ObservableCollection`1'<class Avalon.Test.ComponentModel.Hemisphere> get_Hemispheres()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Hemispheres(class [WindowsBase]'System.Collections.ObjectModel.ObservableCollection`1'<class Avalon.Test.ComponentModel.Hemisphere> 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance class [WindowsBase]'System.Collections.ObjectModel.ObservableCollection`1'<class Avalon.Test.ComponentModel.Hemisphere> Hemispheres()
		{
			.get instance class [WindowsBase]'System.Collections.ObjectModel.ObservableCollection`1'<class Avalon.Test.ComponentModel.Hemisphere> Avalon.Test.ComponentModel.EarthDataSource::get_Hemispheres()
			.set instance void Avalon.Test.ComponentModel.EarthDataSource::set_Hemispheres(class [WindowsBase]'System.Collections.ObjectModel.ObservableCollection`1'<class Avalon.Test.ComponentModel.Hemisphere>)
		}
	}
	.class public Finding
		extends Avalon.Test.ComponentModel.Utilities.InnerFinderBase
	{
		.method public hidebysig specialname 
			instance void .ctor(string path)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method family virtual hidebysig 
			instance object Find(object source)
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Path()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Path(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Avalon.Test.ComponentModel.TypePath get_TypePath()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_TypePath(class Avalon.Test.ComponentModel.TypePath 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_NamePath()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_NamePath(string 'value')
		{
			ret
		}
		.property instance string NamePath()
		{
			.get instance string Avalon.Test.ComponentModel.Finding::get_NamePath()
			.set instance void Avalon.Test.ComponentModel.Finding::set_NamePath(string)
		}
		.property instance string Path()
		{
			.get instance string Avalon.Test.ComponentModel.Finding::get_Path()
			.set instance void Avalon.Test.ComponentModel.Finding::set_Path(string)
		}
		.property instance class Avalon.Test.ComponentModel.TypePath TypePath()
		{
			.get instance class Avalon.Test.ComponentModel.TypePath Avalon.Test.ComponentModel.Finding::get_TypePath()
			.set instance void Avalon.Test.ComponentModel.Finding::set_TypePath(class Avalon.Test.ComponentModel.TypePath)
		}
	}
	.class public sealed GovernmentType
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Avalon.Test.ComponentModel.GovernmentType Democracy = int32(0x00000002)
		.field static public literal valuetype Avalon.Test.ComponentModel.GovernmentType Monarchy = int32(0x00000001)
		.field static public literal valuetype Avalon.Test.ComponentModel.GovernmentType Republic = int32(0x00000000)
	}
	.class public Hemisphere
		extends [mscorlib]System.Object
		implements [System]System.ComponentModel.INotifyPropertyChanged
	{
		.method public hidebysig specialname 
			instance string get_HemisphereName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_HemisphereName(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [WindowsBase]'System.Collections.ObjectModel.ObservableCollection`1'<class Avalon.Test.ComponentModel.Region> get_Regions()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Regions(class [WindowsBase]'System.Collections.ObjectModel.ObservableCollection`1'<class Avalon.Test.ComponentModel.Region> 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void add_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void remove_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string hemisphereName, class [WindowsBase]'System.Collections.ObjectModel.ObservableCollection`1'<class Avalon.Test.ComponentModel.Region> regions)
		{
			ret
		}
		.event [System]System.ComponentModel.PropertyChangedEventHandler PropertyChanged
		{
			.addon instance void Avalon.Test.ComponentModel.Hemisphere::add_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler)
			.removeon instance void Avalon.Test.ComponentModel.Hemisphere::remove_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler)
		}
		.property instance string HemisphereName()
		{
			.get instance string Avalon.Test.ComponentModel.Hemisphere::get_HemisphereName()
			.set instance void Avalon.Test.ComponentModel.Hemisphere::set_HemisphereName(string)
		}
		.property instance class [WindowsBase]'System.Collections.ObjectModel.ObservableCollection`1'<class Avalon.Test.ComponentModel.Region> Regions()
		{
			.get instance class [WindowsBase]'System.Collections.ObjectModel.ObservableCollection`1'<class Avalon.Test.ComponentModel.Region> Avalon.Test.ComponentModel.Hemisphere::get_Regions()
			.set instance void Avalon.Test.ComponentModel.Hemisphere::set_Regions(class [WindowsBase]'System.Collections.ObjectModel.ObservableCollection`1'<class Avalon.Test.ComponentModel.Region>)
		}
	}
	.class public interface abstract IAction
	{
		.method public virtual hidebysig newslot abstract 
			instance void Do(class [PresentationFramework]System.Windows.FrameworkElement frmElement, object[] actionParams)
		{
			.param [2]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
		}
	}
	.class public interface abstract IAsyncAction
		implements Avalon.Test.ComponentModel.IAction
	{
		.method public virtual hidebysig newslot abstract specialname 
			instance void add_OnActionCompleted(class Avalon.Test.ComponentModel.ActionCompletedEventHandler 'value')
			synchronized 
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void remove_OnActionCompleted(class Avalon.Test.ComponentModel.ActionCompletedEventHandler 'value')
			synchronized 
		{
		}
		.event Avalon.Test.ComponentModel.ActionCompletedEventHandler OnActionCompleted
		{
			.addon instance void Avalon.Test.ComponentModel.IAsyncAction::add_OnActionCompleted(class Avalon.Test.ComponentModel.ActionCompletedEventHandler)
			.removeon instance void Avalon.Test.ComponentModel.IAsyncAction::remove_OnActionCompleted(class Avalon.Test.ComponentModel.ActionCompletedEventHandler)
		}
	}
	.class public interface abstract IIntegrationTest
	{
		.method public virtual hidebysig newslot abstract 
			instance valuetype [TestRuntime]Microsoft.Test.Logging.TestResult Perform(object testElement, class [System.Xml]System.Xml.XmlElement variation)
		{
		}
	}
	.class public interface abstract IUnitTest
	{
		.method public virtual hidebysig newslot abstract 
			instance valuetype [TestRuntime]Microsoft.Test.Logging.TestResult Perform(object testElement, class [System.Xml]System.Xml.XmlElement variation)
		{
		}
	}
	.class public interface abstract IValidation
	{
		.method public virtual hidebysig newslot abstract 
			instance bool Validate(object[] validationParams)
		{
			.param [1]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
		}
	}
	.class public KeyboardInputAction
		extends [mscorlib]System.Object
		implements Avalon.Test.ComponentModel.IAction
	{
		.method public hidebysig specialname 
			instance string get_ActionName()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void Do(class [PresentationFramework]System.Windows.FrameworkElement frmElement, object[] actionParams)
		{
			.param [2]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance string ActionName()
		{
			.get instance string Avalon.Test.ComponentModel.KeyboardInputAction::get_ActionName()
		}
	}
	.class public KeyboardInputActionNoFocus
		extends [mscorlib]System.Object
		implements Avalon.Test.ComponentModel.IAction
	{
		.method public hidebysig specialname 
			instance string get_ActionName()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void Do(class [PresentationFramework]System.Windows.FrameworkElement frmElement, object[] actionParams)
		{
			.param [2]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance string ActionName()
		{
			.get instance string Avalon.Test.ComponentModel.KeyboardInputActionNoFocus::get_ActionName()
		}
	}
	.class public MenuItemSetupAction
		extends [mscorlib]System.Object
		implements Avalon.Test.ComponentModel.IAction
	{
		.method public hidebysig specialname 
			instance string get_ActionName()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void Do(class [PresentationFramework]System.Windows.FrameworkElement frmElement, object[] actionParams)
		{
			.param [2]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance string ActionName()
		{
			.get instance string Avalon.Test.ComponentModel.MenuItemSetupAction::get_ActionName()
		}
	}
	.class public MenuSetupAction
		extends [mscorlib]System.Object
		implements Avalon.Test.ComponentModel.IAction
	{
		.method public hidebysig specialname 
			instance string get_ActionName()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void Do(class [PresentationFramework]System.Windows.FrameworkElement frmElement, object[] actionParams)
		{
			.param [2]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance string ActionName()
		{
			.get instance string Avalon.Test.ComponentModel.MenuSetupAction::get_ActionName()
		}
	}
	.class public MouseClickCenterByTypeAction
		extends [mscorlib]System.Object
		implements Avalon.Test.ComponentModel.IAction
	{
		.method public final virtual hidebysig newslot 
			instance void Do(class [PresentationFramework]System.Windows.FrameworkElement frmElement, object[] actionParams)
		{
			.param [2]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public MouseInputAction
		extends [mscorlib]System.Object
		implements Avalon.Test.ComponentModel.IAction
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_ActionName()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void Do(class [PresentationFramework]System.Windows.FrameworkElement frmElement, object[] actionParams)
		{
			.param [2]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.property instance string ActionName()
		{
			.get instance string Avalon.Test.ComponentModel.MouseInputAction::get_ActionName()
		}
	}
	.class public MouseMoveCenterByTypeAction
		extends [mscorlib]System.Object
		implements Avalon.Test.ComponentModel.IAction
	{
		.method public final virtual hidebysig newslot 
			instance void Do(class [PresentationFramework]System.Windows.FrameworkElement frmElement, object[] actionParams)
		{
			.param [2]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public abstract sealed ObjectFactory
		extends [mscorlib]System.Object
	{
		.method public static hidebysig 
			object CreateObjectFromXaml(string xamlString)
		{
			ret
		}
		.method public static hidebysig 
			object CreateObjectFromTypeName(string objectName)
		{
			ret
		}
		.method public static hidebysig 
			object CreateObjectFromTypeName(string objectName, string[] assemblyNames, string[] namespaces)
		{
			ret
		}
		.method public static hidebysig 
			void SetObjectPropertyToObject(object obj, string propName, object propValObj)
		{
			ret
		}
		.method public static hidebysig 
			object GetObjectProperty(object obj, string propertyName)
		{
			ret
		}
		.method public static hidebysig 
			bool VerifyProperty(object obj, string propertyName, string propertyValue)
		{
			ret
		}
		.method public static hidebysig 
			bool CompareObjects(object a, object b)
		{
			ret
		}
	}
	.class public OpenSubMenuAction
		extends [mscorlib]System.Object
		implements Avalon.Test.ComponentModel.IAction
	{
		.method public hidebysig specialname 
			instance string get_ActionName()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void Do(class [PresentationFramework]System.Windows.FrameworkElement frmElement, object[] actionParams)
		{
			.param [2]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance string ActionName()
		{
			.get instance string Avalon.Test.ComponentModel.OpenSubMenuAction::get_ActionName()
		}
	}
	.class public abstract sealed QueueHelper
		extends [mscorlib]System.Object
	{
		.method public static hidebysig 
			void WaitTillTimeout(valuetype [mscorlib]System.TimeSpan timeout)
		{
			ret
		}
		.method public static hidebysig 
			void WaitTillQueueItemsProcessed()
		{
			ret
		}
	}
	.class public Region
		extends [mscorlib]System.Object
		implements [System]System.ComponentModel.INotifyPropertyChanged
	{
		.method public hidebysig specialname 
			instance string get_RegionName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_RegionName(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [WindowsBase]'System.Collections.ObjectModel.ObservableCollection`1'<class Avalon.Test.ComponentModel.Country> get_Countries()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Countries(class [WindowsBase]'System.Collections.ObjectModel.ObservableCollection`1'<class Avalon.Test.ComponentModel.Country> 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void add_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void remove_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string regionName, class [WindowsBase]'System.Collections.ObjectModel.ObservableCollection`1'<class Avalon.Test.ComponentModel.Country> countries)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.event [System]System.ComponentModel.PropertyChangedEventHandler PropertyChanged
		{
			.addon instance void Avalon.Test.ComponentModel.Region::add_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler)
			.removeon instance void Avalon.Test.ComponentModel.Region::remove_PropertyChanged(class [System]System.ComponentModel.PropertyChangedEventHandler)
		}
		.property instance class [WindowsBase]'System.Collections.ObjectModel.ObservableCollection`1'<class Avalon.Test.ComponentModel.Country> Countries()
		{
			.get instance class [WindowsBase]'System.Collections.ObjectModel.ObservableCollection`1'<class Avalon.Test.ComponentModel.Country> Avalon.Test.ComponentModel.Region::get_Countries()
			.set instance void Avalon.Test.ComponentModel.Region::set_Countries(class [WindowsBase]'System.Collections.ObjectModel.ObservableCollection`1'<class Avalon.Test.ComponentModel.Country>)
		}
		.property instance string RegionName()
		{
			.get instance string Avalon.Test.ComponentModel.Region::get_RegionName()
			.set instance void Avalon.Test.ComponentModel.Region::set_RegionName(string)
		}
	}
	.class public abstract sealed SetKeyboardLayout
		extends [mscorlib]System.Object
	{
		.method public static hidebysig 
			native int SafeActivateKeyboardLayout(native int hkl, int32 'flags')
		{
			ret
		}
		.method public static hidebysig 
			native int SafeLoadKeyboardLayout(string pwszKLID, int32 'flags')
		{
			ret
		}
	}
	.class public SliderSetup
		extends [mscorlib]System.Object
		implements Avalon.Test.ComponentModel.IAction
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_ActionName()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void Do(class [PresentationFramework]System.Windows.FrameworkElement frmElement, object[] actionParams)
		{
			.param [2]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.property instance string ActionName()
		{
			.get instance string Avalon.Test.ComponentModel.SliderSetup::get_ActionName()
		}
	}
	.class public abstract sealed StateTable
		extends [mscorlib]System.Object
	{
		.method public static hidebysig 
			void Add(string key, object 'value')
		{
			ret
		}
		.method public static hidebysig 
			object Get(string key)
		{
			ret
		}
		.method public static hidebysig 
			void RemoveAll()
		{
			ret
		}
		.method public static hidebysig 
			void Remove(string key)
		{
			ret
		}
		.method public static hidebysig 
			bool Contains(string key)
		{
			ret
		}
		.method public static hidebysig 
			void SetValue(string key, object 'value')
		{
			ret
		}
	}
	.class public TargetType
		extends [mscorlib]System.Attribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = { int32(4) }
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Type 'type')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]System.Type get_Target()
		{
			ret
		}
		.property instance class [mscorlib]System.Type Target()
		{
			.get instance class [mscorlib]System.Type Avalon.Test.ComponentModel.TargetType::get_Target()
		}
	}
	.class public abstract TestObject
		extends [WindowsBase]System.Windows.DependencyObject
		implements Avalon.Test.ComponentModel.Utilities.ITestStep
	{
		.method family static hidebysig 
			class [WindowsBase]System.Windows.DependencyProperty Register(string name, class [mscorlib]System.Type propertyType, class [mscorlib]System.Type ownerType)
		{
			ret
		}
		.method family static hidebysig 
			class [WindowsBase]System.Windows.DependencyProperty Register(string name, class [mscorlib]System.Type propertyType, class [mscorlib]System.Type ownerType, class [WindowsBase]System.Windows.PropertyMetadata propertyMetadata)
		{
			ret
		}
		.method family hidebysig 
			instance object GetProperty(class [WindowsBase]System.Windows.DependencyProperty dp)
		{
			ret
		}
		.method family hidebysig 
			instance void SetProperty(class [WindowsBase]System.Windows.DependencyProperty dp, object 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance object get_Target()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Target(object 'value')
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void Avalon.Test.ComponentModel.Utilities.ITestStep.Do(object testObject)
		{
			.override Avalon.Test.ComponentModel.Utilities.ITestStep::Do
			ret
		}
		.method family virtual hidebysig newslot abstract 
			instance void DoCore()
		{
		}
		.method family hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty TargetProperty
		.property instance object Target()
		{
			.get instance object Avalon.Test.ComponentModel.TestObject::get_Target()
			.set instance void Avalon.Test.ComponentModel.TestObject::set_Target(object)
		}
	}
	.class public sequential sealed TypeNode
		extends [mscorlib]System.ValueType
	{
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Type 'type', int32 index)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]System.Type get_Type()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_Index()
		{
			ret
		}

		//This private field was generated by ASMMETA as a placeholder and does not exist in the actual assembly.
		.field private int32 __Asmmeta_Private_Field
		.property instance int32 Index()
		{
			.get instance int32 Avalon.Test.ComponentModel.TypeNode::get_Index()
		}
		.property instance class [mscorlib]System.Type Type()
		{
			.get instance class [mscorlib]System.Type Avalon.Test.ComponentModel.TypeNode::get_Type()
		}
	}
	.class public TypeNodeConverter
		extends [System]System.ComponentModel.TypeConverter
	{
		.method public virtual hidebysig 
			instance bool CanConvertFrom(class [System]System.ComponentModel.ITypeDescriptorContext typeDescriptorContext, class [mscorlib]System.Type sourceType)
		{
			ret
		}
		.method public virtual hidebysig 
			instance object ConvertFrom(class [System]System.ComponentModel.ITypeDescriptorContext typeDescriptorContext, class [mscorlib]System.Globalization.CultureInfo cultureInfo, object source)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public TypePath
		extends class [mscorlib]'System.Collections.Generic.List`1'<valuetype Avalon.Test.ComponentModel.TypeNode>
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public TypePathConverter
		extends [System]System.ComponentModel.TypeConverter
	{
		.method public virtual hidebysig 
			instance bool CanConvertFrom(class [System]System.ComponentModel.ITypeDescriptorContext typeDescriptorContext, class [mscorlib]System.Type sourceType)
		{
			ret
		}
		.method public virtual hidebysig 
			instance object ConvertFrom(class [System]System.ComponentModel.ITypeDescriptorContext typeDescriptorContext, class [mscorlib]System.Globalization.CultureInfo cultureInfo, object source)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public abstract sealed VisualTreeUtils
		extends [mscorlib]System.Object
	{
		.method public static hidebysig 
			class [PresentationCore]System.Windows.UIElement FindRootVisual(class [PresentationCore]System.Windows.UIElement element)
		{
			ret
		}
		.method public static hidebysig 
			valuetype [WindowsBase]System.Windows.Rect GetPreviousArrangeRect(class [PresentationCore]System.Windows.UIElement element)
		{
			ret
		}
		.method public static hidebysig 
			object FindPartByType(class [PresentationCore]System.Windows.Media.Visual vis, class [mscorlib]System.Type visType, int32 index)
		{
			ret
		}
		.method public static hidebysig 
			class [mscorlib]System.Collections.ArrayList FindPartByType(class [PresentationCore]System.Windows.Media.Visual vis, class [mscorlib]System.Type visType)
		{
			ret
		}
		.method public static hidebysig 
			class [WindowsBase]System.Windows.DependencyObject FindPartByName(class [WindowsBase]System.Windows.DependencyObject ele, string name)
		{
			ret
		}
	}
	.class public abstract sealed XMLParser
		extends [mscorlib]System.Object
	{
		.method public static hidebysig 
			float64 ParseDouble(class [System.Xml]System.Xml.XmlNode node, string attr)
		{
			ret
		}
		.method public static hidebysig 
			int32 ParseInt(class [System.Xml]System.Xml.XmlNode node, string attr)
		{
			ret
		}
		.method public static hidebysig 
			bool ParseBool(class [System.Xml]System.Xml.XmlNode node, string attr)
		{
			ret
		}
		.method public static hidebysig 
			object ParseEnum(class [System.Xml]System.Xml.XmlNode node, string attr, class [mscorlib]System.Type t)
		{
			ret
		}
		.method public static hidebysig 
			float64 ParseDouble(string val)
		{
			ret
		}
		.method public static hidebysig 
			int32 ParseInt(string val)
		{
			ret
		}
		.method public static hidebysig 
			bool ParseBool(string val)
		{
			ret
		}
		.method public static hidebysig 
			object ParseEnum(string val, class [mscorlib]System.Type t)
		{
			ret
		}
		.method public static hidebysig 
			string ParseString(class [System.Xml]System.Xml.XmlNode node, string attr)
		{
			ret
		}
		.method public static hidebysig 
			object ParseObject(class [System.Xml]System.Xml.XmlNode xmlNode)
		{
			ret
		}
		.method public static hidebysig 
			object ParseObjectWithDefaultNS(class [System.Xml]System.Xml.XmlNode xmlNode)
		{
			ret
		}
		.method public static hidebysig 
			object ParseObject(string xamlString)
		{
			ret
		}
	}
}
.namespace Avalon.Test.ComponentModel.Actions
{
	.class public abstract ActionAdapter
		extends Avalon.Test.ComponentModel.TestObject
		implements Avalon.Test.ComponentModel.IAction
	{
		.method private final virtual hidebysig newslot 
			instance void Avalon.Test.ComponentModel.IAction.Do(class [PresentationFramework]System.Windows.FrameworkElement frmElement, object[] actionParams)
		{
			.override Avalon.Test.ComponentModel.IAction::Do
			.param [2]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method family hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public abstract ActionSeparator
		extends [mscorlib]System.Object
		implements Avalon.Test.ComponentModel.IAction, Avalon.Test.ComponentModel.Utilities.ITestStep
	{
		.method public final virtual hidebysig newslot 
			instance void Do(class [PresentationFramework]System.Windows.FrameworkElement frmElement, object[] actionParams)
		{
			.param [2]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method public virtual hidebysig newslot abstract 
			instance void Do(object testObject)
		{
		}
		.method family hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public AddResourcesAction
		extends Avalon.Test.ComponentModel.Actions.ActionAdapter
	{
		.method public hidebysig specialname 
			instance string get_Key()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Key(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance object get_Value()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Value(object 'value')
		{
			ret
		}
		.method family virtual hidebysig 
			instance void DoCore()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance string Key()
		{
			.get instance string Avalon.Test.ComponentModel.Actions.AddResourcesAction::get_Key()
			.set instance void Avalon.Test.ComponentModel.Actions.AddResourcesAction::set_Key(string)
		}
		.property instance object Value()
		{
			.get instance object Avalon.Test.ComponentModel.Actions.AddResourcesAction::get_Value()
			.set instance void Avalon.Test.ComponentModel.Actions.AddResourcesAction::set_Value(object)
		}
	}
	.class public AddScrollChangedEventAction
		extends [mscorlib]System.Object
		implements Avalon.Test.ComponentModel.IAction
	{
		.method public final virtual hidebysig newslot 
			instance void Do(class [PresentationFramework]System.Windows.FrameworkElement frmElement, object[] actionParams)
		{
			.param [2]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public ChangeGroupingAction
		extends Avalon.Test.ComponentModel.Actions.ActionAdapter
	{
		.method family virtual hidebysig 
			instance void DoCore()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [WindowsBase]System.ComponentModel.GroupDescription get_Group()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Group(class [WindowsBase]System.ComponentModel.GroupDescription 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance class [WindowsBase]System.ComponentModel.GroupDescription Group()
		{
			.get instance class [WindowsBase]System.ComponentModel.GroupDescription Avalon.Test.ComponentModel.Actions.ChangeGroupingAction::get_Group()
			.set instance void Avalon.Test.ComponentModel.Actions.ChangeGroupingAction::set_Group(class [WindowsBase]System.ComponentModel.GroupDescription)
		}
	}
	.class public sealed ChangeThemeAction
		extends Avalon.Test.ComponentModel.Actions.ActionAdapter
	{
		.method public hidebysig specialname 
			instance void set_Theme(valuetype Avalon.Test.ComponentModel.Actions.WindowTheme 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Avalon.Test.ComponentModel.Actions.WindowTheme get_Theme()
		{
			ret
		}
		.method family virtual hidebysig 
			instance void DoCore()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance valuetype Avalon.Test.ComponentModel.Actions.WindowTheme Theme()
		{
			.get instance valuetype Avalon.Test.ComponentModel.Actions.WindowTheme Avalon.Test.ComponentModel.Actions.ChangeThemeAction::get_Theme()
			.set instance void Avalon.Test.ComponentModel.Actions.ChangeThemeAction::set_Theme(valuetype Avalon.Test.ComponentModel.Actions.WindowTheme)
		}
	}
	.class public ClickAction
		extends [mscorlib]System.Object
		implements Avalon.Test.ComponentModel.IAction
	{
		.method public final virtual hidebysig newslot 
			instance void Do(class [PresentationFramework]System.Windows.FrameworkElement frmElement, object[] actionParams)
		{
			.param [2]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public ColtrolSetPropertyActionBase
		extends [mscorlib]System.Object
	{
		.method family hidebysig 
			instance void SetPropertyOntoObject(object obj, class [PresentationFramework]System.Windows.FrameworkElement frameworkElement, string propertyPath, string valueToSet)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public ControlKeyInputAction
		extends [mscorlib]System.Object
		implements Avalon.Test.ComponentModel.IAction
	{
		.method public final virtual hidebysig newslot 
			instance void Do(class [PresentationFramework]System.Windows.FrameworkElement frmElement, object[] actionParams)
		{
			.param [2]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public ControlMethodInvokeAction
		extends [mscorlib]System.Object
		implements Avalon.Test.ComponentModel.IAction
	{
		.method public final virtual hidebysig newslot 
			instance void Do(class [PresentationFramework]System.Windows.FrameworkElement frmElement, object[] actionParams)
		{
			.param [2]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public ControlMethodInvokeAction2
		extends [mscorlib]System.Object
		implements Avalon.Test.ComponentModel.IAction
	{
		.method public final virtual hidebysig newslot 
			instance void Do(class [PresentationFramework]System.Windows.FrameworkElement frmElement, object[] actionParams)
		{
			.param [2]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public ControlPopulateDataAction
		extends [mscorlib]System.Object
		implements Avalon.Test.ComponentModel.IAction
	{
		.method public final virtual hidebysig newslot 
			instance void Do(class [PresentationFramework]System.Windows.FrameworkElement frmElement, object[] actionParams)
		{
			.param [2]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public ControlPropertyAction
		extends [mscorlib]System.Object
		implements Avalon.Test.ComponentModel.IAction
	{
		.method public final virtual hidebysig newslot 
			instance void Do(class [PresentationFramework]System.Windows.FrameworkElement frmElement, object[] actionParams)
		{
			.param [2]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public ControlPropertyActionById
		extends [mscorlib]System.Object
		implements Avalon.Test.ComponentModel.IAction
	{
		.method public final virtual hidebysig newslot 
			instance void Do(class [PresentationFramework]System.Windows.FrameworkElement frmElement, object[] actionParams)
		{
			.param [2]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public ControlSetBindingAction
		extends [mscorlib]System.Object
		implements Avalon.Test.ComponentModel.IAction
	{
		.method public final virtual hidebysig newslot 
			instance void Do(class [PresentationFramework]System.Windows.FrameworkElement frmElement, object[] actionParams)
		{
			.param [2]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public ControlSetIndexPartPropertyAction
		extends Avalon.Test.ComponentModel.Actions.ColtrolSetPropertyActionBase
		implements Avalon.Test.ComponentModel.IAction
	{
		.method public final virtual hidebysig newslot 
			instance void Do(class [PresentationFramework]System.Windows.FrameworkElement frmElement, object[] actionParams)
		{
			.param [2]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public ControlSetPropertyAction
		extends Avalon.Test.ComponentModel.Actions.ColtrolSetPropertyActionBase
		implements Avalon.Test.ComponentModel.IAction
	{
		.method public final virtual hidebysig newslot 
			instance void Do(class [PresentationFramework]System.Windows.FrameworkElement frmElement, object[] actionParams)
		{
			.param [2]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public abstract ControlSetSelector
		extends [mscorlib]System.Object
		implements Avalon.Test.ComponentModel.IAction
	{
		.method public final virtual hidebysig newslot 
			instance void Do(class [PresentationFramework]System.Windows.FrameworkElement frmElement, object[] actionParams)
		{
			.param [2]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method public virtual hidebysig newslot 
			instance object GetSourceValue(class [PresentationFramework]System.Windows.FrameworkElement element, string resourceID)
		{
			ret
		}
		.method family hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public ControlSetStyleSelector
		extends Avalon.Test.ComponentModel.Actions.ControlSetSelector
	{
		.class nested public StyleSelectorFactory
			extends [PresentationFramework]System.Windows.Controls.StyleSelector
		{
			.method public hidebysig specialname 
				instance void .ctor(class [PresentationFramework]System.Windows.Style style)
			{
				ret
			}
			.method public virtual hidebysig 
				instance class [PresentationFramework]System.Windows.Style SelectStyle(object item, class [WindowsBase]System.Windows.DependencyObject container)
			{
				ret
			}
		}
		.method public virtual hidebysig 
			instance object GetSourceValue(class [PresentationFramework]System.Windows.FrameworkElement element, string resourceID)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public ControlSetTemplateSelector
		extends Avalon.Test.ComponentModel.Actions.ControlSetSelector
	{
		.class nested public TemplateSelectorFactory
			extends [PresentationFramework]System.Windows.Controls.DataTemplateSelector
		{
			.method public hidebysig specialname 
				instance void .ctor(class [PresentationFramework]System.Windows.DataTemplate template)
			{
				ret
			}
			.method public virtual hidebysig 
				instance class [PresentationFramework]System.Windows.DataTemplate SelectTemplate(object item, class [WindowsBase]System.Windows.DependencyObject container)
			{
				ret
			}
		}
		.method public virtual hidebysig 
			instance object GetSourceValue(class [PresentationFramework]System.Windows.FrameworkElement element, string resourceID)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public ControlVisualIndexPartClickAction
		extends [mscorlib]System.Object
		implements Avalon.Test.ComponentModel.IAction
	{
		.method public final virtual hidebysig newslot 
			instance void Do(class [PresentationFramework]System.Windows.FrameworkElement frmElement, object[] actionParams)
		{
			.param [2]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public ControlVisualPartClickAction
		extends [mscorlib]System.Object
		implements Avalon.Test.ComponentModel.IAction
	{
		.method public final virtual hidebysig newslot 
			instance void Do(class [PresentationFramework]System.Windows.FrameworkElement frmElement, object[] actionParams)
		{
			.param [2]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public CustomListViewSortor
		extends Avalon.Test.ComponentModel.Validations.ControlEventTestBase
		implements Avalon.Test.ComponentModel.Validations.IEventHandler, Avalon.Test.ComponentModel.IValidation
	{
		.method public final virtual hidebysig newslot 
			instance void OnEvent(object sender, class [mscorlib]System.EventArgs args)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance bool Validate(object[] validationParams)
		{
			.param [1]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method public final virtual hidebysig specialname 
			instance class Avalon.Test.ComponentModel.Validations.IEventHandler get_ValidationObject()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance class Avalon.Test.ComponentModel.Validations.IEventHandler ValidationObject()
		{
			.get instance class Avalon.Test.ComponentModel.Validations.IEventHandler Avalon.Test.ComponentModel.Actions.CustomListViewSortor::get_ValidationObject()
		}
	}
	.class public DispatcherAction
		extends Avalon.Test.ComponentModel.Actions.ActionAdapter
	{
		.method family virtual hidebysig 
			instance void DoCore()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Avalon.Test.ComponentModel.Utilities.IFinder get_Finder()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Finder(class Avalon.Test.ComponentModel.Utilities.IFinder 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]'System.Collections.Generic.List`1'<class Avalon.Test.ComponentModel.Utilities.ITestStep> get_Actions()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance class [mscorlib]'System.Collections.Generic.List`1'<class Avalon.Test.ComponentModel.Utilities.ITestStep> Actions()
		{
			.get instance class [mscorlib]'System.Collections.Generic.List`1'<class Avalon.Test.ComponentModel.Utilities.ITestStep> Avalon.Test.ComponentModel.Actions.DispatcherAction::get_Actions()
		}
		.property instance class Avalon.Test.ComponentModel.Utilities.IFinder Finder()
		{
			.get instance class Avalon.Test.ComponentModel.Utilities.IFinder Avalon.Test.ComponentModel.Actions.DispatcherAction::get_Finder()
			.set instance void Avalon.Test.ComponentModel.Actions.DispatcherAction::set_Finder(class Avalon.Test.ComponentModel.Utilities.IFinder)
		}
	}
	.class public FocusAction
		extends Avalon.Test.ComponentModel.Actions.ActionAdapter
	{
		.method family virtual hidebysig 
			instance void DoCore()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public sealed ItemMoveAction
		extends Avalon.Test.ComponentModel.Actions.ActionAdapter
	{
		.method public hidebysig specialname 
			instance object get_From()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_From(object 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance object get_To()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_To(object 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_FromIndex()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_FromIndex(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ToIndex()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ToIndex(int32 'value')
		{
			ret
		}
		.method family virtual hidebysig 
			instance void DoCore()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty FromProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty ToProperty
		.property instance object From()
		{
			.get instance object Avalon.Test.ComponentModel.Actions.ItemMoveAction::get_From()
			.set instance void Avalon.Test.ComponentModel.Actions.ItemMoveAction::set_From(object)
		}
		.property instance int32 FromIndex()
		{
			.get instance int32 Avalon.Test.ComponentModel.Actions.ItemMoveAction::get_FromIndex()
			.set instance void Avalon.Test.ComponentModel.Actions.ItemMoveAction::set_FromIndex(int32)
		}
		.property instance object To()
		{
			.get instance object Avalon.Test.ComponentModel.Actions.ItemMoveAction::get_To()
			.set instance void Avalon.Test.ComponentModel.Actions.ItemMoveAction::set_To(object)
		}
		.property instance int32 ToIndex()
		{
			.get instance int32 Avalon.Test.ComponentModel.Actions.ItemMoveAction::get_ToIndex()
			.set instance void Avalon.Test.ComponentModel.Actions.ItemMoveAction::set_ToIndex(int32)
		}
	}
	.class public sealed MethodInvoker
		extends Avalon.Test.ComponentModel.TestObject
	{
		.method family virtual hidebysig 
			instance void DoCore()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Method()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Method(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]'System.Collections.Generic.List`1'<object> get_Parameters()
		{
			ret
		}
		.method public hidebysig specialname 
			instance object get_Return()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Return(object 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance string Method()
		{
			.get instance string Avalon.Test.ComponentModel.Actions.MethodInvoker::get_Method()
			.set instance void Avalon.Test.ComponentModel.Actions.MethodInvoker::set_Method(string)
		}
		.property instance class [mscorlib]'System.Collections.Generic.List`1'<object> Parameters()
		{
			.get instance class [mscorlib]'System.Collections.Generic.List`1'<object> Avalon.Test.ComponentModel.Actions.MethodInvoker::get_Parameters()
		}
		.property instance object Return()
		{
			.get instance object Avalon.Test.ComponentModel.Actions.MethodInvoker::get_Return()
			.set instance void Avalon.Test.ComponentModel.Actions.MethodInvoker::set_Return(object)
		}
	}
	.class public MouseClickAction
		extends [mscorlib]System.Object
		implements Avalon.Test.ComponentModel.IAction
	{
		.method public final virtual hidebysig newslot 
			instance void Do(class [PresentationFramework]System.Windows.FrameworkElement frmElement, object[] actionParams)
		{
			.param [2]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public MouseClickCenterAction
		extends [mscorlib]System.Object
		implements Avalon.Test.ComponentModel.IAction
	{
		.method public final virtual hidebysig newslot 
			instance void Do(class [PresentationFramework]System.Windows.FrameworkElement frmElement, object[] actionParams)
		{
			.param [2]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public MouseDoubleClickCenterAction
		extends [mscorlib]System.Object
		implements Avalon.Test.ComponentModel.IAction
	{
		.method public final virtual hidebysig newslot 
			instance void Do(class [PresentationFramework]System.Windows.FrameworkElement frmElement, object[] actionParams)
		{
			.param [2]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public MouseDragAction
		extends [mscorlib]System.Object
		implements Avalon.Test.ComponentModel.IAction
	{
		.method public final virtual hidebysig newslot 
			instance void Do(class [PresentationFramework]System.Windows.FrameworkElement frmElement, object[] actionParams)
		{
			.param [2]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public MouseLeftClickAction
		extends [mscorlib]System.Object
		implements Avalon.Test.ComponentModel.IAction
	{
		.method public final virtual hidebysig newslot 
			instance void Do(class [PresentationFramework]System.Windows.FrameworkElement frmElement, object[] actionParams)
		{
			.param [2]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public MouseLeftDownByIDAction
		extends [mscorlib]System.Object
		implements Avalon.Test.ComponentModel.IAction
	{
		.method public final virtual hidebysig newslot 
			instance void Do(class [PresentationFramework]System.Windows.FrameworkElement frmElement, object[] actionParams)
		{
			.param [2]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public MouseLeftUpByIDAction
		extends [mscorlib]System.Object
		implements Avalon.Test.ComponentModel.IAction
	{
		.method public final virtual hidebysig newslot 
			instance void Do(class [PresentationFramework]System.Windows.FrameworkElement frmElement, object[] actionParams)
		{
			.param [2]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public MouseMoveByIDAction
		extends [mscorlib]System.Object
		implements Avalon.Test.ComponentModel.IAction
	{
		.method public final virtual hidebysig newslot 
			instance void Do(class [PresentationFramework]System.Windows.FrameworkElement frmElement, object[] actionParams)
		{
			.param [2]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public MoveAction
		extends [mscorlib]System.Object
		implements Avalon.Test.ComponentModel.IAction
	{
		.method public final virtual hidebysig newslot 
			instance void Do(class [PresentationFramework]System.Windows.FrameworkElement frmElement, object[] actionParams)
		{
			.param [2]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public ParserAttribute
		extends [mscorlib]System.Attribute
	{
		.method public hidebysig specialname 
			instance void .ctor(string[] properties)
		{
			.param [1]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance void Parse(object parseObject, object[] parseParams)
		{
			.param [2]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance string[] get_Properties()
		{
			ret
		}
		.property instance string[] Properties()
		{
			.get instance string[] Avalon.Test.ComponentModel.Actions.ParserAttribute::get_Properties()
		}
	}
	.class public PropertySetAction
		extends Avalon.Test.ComponentModel.Actions.ActionAdapter
	{
		.method public hidebysig specialname 
			instance string get_PropertyName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_PropertyName(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance object get_Value()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Value(object 'value')
		{
			ret
		}
		.method family virtual hidebysig 
			instance void DoCore()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance string PropertyName()
		{
			.get instance string Avalon.Test.ComponentModel.Actions.PropertySetAction::get_PropertyName()
			.set instance void Avalon.Test.ComponentModel.Actions.PropertySetAction::set_PropertyName(string)
		}
		.property instance object Value()
		{
			.get instance object Avalon.Test.ComponentModel.Actions.PropertySetAction::get_Value()
			.set instance void Avalon.Test.ComponentModel.Actions.PropertySetAction::set_Value(object)
		}
	}
	.class public PropertySwapAction
		extends Avalon.Test.ComponentModel.Actions.ActionAdapter
	{
		.method family virtual hidebysig 
			instance void DoCore()
		{
			ret
		}
		.method public hidebysig specialname 
			instance object get_First()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_First(object 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance object get_Second()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Second(object 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_PropertyName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_PropertyName(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty FirstProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty SecondProperty
		.property instance object First()
		{
			.get instance object Avalon.Test.ComponentModel.Actions.PropertySwapAction::get_First()
			.set instance void Avalon.Test.ComponentModel.Actions.PropertySwapAction::set_First(object)
		}
		.property instance string PropertyName()
		{
			.get instance string Avalon.Test.ComponentModel.Actions.PropertySwapAction::get_PropertyName()
			.set instance void Avalon.Test.ComponentModel.Actions.PropertySwapAction::set_PropertyName(string)
		}
		.property instance object Second()
		{
			.get instance object Avalon.Test.ComponentModel.Actions.PropertySwapAction::get_Second()
			.set instance void Avalon.Test.ComponentModel.Actions.PropertySwapAction::set_Second(object)
		}
	}
	.class public RamdonDataSource
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance void set_ObjectType(class [mscorlib]System.Type 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]System.Type get_ObjectType()
		{
			ret
		}
		.method public hidebysig specialname 
			instance object get_ObjectWithType()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]System.Collections.IList get_ObjectListWithType()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ConfigurationFileName(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_ReadOnlyStringProperty1()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_ReadOnlyStringProperty2()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_StringProperty1(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_StringProperty1()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_StringProperty2(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_StringProperty2()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [mscorlib]System.DateTime get_DateTimeProperty1()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_DateTimeProperty1(valuetype [mscorlib]System.DateTime 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [mscorlib]System.DateTime get_DateTimeProperty2()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_DateTimeProperty2(valuetype [mscorlib]System.DateTime 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]System.Collections.IList get_DateList()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]System.Collections.IList get_StringList()
		{
			ret
		}
		.property instance string ConfigurationFileName()
		{
			.set instance void Avalon.Test.ComponentModel.Actions.RamdonDataSource::set_ConfigurationFileName(string)
		}
		.property instance class [mscorlib]System.Collections.IList DateList()
		{
			.get instance class [mscorlib]System.Collections.IList Avalon.Test.ComponentModel.Actions.RamdonDataSource::get_DateList()
		}
		.property instance valuetype [mscorlib]System.DateTime DateTimeProperty1()
		{
			.get instance valuetype [mscorlib]System.DateTime Avalon.Test.ComponentModel.Actions.RamdonDataSource::get_DateTimeProperty1()
			.set instance void Avalon.Test.ComponentModel.Actions.RamdonDataSource::set_DateTimeProperty1(valuetype [mscorlib]System.DateTime)
		}
		.property instance valuetype [mscorlib]System.DateTime DateTimeProperty2()
		{
			.get instance valuetype [mscorlib]System.DateTime Avalon.Test.ComponentModel.Actions.RamdonDataSource::get_DateTimeProperty2()
			.set instance void Avalon.Test.ComponentModel.Actions.RamdonDataSource::set_DateTimeProperty2(valuetype [mscorlib]System.DateTime)
		}
		.property instance class [mscorlib]System.Collections.IList ObjectListWithType()
		{
			.get instance class [mscorlib]System.Collections.IList Avalon.Test.ComponentModel.Actions.RamdonDataSource::get_ObjectListWithType()
		}
		.property instance class [mscorlib]System.Type ObjectType()
		{
			.get instance class [mscorlib]System.Type Avalon.Test.ComponentModel.Actions.RamdonDataSource::get_ObjectType()
			.set instance void Avalon.Test.ComponentModel.Actions.RamdonDataSource::set_ObjectType(class [mscorlib]System.Type)
		}
		.property instance object ObjectWithType()
		{
			.get instance object Avalon.Test.ComponentModel.Actions.RamdonDataSource::get_ObjectWithType()
		}
		.property instance string ReadOnlyStringProperty1()
		{
			.get instance string Avalon.Test.ComponentModel.Actions.RamdonDataSource::get_ReadOnlyStringProperty1()
		}
		.property instance string ReadOnlyStringProperty2()
		{
			.get instance string Avalon.Test.ComponentModel.Actions.RamdonDataSource::get_ReadOnlyStringProperty2()
		}
		.property instance class [mscorlib]System.Collections.IList StringList()
		{
			.get instance class [mscorlib]System.Collections.IList Avalon.Test.ComponentModel.Actions.RamdonDataSource::get_StringList()
		}
		.property instance string StringProperty1()
		{
			.get instance string Avalon.Test.ComponentModel.Actions.RamdonDataSource::get_StringProperty1()
			.set instance void Avalon.Test.ComponentModel.Actions.RamdonDataSource::set_StringProperty1(string)
		}
		.property instance string StringProperty2()
		{
			.get instance string Avalon.Test.ComponentModel.Actions.RamdonDataSource::get_StringProperty2()
			.set instance void Avalon.Test.ComponentModel.Actions.RamdonDataSource::set_StringProperty2(string)
		}
	}
	.class public RemoveResourcesAction
		extends Avalon.Test.ComponentModel.Actions.ActionAdapter
	{
		.method family virtual hidebysig 
			instance void DoCore()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Key()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Key(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance string Key()
		{
			.get instance string Avalon.Test.ComponentModel.Actions.RemoveResourcesAction::get_Key()
			.set instance void Avalon.Test.ComponentModel.Actions.RemoveResourcesAction::set_Key(string)
		}
	}
	.class public SetColumnBindingAction
		extends Avalon.Test.ComponentModel.TestObject
	{
		.method family virtual hidebysig 
			instance void DoCore()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Path(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Path()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance string Path()
		{
			.get instance string Avalon.Test.ComponentModel.Actions.SetColumnBindingAction::get_Path()
			.set instance void Avalon.Test.ComponentModel.Actions.SetColumnBindingAction::set_Path(string)
		}
	}
	.class public ToolBarTray_InsertChild
		extends [mscorlib]System.Object
		implements Avalon.Test.ComponentModel.IAction
	{
		.method public final virtual hidebysig newslot 
			instance void Do(class [PresentationFramework]System.Windows.FrameworkElement frmElement, object[] actionParams)
		{
			.param [2]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public ToolBarTray_SetIsLocked
		extends [mscorlib]System.Object
		implements Avalon.Test.ComponentModel.IAction
	{
		.method public final virtual hidebysig newslot 
			instance void Do(class [PresentationFramework]System.Windows.FrameworkElement frmElement, object[] actionParams)
		{
			.param [2]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public ToolBar_SetOverflowMode
		extends [mscorlib]System.Object
		implements Avalon.Test.ComponentModel.IAction
	{
		.method public final virtual hidebysig newslot 
			instance void Do(class [PresentationFramework]System.Windows.FrameworkElement frmElement, object[] actionParams)
		{
			.param [2]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public WaitAction
		extends Avalon.Test.ComponentModel.Actions.ActionSeparator
	{
		.method public virtual hidebysig 
			instance void Do(object testObject)
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [mscorlib]System.TimeSpan get_TimeToWait()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_TimeToWait(valuetype [mscorlib]System.TimeSpan 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance valuetype [mscorlib]System.TimeSpan TimeToWait()
		{
			.get instance valuetype [mscorlib]System.TimeSpan Avalon.Test.ComponentModel.Actions.WaitAction::get_TimeToWait()
			.set instance void Avalon.Test.ComponentModel.Actions.WaitAction::set_TimeToWait(valuetype [mscorlib]System.TimeSpan)
		}
	}
	.class public WindowPositionResizeAction
		extends [mscorlib]System.Object
		implements Avalon.Test.ComponentModel.IAction
	{
		.method public final virtual hidebysig newslot 
			instance void Do(class [PresentationFramework]System.Windows.FrameworkElement frmElement, object[] actionParams)
		{
			.param [2]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method public static hidebysig 
			class [PresentationFramework]System.Windows.Window GetParentWindow(class [PresentationFramework]System.Windows.FrameworkElement frmElement)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public sealed WindowTheme
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Avalon.Test.ComponentModel.Actions.WindowTheme Classic = int32(0x00000000)
		.field static public literal valuetype Avalon.Test.ComponentModel.Actions.WindowTheme Luna = int32(0x00000001)
	}
}
.namespace Avalon.Test.ComponentModel.CustomControls
{
	.class public CleanUpVirtualizedItemEventArgs
		extends [PresentationCore]System.Windows.RoutedEventArgs
	{
		.method public hidebysig specialname 
			instance object get_Value()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [PresentationCore]System.Windows.UIElement get_UIElement()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_Cancel()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Cancel(bool 'value')
		{
			ret
		}
		.property instance bool Cancel()
		{
			.get instance bool Avalon.Test.ComponentModel.CustomControls.CleanUpVirtualizedItemEventArgs::get_Cancel()
			.set instance void Avalon.Test.ComponentModel.CustomControls.CleanUpVirtualizedItemEventArgs::set_Cancel(bool)
		}
		.property instance class [PresentationCore]System.Windows.UIElement UIElement()
		{
			.get instance class [PresentationCore]System.Windows.UIElement Avalon.Test.ComponentModel.CustomControls.CleanUpVirtualizedItemEventArgs::get_UIElement()
		}
		.property instance object Value()
		{
			.get instance object Avalon.Test.ComponentModel.CustomControls.CleanUpVirtualizedItemEventArgs::get_Value()
		}
	}
	.class public sealed CleanUpVirtualizedItemEventHandler
		extends [mscorlib]System.MulticastDelegate
	{
		.method public hidebysig specialname 
			instance void .ctor(object 'object', native int 'method')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void Invoke(object sender, class Avalon.Test.ComponentModel.CustomControls.CleanUpVirtualizedItemEventArgs e)
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance class [mscorlib]System.IAsyncResult BeginInvoke(object sender, class Avalon.Test.ComponentModel.CustomControls.CleanUpVirtualizedItemEventArgs e, class [mscorlib]System.AsyncCallback callback, object 'object')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void EndInvoke(class [mscorlib]System.IAsyncResult result)
			runtime 
		{
		}
	}
	.class public VirtualizingStackPanel
		extends [PresentationFramework]System.Windows.Controls.VirtualizingPanel
		implements [PresentationFramework]System.Windows.Controls.Primitives.IScrollInfo
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void LineUp()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void LineDown()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void LineLeft()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void LineRight()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void PageUp()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void PageDown()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void PageLeft()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void PageRight()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void MouseWheelUp()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void MouseWheelDown()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void MouseWheelLeft()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void MouseWheelRight()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void SetHorizontalOffset(float64 offset)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void SetVerticalOffset(float64 offset)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance valuetype [WindowsBase]System.Windows.Rect MakeVisible(class [PresentationCore]System.Windows.Media.Visual visual, valuetype [WindowsBase]System.Windows.Rect rectangle)
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [PresentationFramework]System.Windows.Controls.Orientation get_Orientation()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Orientation(valuetype [PresentationFramework]System.Windows.Controls.Orientation 'value')
		{
			ret
		}
		.method public static hidebysig 
			bool GetIsVirtualizing(class [WindowsBase]System.Windows.DependencyObject o)
		{
			ret
		}
		.method public static hidebysig 
			void SetIsVirtualizing(class [WindowsBase]System.Windows.DependencyObject o, bool 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_CanHorizontallyScroll()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void set_CanHorizontallyScroll(bool 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_CanVerticallyScroll()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void set_CanVerticallyScroll(bool 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance float64 get_ExtentWidth()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance float64 get_ExtentHeight()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance float64 get_ViewportWidth()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance float64 get_ViewportHeight()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance float64 get_HorizontalOffset()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance float64 get_VerticalOffset()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance class [PresentationFramework]System.Windows.Controls.ScrollViewer get_ScrollOwner()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void set_ScrollOwner(class [PresentationFramework]System.Windows.Controls.ScrollViewer 'value')
		{
			ret
		}
		.method public static hidebysig 
			void AddCleanUpVirtualizedItemHandler(class [PresentationCore]System.Windows.UIElement element, class Avalon.Test.ComponentModel.CustomControls.CleanUpVirtualizedItemEventHandler 'handler')
		{
			ret
		}
		.method public static hidebysig 
			void RemoveCleanUpVirtualizedItemHandler(class [PresentationCore]System.Windows.UIElement element, class Avalon.Test.ComponentModel.CustomControls.CleanUpVirtualizedItemEventHandler 'handler')
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void OnCleanUpVirtualizedItem(class Avalon.Test.ComponentModel.CustomControls.CleanUpVirtualizedItemEventArgs e)
		{
			ret
		}
		.method family virtual hidebysig 
			instance valuetype [WindowsBase]System.Windows.Size MeasureOverride(valuetype [WindowsBase]System.Windows.Size constraint)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnItemsChanged(object sender, class [PresentationFramework]System.Windows.Controls.Primitives.ItemsChangedEventArgs args)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnClearChildren()
		{
			ret
		}
		.method family virtual hidebysig 
			instance valuetype [WindowsBase]System.Windows.Size ArrangeOverride(valuetype [WindowsBase]System.Windows.Size arrangeSize)
		{
			ret
		}
		.field static public initonly class [PresentationCore]System.Windows.RoutedEvent CleanUpVirtualizedItemEvent
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty IsVirtualizingProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty OrientationProperty
		.property instance bool CanHorizontallyScroll()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(bool) = { bool(false) }
			.get instance bool Avalon.Test.ComponentModel.CustomControls.VirtualizingStackPanel::get_CanHorizontallyScroll()
			.set instance void Avalon.Test.ComponentModel.CustomControls.VirtualizingStackPanel::set_CanHorizontallyScroll(bool)
		}
		.property instance bool CanVerticallyScroll()
		{
			.custom instance void [System]System.ComponentModel.DefaultValueAttribute::.ctor(bool) = { bool(false) }
			.get instance bool Avalon.Test.ComponentModel.CustomControls.VirtualizingStackPanel::get_CanVerticallyScroll()
			.set instance void Avalon.Test.ComponentModel.CustomControls.VirtualizingStackPanel::set_CanVerticallyScroll(bool)
		}
		.property instance float64 ExtentHeight()
		{
			.get instance float64 Avalon.Test.ComponentModel.CustomControls.VirtualizingStackPanel::get_ExtentHeight()
		}
		.property instance float64 ExtentWidth()
		{
			.get instance float64 Avalon.Test.ComponentModel.CustomControls.VirtualizingStackPanel::get_ExtentWidth()
		}
		.property instance float64 HorizontalOffset()
		{
			.custom instance void [System]System.ComponentModel.DesignerSerializationVisibilityAttribute::.ctor(valuetype [System]System.ComponentModel.DesignerSerializationVisibility) = { int32(0) }
			.get instance float64 Avalon.Test.ComponentModel.CustomControls.VirtualizingStackPanel::get_HorizontalOffset()
		}
		.property instance valuetype [PresentationFramework]System.Windows.Controls.Orientation Orientation()
		{
			.get instance valuetype [PresentationFramework]System.Windows.Controls.Orientation Avalon.Test.ComponentModel.CustomControls.VirtualizingStackPanel::get_Orientation()
			.set instance void Avalon.Test.ComponentModel.CustomControls.VirtualizingStackPanel::set_Orientation(valuetype [PresentationFramework]System.Windows.Controls.Orientation)
		}
		.property instance class [PresentationFramework]System.Windows.Controls.ScrollViewer ScrollOwner()
		{
			.custom instance void [System]System.ComponentModel.DesignerSerializationVisibilityAttribute::.ctor(valuetype [System]System.ComponentModel.DesignerSerializationVisibility) = { int32(0) }
			.get instance class [PresentationFramework]System.Windows.Controls.ScrollViewer Avalon.Test.ComponentModel.CustomControls.VirtualizingStackPanel::get_ScrollOwner()
			.set instance void Avalon.Test.ComponentModel.CustomControls.VirtualizingStackPanel::set_ScrollOwner(class [PresentationFramework]System.Windows.Controls.ScrollViewer)
		}
		.property instance float64 VerticalOffset()
		{
			.custom instance void [System]System.ComponentModel.DesignerSerializationVisibilityAttribute::.ctor(valuetype [System]System.ComponentModel.DesignerSerializationVisibility) = { int32(0) }
			.get instance float64 Avalon.Test.ComponentModel.CustomControls.VirtualizingStackPanel::get_VerticalOffset()
		}
		.property instance float64 ViewportHeight()
		{
			.get instance float64 Avalon.Test.ComponentModel.CustomControls.VirtualizingStackPanel::get_ViewportHeight()
		}
		.property instance float64 ViewportWidth()
		{
			.get instance float64 Avalon.Test.ComponentModel.CustomControls.VirtualizingStackPanel::get_ViewportWidth()
		}
	}
}
.namespace Avalon.Test.ComponentModel.IntegrationTests
{
	.class public ControlIntegrationTest
		extends [mscorlib]System.Object
		implements Avalon.Test.ComponentModel.IIntegrationTest
	{
		.method public final virtual hidebysig newslot 
			instance valuetype [TestRuntime]Microsoft.Test.Logging.TestResult Perform(object testElement, class [System.Xml]System.Xml.XmlElement variation)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
}
.namespace Avalon.Test.ComponentModel.UnitTests
{
	.class public abstract 'AssertUnitTestBase`1'<TestObjectType>
		extends [mscorlib]System.Object
		implements Avalon.Test.ComponentModel.IUnitTest
	{
		.method private final virtual hidebysig newslot 
			instance valuetype [TestRuntime]Microsoft.Test.Logging.TestResult Avalon.Test.ComponentModel.IUnitTest.Perform(object testElement, class [System.Xml]System.Xml.XmlElement variation)
		{
			.override Avalon.Test.ComponentModel.IUnitTest::Perform
			ret
		}
		.method family virtual hidebysig newslot abstract 
			instance void Run(!0 testObject, class [System.Xml]System.Xml.XmlElement variation)
		{
		}
		.method family hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public ControlGenericUnitTest
		extends [mscorlib]System.Object
		implements Avalon.Test.ComponentModel.IUnitTest
	{
		.method public final virtual hidebysig newslot 
			instance valuetype [TestRuntime]Microsoft.Test.Logging.TestResult Perform(object testElement, class [System.Xml]System.Xml.XmlElement variation)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public ControlTestActionValidationUnitTest
		extends [mscorlib]System.Object
		implements Avalon.Test.ComponentModel.IUnitTest
	{
		.method public final virtual hidebysig newslot 
			instance valuetype [TestRuntime]Microsoft.Test.Logging.TestResult Perform(object passedTestElement, class [System.Xml]System.Xml.XmlElement variation)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public ControlTestEventUnitTest
		extends [mscorlib]System.Object
		implements Avalon.Test.ComponentModel.IUnitTest
	{
		.method public final virtual hidebysig newslot 
			instance valuetype [TestRuntime]Microsoft.Test.Logging.TestResult Perform(object passedTestElement, class [System.Xml]System.Xml.XmlElement variation)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public ControlTestMethodUnitTest
		extends [mscorlib]System.Object
		implements Avalon.Test.ComponentModel.IUnitTest
	{
		.method public final virtual hidebysig newslot 
			instance valuetype [TestRuntime]Microsoft.Test.Logging.TestResult Perform(object passedTestElement, class [System.Xml]System.Xml.XmlElement variation)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public ControlUnitTest
		extends class 'Avalon.Test.ComponentModel.UnitTests.AssertUnitTestBase`1'<class [PresentationFramework]System.Windows.FrameworkElement>
	{
		.method family virtual hidebysig 
			instance void Run(class [PresentationFramework]System.Windows.FrameworkElement testObject, class [System.Xml]System.Xml.XmlElement variation)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public interface abstract EventTestable
	{
		.method public virtual hidebysig newslot abstract 
			instance void Setup(object testElement, class [System.Xml]System.Xml.XmlElement variation)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance valuetype [TestRuntime]Microsoft.Test.Logging.TestResult Validate()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void Clear()
		{
		}
	}
	.class public LegacyAdapter
		extends Avalon.Test.ComponentModel.TestObject
	{
		.method public hidebysig specialname 
			instance class [mscorlib]System.Type get_Class()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Class(class [mscorlib]System.Type 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]'System.Collections.Generic.List`1'<string> get_Parameters()
		{
			ret
		}
		.method family virtual hidebysig 
			instance void DoCore()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance class [mscorlib]System.Type Class()
		{
			.get instance class [mscorlib]System.Type Avalon.Test.ComponentModel.UnitTests.LegacyAdapter::get_Class()
			.set instance void Avalon.Test.ComponentModel.UnitTests.LegacyAdapter::set_Class(class [mscorlib]System.Type)
		}
		.property instance class [mscorlib]'System.Collections.Generic.List`1'<string> Parameters()
		{
			.get instance class [mscorlib]'System.Collections.Generic.List`1'<string> Avalon.Test.ComponentModel.UnitTests.LegacyAdapter::get_Parameters()
		}
	}
	.class public sealed Steps
		extends [PresentationFramework]System.Windows.FrameworkContentElement
		implements Avalon.Test.ComponentModel.Utilities.ITestStep
	{
		.method public static hidebysig 
			class Avalon.Test.ComponentModel.Utilities.IFinder GetFinder(class [WindowsBase]System.Windows.DependencyObject element)
		{
			ret
		}
		.method public static hidebysig 
			void SetFinder(class [WindowsBase]System.Windows.DependencyObject element, class Avalon.Test.ComponentModel.Utilities.IFinder finder)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]'System.Collections.Generic.List`1'<class Avalon.Test.ComponentModel.Utilities.ITestStep> get_Items()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void Do(object testObject)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_LoopCount()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_LoopCount(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty FinderProperty
		.property instance class [mscorlib]'System.Collections.Generic.List`1'<class Avalon.Test.ComponentModel.Utilities.ITestStep> Items()
		{
			.get instance class [mscorlib]'System.Collections.Generic.List`1'<class Avalon.Test.ComponentModel.Utilities.ITestStep> Avalon.Test.ComponentModel.UnitTests.Steps::get_Items()
		}
		.property instance int32 LoopCount()
		{
			.get instance int32 Avalon.Test.ComponentModel.UnitTests.Steps::get_LoopCount()
			.set instance void Avalon.Test.ComponentModel.UnitTests.Steps::set_LoopCount(int32)
		}
	}
	.class public StepsUnitTest
		extends class 'Avalon.Test.ComponentModel.UnitTests.AssertUnitTestBase`1'<class [PresentationFramework]System.Windows.FrameworkElement>
	{
		.method public hidebysig specialname 
			instance class [mscorlib]'System.Collections.Generic.List`1'<class Avalon.Test.ComponentModel.Utilities.ITestStep> get_Steps()
		{
			ret
		}
		.method family virtual hidebysig 
			instance void Run(class [PresentationFramework]System.Windows.FrameworkElement testObject, class [System.Xml]System.Xml.XmlElement variation)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance class [mscorlib]'System.Collections.Generic.List`1'<class Avalon.Test.ComponentModel.Utilities.ITestStep> Steps()
		{
			.get instance class [mscorlib]'System.Collections.Generic.List`1'<class Avalon.Test.ComponentModel.Utilities.ITestStep> Avalon.Test.ComponentModel.UnitTests.StepsUnitTest::get_Steps()
		}
	}
	.class public XamlStepsUnitTest
		extends class 'Avalon.Test.ComponentModel.UnitTests.AssertUnitTestBase`1'<class [PresentationFramework]System.Windows.FrameworkElement>
	{
		.method public hidebysig specialname 
			instance class Avalon.Test.ComponentModel.Utilities.ITestStep get_Step()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Step(class Avalon.Test.ComponentModel.Utilities.ITestStep 'value')
		{
			ret
		}
		.method family virtual hidebysig 
			instance void Run(class [PresentationFramework]System.Windows.FrameworkElement testObject, class [System.Xml]System.Xml.XmlElement variation)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance class Avalon.Test.ComponentModel.Utilities.ITestStep Step()
		{
			.get instance class Avalon.Test.ComponentModel.Utilities.ITestStep Avalon.Test.ComponentModel.UnitTests.XamlStepsUnitTest::get_Step()
			.set instance void Avalon.Test.ComponentModel.UnitTests.XamlStepsUnitTest::set_Step(class Avalon.Test.ComponentModel.Utilities.ITestStep)
		}
	}
}
.namespace Avalon.Test.ComponentModel.Utilities
{
	.class public abstract sealed Assert
		extends [mscorlib]System.Object
	{
		.class nested public sealed Run
			extends [mscorlib]System.MulticastDelegate
		{
			.method public hidebysig specialname 
				instance void .ctor(object 'object', native int 'method')
				runtime 
			{
			}
			.method public virtual hidebysig newslot 
				instance void Invoke()
				runtime 
			{
			}
			.method public virtual hidebysig newslot 
				instance class [mscorlib]System.IAsyncResult BeginInvoke(class [mscorlib]System.AsyncCallback callback, object 'object')
				runtime 
			{
			}
			.method public virtual hidebysig newslot 
				instance void EndInvoke(class [mscorlib]System.IAsyncResult result)
				runtime 
			{
			}
		}
		.method public static hidebysig 
			void AssertTrue(string msg, bool expression)
		{
			ret
		}
		.method public static hidebysig 
			void AssertFalse(string msg, bool expression)
		{
			ret
		}
		.method public static hidebysig 
			void AssertEqual(string msg, object expected, object actual)
		{
			ret
		}
		.method public static hidebysig 
			void Fail(string msg)
		{
			ret
		}
		.method public static hidebysig 
			bool RunTest(class Avalon.Test.ComponentModel.Utilities.Assert/Run run)
		{
			ret
		}
	}
	.class public Case
		extends [mscorlib]System.Object
		implements [PresentationCore]System.Windows.Markup.IAddChild
	{
		.method public hidebysig specialname 
			instance object get_DTemp()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_DTemp(object 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [PresentationFramework]System.Windows.PropertyPath get_Property()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Property(class [PresentationFramework]System.Windows.PropertyPath 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance object get_Value()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Value(object 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance object get_Content()
		{
			ret
		}
		.method public hidebysig 
			instance bool CanApplyTo(object item)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void AddChild(object 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void AddText(string text)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance object Content()
		{
			.get instance object Avalon.Test.ComponentModel.Utilities.Case::get_Content()
		}
		.property instance object DTemp()
		{
			.get instance object Avalon.Test.ComponentModel.Utilities.Case::get_DTemp()
			.set instance void Avalon.Test.ComponentModel.Utilities.Case::set_DTemp(object)
		}
		.property instance class [PresentationFramework]System.Windows.PropertyPath Property()
		{
			.get instance class [PresentationFramework]System.Windows.PropertyPath Avalon.Test.ComponentModel.Utilities.Case::get_Property()
			.set instance void Avalon.Test.ComponentModel.Utilities.Case::set_Property(class [PresentationFramework]System.Windows.PropertyPath)
		}
		.property instance object Value()
		{
			.get instance object Avalon.Test.ComponentModel.Utilities.Case::get_Value()
			.set instance void Avalon.Test.ComponentModel.Utilities.Case::set_Value(object)
		}
	}
	.class public abstract sealed ControlTestHelper
		extends [mscorlib]System.Object
	{
		.method public static hidebysig 
			void ExecuteActions(class [PresentationFramework]System.Windows.FrameworkElement frmElement, class [System.Xml]System.Xml.XmlElement elelment)
		{
			ret
		}
		.method public static hidebysig 
			bool ExecuteValidations(class [PresentationFramework]System.Windows.FrameworkElement frmElement, class [System.Xml]System.Xml.XmlElement elelment)
		{
			ret
		}
		.method public static hidebysig 
			class [WindowsBase]System.Windows.DependencyProperty DependencyPropertyFromName(string propertyName, class [mscorlib]System.Type propertyType)
		{
			ret
		}
		.method public static hidebysig 
			class [PresentationFramework]System.Windows.FrameworkElement FindIndexPartByType(class [PresentationCore]System.Windows.Media.Visual logicalParent, string controlName, class [mscorlib]System.Type 'type', int32 index)
		{
			ret
		}
		.method public static hidebysig 
			class [PresentationFramework]System.Windows.FrameworkElement FindIndexPartByNamespace(class [PresentationCore]System.Windows.Media.Visual logicalParent, string controlName, string xmlNamespace, string typeName, int32 index)
		{
			ret
		}
		.method public static hidebysig 
			class [mscorlib]System.Collections.ArrayList FindPartsByType(class [PresentationCore]System.Windows.Media.Visual logicalParent, string controlName, class [mscorlib]System.Type 'type')
		{
			ret
		}
		.method public static hidebysig 
			class [mscorlib]System.Collections.ArrayList FindPartsByNamespace(class [PresentationCore]System.Windows.Media.Visual logicalParent, string controlName, string xmlNamespace, string typeName)
		{
			ret
		}
		.method public static hidebysig 
			bool ContainFramworkElement(class [PresentationFramework]System.Windows.FrameworkElement container, class [PresentationFramework]System.Windows.FrameworkElement child)
		{
			ret
		}
		.method public static hidebysig 
			void SetPropertyOntoDependencyObject(class [WindowsBase]System.Windows.DependencyObject dependencyObject, class [PresentationFramework]System.Windows.FrameworkElement resourceOwner, string propertyName, string 'value')
		{
			ret
		}
		.method public static hidebysig 
			void SetPropertyOntoObject(object targetObj, class [PresentationFramework]System.Windows.FrameworkElement resourceOwner, string propertyName, string 'value')
		{
			ret
		}
		.method public static hidebysig 
			object GetObjectByDotPath(object source, string[] path)
		{
			ret
		}
		.method public static hidebysig 
			object GetObjectByPropertyName(object source, string propertyPath)
		{
			ret
		}
		.method public static hidebysig 
			object GetObjectByPath(object source, string propertyPath, bool includeLast)
		{
			ret
		}
		.method public static hidebysig 
			string[] FromPathToDotPath(string propertyPath)
		{
			ret
		}
		.method public static hidebysig 
			bool VerifyObjectProperty(object targetObj, string propertyPath, object expectedValue)
		{
			ret
		}
	}
	.class public abstract sealed DoubleUtil
		extends [mscorlib]System.Object
	{
		.method public static hidebysig 
			bool AreClose(float64 value1, float64 value2)
		{
			ret
		}
		.method public static hidebysig 
			bool LessThan(float64 value1, float64 value2)
		{
			ret
		}
		.method public static hidebysig 
			bool GreaterThan(float64 value1, float64 value2)
		{
			ret
		}
		.method public static hidebysig 
			bool LessThanOrClose(float64 value1, float64 value2)
		{
			ret
		}
		.method public static hidebysig 
			bool GreaterThanOrClose(float64 value1, float64 value2)
		{
			ret
		}
		.method public static hidebysig 
			bool IsOne(float64 'value')
		{
			ret
		}
		.method public static hidebysig 
			bool IsZero(float64 'value')
		{
			ret
		}
		.method public static hidebysig 
			bool AreClose(valuetype [WindowsBase]System.Windows.Point point1, valuetype [WindowsBase]System.Windows.Point point2)
		{
			ret
		}
		.method public static hidebysig 
			bool AreClose(valuetype [WindowsBase]System.Windows.Size size1, valuetype [WindowsBase]System.Windows.Size size2)
		{
			ret
		}
		.method public static hidebysig 
			bool AreClose(valuetype [WindowsBase]System.Windows.Vector vector1, valuetype [WindowsBase]System.Windows.Vector vector2)
		{
			ret
		}
		.method public static hidebysig 
			bool AreClose(valuetype [WindowsBase]System.Windows.Rect rect1, valuetype [WindowsBase]System.Windows.Rect rect2)
		{
			ret
		}
		.method public static hidebysig 
			bool IsBetweenZeroAndOne(float64 val)
		{
			ret
		}
		.method public static hidebysig 
			int32 DoubleToInt(float64 val)
		{
			ret
		}
		.method public static hidebysig 
			bool IsNaN(float64 'value')
		{
			ret
		}
		.field static public float64 'DBL_EPSILON'
	}
	.class public DoubleXmlContentParserAttribute
		extends [mscorlib]System.Attribute
		implements Avalon.Test.ComponentModel.Utilities.IXmlParser
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = { int32(4) }
		.method public hidebysig specialname 
			instance void .ctor(string first, string second)
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_FirstProperty()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_FirstProperty(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_SecondProperty()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_SecondProperty(string 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void Parse(object target, class [System.Xml]System.Xml.XmlElement xmlElement)
		{
			ret
		}
		.property instance string FirstProperty()
		{
			.get instance string Avalon.Test.ComponentModel.Utilities.DoubleXmlContentParserAttribute::get_FirstProperty()
			.set instance void Avalon.Test.ComponentModel.Utilities.DoubleXmlContentParserAttribute::set_FirstProperty(string)
		}
		.property instance string SecondProperty()
		{
			.get instance string Avalon.Test.ComponentModel.Utilities.DoubleXmlContentParserAttribute::get_SecondProperty()
			.set instance void Avalon.Test.ComponentModel.Utilities.DoubleXmlContentParserAttribute::set_SecondProperty(string)
		}
	}
	.class public abstract sealed DpiHelper
		extends [mscorlib]System.Object
	{
		.method public static hidebysig 
			float32 GetDpi()
		{
			ret
		}
		.method public static hidebysig 
			int32 GetScreenLength(int32 length)
		{
			ret
		}
		.field static public literal float32 'DEFAULT_DPI' = float32(0x42C00000)
	}
	.class public EventCollection
		extends [mscorlib]System.Object
		implements Avalon.Test.ComponentModel.Utilities.IEventTester
	{
		.method public hidebysig specialname 
			instance void .ctor(class [System.Xml]System.Xml.XmlElement element)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void Hook(object eventRaiser)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance string Verify()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void Unhook()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance string get_Name()
		{
			ret
		}
		.property instance string Name()
		{
			.get instance string Avalon.Test.ComponentModel.Utilities.EventCollection::get_Name()
		}
	}
	.class public EventTester
		extends [mscorlib]System.Object
		implements Avalon.Test.ComponentModel.Utilities.IEventTester
	{
		.method public hidebysig specialname 
			instance void .ctor(class [System.Xml]System.Xml.XmlElement element)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void Hook(object eventRaiser)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance string Verify()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void Unhook()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance string get_Name()
		{
			ret
		}
		.property instance string Name()
		{
			.get instance string Avalon.Test.ComponentModel.Utilities.EventTester::get_Name()
		}
	}
	.class public GenericDataTemplateSelector
		extends [PresentationFramework]System.Windows.Controls.DataTemplateSelector
		implements [PresentationCore]System.Windows.Markup.IAddChild
	{
		.method public hidebysig specialname 
			instance class [mscorlib]'System.Collections.ObjectModel.Collection`1'<class Avalon.Test.ComponentModel.Utilities.Case> get_Conditions()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void AddChild(object o)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void AddText(string o)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [PresentationFramework]System.Windows.DataTemplate get_Default()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Default(class [PresentationFramework]System.Windows.DataTemplate 'value')
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [PresentationFramework]System.Windows.DataTemplate SelectTemplate(object item, class [WindowsBase]System.Windows.DependencyObject container)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance class [mscorlib]'System.Collections.ObjectModel.Collection`1'<class Avalon.Test.ComponentModel.Utilities.Case> Conditions()
		{
			.get instance class [mscorlib]'System.Collections.ObjectModel.Collection`1'<class Avalon.Test.ComponentModel.Utilities.Case> Avalon.Test.ComponentModel.Utilities.GenericDataTemplateSelector::get_Conditions()
		}
		.property instance class [PresentationFramework]System.Windows.DataTemplate Default()
		{
			.get instance class [PresentationFramework]System.Windows.DataTemplate Avalon.Test.ComponentModel.Utilities.GenericDataTemplateSelector::get_Default()
			.set instance void Avalon.Test.ComponentModel.Utilities.GenericDataTemplateSelector::set_Default(class [PresentationFramework]System.Windows.DataTemplate)
		}
	}
	.class public interface abstract IEventTester
	{
		.method public virtual hidebysig newslot abstract 
			instance void Hook(object eventRaiser)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void Unhook()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance string Verify()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance string get_Name()
		{
		}
		.property instance string Name()
		{
			.get instance string Avalon.Test.ComponentModel.Utilities.IEventTester::get_Name()
		}
	}
	.class public interface abstract IFinder
	{
		.method public virtual hidebysig newslot abstract 
			instance object Find(object source)
		{
		}
	}
	.class public interface abstract ITestStep
	{
		.method public virtual hidebysig newslot abstract 
			instance void Do(object testObject)
		{
		}
	}
	.class public interface abstract IXmlParser
	{
		.method public virtual hidebysig newslot abstract 
			instance void Parse(object target, class [System.Xml]System.Xml.XmlElement xmlElement)
		{
		}
	}
	.class public abstract InnerFinderBase
		extends [WindowsBase]System.Windows.Markup.MarkupExtension
		implements Avalon.Test.ComponentModel.Utilities.IFinder
	{
		.method public hidebysig specialname 
			instance class Avalon.Test.ComponentModel.Utilities.IFinder get_InnerFinder()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_InnerFinder(class Avalon.Test.ComponentModel.Utilities.IFinder 'value')
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance object Avalon.Test.ComponentModel.Utilities.IFinder.Find(object source)
		{
			.override Avalon.Test.ComponentModel.Utilities.IFinder::Find
			ret
		}
		.method family virtual hidebysig newslot abstract 
			instance object Find(object source)
		{
		}
		.method public virtual hidebysig 
			instance object ProvideValue(class [mscorlib]System.IServiceProvider serviceProvider)
		{
			ret
		}
		.method family hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance class Avalon.Test.ComponentModel.Utilities.IFinder InnerFinder()
		{
			.get instance class Avalon.Test.ComponentModel.Utilities.IFinder Avalon.Test.ComponentModel.Utilities.InnerFinderBase::get_InnerFinder()
			.set instance void Avalon.Test.ComponentModel.Utilities.InnerFinderBase::set_InnerFinder(class Avalon.Test.ComponentModel.Utilities.IFinder)
		}
	}
	.class public InnerPropertyParserAttribute
		extends [mscorlib]System.Attribute
		implements Avalon.Test.ComponentModel.Utilities.IXmlParser
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = { int32(4) }
		.method public hidebysig specialname 
			instance void .ctor(string stepsProperty)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void Parse(object target, class [System.Xml]System.Xml.XmlElement xmlElement)
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_ExtraProperty()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ExtraProperty(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_StepsProperty()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_StepsProperty(string 'value')
		{
			ret
		}
		.property instance string ExtraProperty()
		{
			.get instance string Avalon.Test.ComponentModel.Utilities.InnerPropertyParserAttribute::get_ExtraProperty()
			.set instance void Avalon.Test.ComponentModel.Utilities.InnerPropertyParserAttribute::set_ExtraProperty(string)
		}
		.property instance string StepsProperty()
		{
			.get instance string Avalon.Test.ComponentModel.Utilities.InnerPropertyParserAttribute::get_StepsProperty()
			.set instance void Avalon.Test.ComponentModel.Utilities.InnerPropertyParserAttribute::set_StepsProperty(string)
		}
	}
	.class public sealed IsExtensionAttribute
		extends [mscorlib]System.Attribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = { int32(4) }
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public LegacyParserAttribute
		extends [mscorlib]System.Attribute
		implements Avalon.Test.ComponentModel.Utilities.IXmlParser
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = { int32(4) }
		.method public final virtual hidebysig newslot 
			instance void Parse(object target, class [System.Xml]System.Xml.XmlElement xmlElement)
		{
			ret
		}
		.method public hidebysig specialname 
			instance string[] get_Properties()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Properties(string[] 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance string[] Properties()
		{
			.get instance string[] Avalon.Test.ComponentModel.Utilities.LegacyParserAttribute::get_Properties()
			.set instance void Avalon.Test.ComponentModel.Utilities.LegacyParserAttribute::set_Properties(string[])
		}
	}
	.class public ObjectPropertyParserAttribute
		extends [mscorlib]System.Attribute
		implements Avalon.Test.ComponentModel.Utilities.IXmlParser
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = { int32(4) }
		.method public hidebysig specialname 
			instance void .ctor(string tagName, string tagAttributes)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void Parse(object target, class [System.Xml]System.Xml.XmlElement xmlElement)
		{
			ret
		}
	}
	.class public sealed ObservableObjectCollection
		extends class [WindowsBase]'System.Collections.ObjectModel.ObservableCollection`1'<object>
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public PMEUtils
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public static hidebysig specialname 
			class Avalon.Test.ComponentModel.Utilities.PMEUtils get_Current()
		{
			ret
		}
		.method public hidebysig 
			instance string[] NamesFromXml(class [System.Xml]System.Xml.XmlElement stringsElement)
		{
			ret
		}
		.method public hidebysig 
			instance string[] ValuesFromXml(class [System.Xml]System.Xml.XmlElement stringsElement)
		{
			ret
		}
		.method public hidebysig 
			instance void DoActions(object control, string[] actions, object[] actionParameters)
		{
			ret
		}
		.method public hidebysig 
			instance void Execute(string actionName, class [PresentationFramework]System.Windows.FrameworkElement frameworkElement, object actionParams)
		{
			ret
		}
		.method public hidebysig 
			instance object StringToType(string 'value', class [mscorlib]System.Type 'type')
		{
			ret
		}
		.method public hidebysig 
			instance bool VerifyProperty(object obj, string propertyName, object expectedValue)
		{
			ret
		}
		.method public hidebysig 
			instance bool TestControlActionValidation(object control, string[] actions, object[] actionParams, string[] validations, object[] validationParams)
		{
			ret
		}
		.method public hidebysig 
			instance bool TestControlEvent(object control, string eventName, string[] actions, object[] actionParams, string[] validations, object[] validationParams)
		{
			ret
		}
		.method public hidebysig 
			instance bool TestControlMethod(object control, string methodName, object[] methodParams, string[] actions, object[] actionParams, string[] validations, object[] validationParams)
		{
			ret
		}
		.property class Avalon.Test.ComponentModel.Utilities.PMEUtils Current()
		{
			.get class Avalon.Test.ComponentModel.Utilities.PMEUtils Avalon.Test.ComponentModel.Utilities.PMEUtils::get_Current()
		}
	}
	.class public PropertyParserAttribute
		extends [mscorlib]System.Attribute
		implements Avalon.Test.ComponentModel.Utilities.IXmlParser
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = { int32(4) }
		.method public final virtual hidebysig newslot 
			instance void Parse(object target, class [System.Xml]System.Xml.XmlElement xmlElement)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public sealed ResourceFinder
		extends Avalon.Test.ComponentModel.Utilities.InnerFinderBase
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(object resourceKey)
		{
			ret
		}
		.method family virtual hidebysig 
			instance object Find(object obj)
		{
			ret
		}
		.method public hidebysig specialname 
			instance object get_ResourceKey()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ResourceKey(object 'value')
		{
			ret
		}
		.property instance object ResourceKey()
		{
			.get instance object Avalon.Test.ComponentModel.Utilities.ResourceFinder::get_ResourceKey()
			.set instance void Avalon.Test.ComponentModel.Utilities.ResourceFinder::set_ResourceKey(object)
		}
	}
	.class public abstract sealed ValueGetter
		extends [mscorlib]System.Object
	{
		.method public static hidebysig 
			object GetValue(object item, class [PresentationFramework]System.Windows.PropertyPath path)
		{
			ret
		}
	}
	.class public XamlContentParserAttribute
		extends [mscorlib]System.Attribute
		implements Avalon.Test.ComponentModel.Utilities.IXmlParser
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = { int32(4) }
		.method public hidebysig specialname 
			instance void .ctor(string contentProperty)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void Parse(object target, class [System.Xml]System.Xml.XmlElement xmlElement)
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_ContentProperty()
		{
			ret
		}
		.property instance string ContentProperty()
		{
			.get instance string Avalon.Test.ComponentModel.Utilities.XamlContentParserAttribute::get_ContentProperty()
		}
	}
	.class public XamlParserAttribute
		extends [mscorlib]System.Attribute
		implements Avalon.Test.ComponentModel.Utilities.IXmlParser
	{
		.method public hidebysig specialname 
			instance void .ctor(string contentProperty)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void Parse(object target, class [System.Xml]System.Xml.XmlElement xmlElement)
		{
			ret
		}
	}
	.class public XmlContentParserAttribute
		extends [mscorlib]System.Attribute
		implements Avalon.Test.ComponentModel.Utilities.IXmlParser
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = { int32(4) }
		.method public hidebysig specialname 
			instance void .ctor(string contentProperty)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void Parse(object target, class [System.Xml]System.Xml.XmlElement xmlElement)
		{
			ret
		}
	}
	.class public abstract sealed XmlHelper
		extends [mscorlib]System.Object
	{
		.method public static hidebysig 
			!!0 GetAttribute<ObjectType>(class [System.Xml]System.Xml.XmlElement element, string attributeName, !!0 defaultValue)
		{
			ret
		}
		.method public static hidebysig 
			!!0 GetAttribute<ObjectType>(class [System.Xml]System.Xml.XmlElement element, string attributeName)
		{
			ret
		}
		.method public static hidebysig 
			object GetAttribute(class [mscorlib]System.Type 'type', class [System.Xml]System.Xml.XmlElement element, string attributeName)
		{
			ret
		}
		.method public static hidebysig 
			bool HasAttribute(class [System.Xml]System.Xml.XmlElement element, string attributeName)
		{
			ret
		}
		.method public static hidebysig 
			object ConvertToType(class [mscorlib]System.Type targetType, object sourceValue)
		{
			ret
		}
		.method public static hidebysig 
			!!0 Convert<TargetType, SourceType>(!!1 sourceValue)
		{
			ret
		}
		.method public static hidebysig 
			!!0 Convert<TargetType, SourceType>(!!1 sourceValue, !!0 defaultValue)
		{
			ret
		}
	}
	.class public abstract sealed XmlParserHelper
		extends [mscorlib]System.Object
	{
		.method public static hidebysig 
			void Parse(object target, class [System.Xml]System.Xml.XmlElement xmlElement)
		{
			ret
		}
		.method public static hidebysig 
			void ParseProperty(object target, class [System.Xml]System.Xml.XmlElement xmlElement)
		{
			ret
		}
		.method public static hidebysig 
			void ParseContent(object target, class [System.Xml]System.Xml.XmlElement xmlElement, string contentProperty)
		{
			ret
		}
	}
	.class public abstract sealed XtcTestHelper
		extends [mscorlib]System.Object
	{
		.method public static hidebysig 
			void DoActions(class [PresentationFramework]System.Windows.FrameworkElement element, class [System.Xml]System.Xml.XmlElement actionsXml)
		{
			ret
		}
		.method public static hidebysig 
			class Avalon.Test.ComponentModel.IAction GetActionFromXml(class [System.Xml]System.Xml.XmlElement actionXml)
		{
			ret
		}
		.method public static hidebysig 
			object GetObjectFromXml(class [System.Xml]System.Xml.XmlElement xml)
		{
			ret
		}
		.method public static hidebysig 
			string DoValidations(object element, class [System.Xml]System.Xml.XmlElement validationsXml)
		{
			ret
		}
		.method public static hidebysig 
			class Avalon.Test.ComponentModel.IValidation GetValidationFromXml(class [System.Xml]System.Xml.XmlElement validationXml)
		{
			ret
		}
		.method public static hidebysig 
			object LoadXml(string objectName)
		{
			ret
		}
		.method public static hidebysig 
			class Avalon.Test.ComponentModel.Utilities.IEventTester GetEventTesterFromXml(class [System.Xml]System.Xml.XmlElement xmlElement)
		{
			ret
		}
	}
}
.namespace Avalon.Test.ComponentModel.Utilities.VScanTools
{
	.class public CompareImages
		extends [mscorlib]System.Object
	{
		.class nested public sealed ImageTolerances
			extends [mscorlib]System.Enum
		{
			.field public rtspecialname specialname int32 value__
			.field static public literal valuetype Avalon.Test.ComponentModel.Utilities.VScanTools.CompareImages/ImageTolerances Custom = int32(0x00000004)
			.field static public literal valuetype Avalon.Test.ComponentModel.Utilities.VScanTools.CompareImages/ImageTolerances High = int32(0x00000003)
			.field static public literal valuetype Avalon.Test.ComponentModel.Utilities.VScanTools.CompareImages/ImageTolerances Low = int32(0x00000001)
			.field static public literal valuetype Avalon.Test.ComponentModel.Utilities.VScanTools.CompareImages/ImageTolerances Medium = int32(0x00000002)
			.field static public literal valuetype Avalon.Test.ComponentModel.Utilities.VScanTools.CompareImages/ImageTolerances None = int32(0x00000000)
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig 
			instance void SetFirstImage(class [PresentationCore]System.Windows.UIElement element)
		{
			ret
		}
		.method public hidebysig 
			instance void SetFirstImage(int32 x, int32 y, int32 width, int32 height)
		{
			ret
		}
		.method public hidebysig 
			instance void SetFirstImage(valuetype [System.Drawing]System.Drawing.Rectangle rect)
		{
			ret
		}
		.method public hidebysig 
			instance void SetFirstImage(string filename)
		{
			ret
		}
		.method public hidebysig 
			instance void SetSecondImage(string filename)
		{
			ret
		}
		.method public hidebysig 
			instance void SetSecondImage(class [PresentationCore]System.Windows.UIElement element)
		{
			ret
		}
		.method public hidebysig 
			instance void SetSecondImage(int32 x, int32 y, int32 width, int32 height)
		{
			ret
		}
		.method public hidebysig 
			instance void SetSecondImage(valuetype [System.Drawing]System.Drawing.Rectangle rect)
		{
			ret
		}
		.method public hidebysig 
			instance bool ImagesEqual()
		{
			ret
		}
		.method public hidebysig 
			instance bool ImagesEqual(valuetype Avalon.Test.ComponentModel.Utilities.VScanTools.CompareImages/ImageTolerances imgTol)
		{
			ret
		}
		.method public hidebysig 
			instance bool ImagesEqual(string tolearanceFileName)
		{
			ret
		}
		.method public hidebysig 
			instance void SaveBitmaps(string filenamePrefix)
		{
			ret
		}
		.method public hidebysig 
			instance void SaveBitmaps()
		{
			ret
		}
		.method public hidebysig 
			instance void SaveErrorImage(string filenamePrefix)
		{
			ret
		}
		.method public hidebysig 
			instance void SaveErrorImage()
		{
			ret
		}
		.method public hidebysig 
			instance void SaveAllData()
		{
			ret
		}
		.method public hidebysig 
			instance void SaveAllData(string filenamePrefix)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [TestRuntime]Microsoft.Test.RenderingVerification.IImageAdapter get_FirstImage()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [TestRuntime]Microsoft.Test.RenderingVerification.IImageAdapter get_SecondImage()
		{
			ret
		}
		.field family string image1
		.field family string image2
		.property instance class [TestRuntime]Microsoft.Test.RenderingVerification.IImageAdapter FirstImage()
		{
			.get instance class [TestRuntime]Microsoft.Test.RenderingVerification.IImageAdapter Avalon.Test.ComponentModel.Utilities.VScanTools.CompareImages::get_FirstImage()
		}
		.property instance class [TestRuntime]Microsoft.Test.RenderingVerification.IImageAdapter SecondImage()
		{
			.get instance class [TestRuntime]Microsoft.Test.RenderingVerification.IImageAdapter Avalon.Test.ComponentModel.Utilities.VScanTools.CompareImages::get_SecondImage()
		}
	}
	.class public CompareModels
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance void .ctor(object captureelement, string modelName)
		{
			ret
		}
		.method public hidebysig 
			instance bool Compare()
		{
			ret
		}
		.method public hidebysig 
			instance void SavePackage(string packageName)
		{
			ret
		}
	}
	.class public MasterRenderImagesCompare
		extends Avalon.Test.ComponentModel.Utilities.VScanTools.CompareImages
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig 
			instance void SetMasterImage(class [PresentationCore]System.Windows.UIElement element)
		{
			ret
		}
		.method public hidebysig 
			instance void SetMasterImage(int32 x, int32 y, int32 width, int32 height)
		{
			ret
		}
		.method public hidebysig 
			instance void SetMasterImage(valuetype [System.Drawing]System.Drawing.Rectangle rect)
		{
			ret
		}
		.method public hidebysig 
			instance void SetMasterImage(string filename)
		{
			ret
		}
		.method public hidebysig 
			instance void SetRenderImage(string filename)
		{
			ret
		}
		.method public hidebysig 
			instance void SetRenderImage(class [PresentationCore]System.Windows.UIElement element)
		{
			ret
		}
		.method public hidebysig 
			instance void SetRenderImage(int32 x, int32 y, int32 width, int32 height)
		{
			ret
		}
		.method public hidebysig 
			instance void SetRenderImage(valuetype [System.Drawing]System.Drawing.Rectangle rect)
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_MasterPath()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_MasterPath(string 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void SaveVScanPackage()
		{
			ret
		}
		.property instance string MasterPath()
		{
			.get instance string Avalon.Test.ComponentModel.Utilities.VScanTools.MasterRenderImagesCompare::get_MasterPath()
			.set instance void Avalon.Test.ComponentModel.Utilities.VScanTools.MasterRenderImagesCompare::set_MasterPath(string)
		}
	}
}
.namespace Avalon.Test.ComponentModel.Validations
{
	.class public Checker
		extends Avalon.Test.ComponentModel.TestObject
	{
		.method public hidebysig specialname 
			instance void .ctor(string 'property', object 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Property()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Property(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance object get_Value()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Value(object 'value')
		{
			ret
		}
		.method public hidebysig 
			instance void Check(object testObject)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void DoCore()
		{
			ret
		}
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty ValueProperty
		.property instance string Property()
		{
			.get instance string Avalon.Test.ComponentModel.Validations.Checker::get_Property()
			.set instance void Avalon.Test.ComponentModel.Validations.Checker::set_Property(string)
		}
		.property instance object Value()
		{
			.get instance object Avalon.Test.ComponentModel.Validations.Checker::get_Value()
			.set instance void Avalon.Test.ComponentModel.Validations.Checker::set_Value(object)
		}
	}
	.class public ControlActionExceptionValidation
		extends Avalon.Test.ComponentModel.Validations.ControlExceptionValidationBase
		implements Avalon.Test.ComponentModel.IValidation
	{
		.method public final virtual hidebysig newslot 
			instance bool Validate(object[] validationParams)
		{
			.param [1]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method family virtual hidebysig 
			instance void DoAction(class [PresentationFramework]System.Windows.FrameworkElement frmElement, string name, object paras)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public ControlChangeStatusDuringEvent
		extends Avalon.Test.ComponentModel.Validations.ControlEventTestBase
		implements Avalon.Test.ComponentModel.Validations.IEventHandler, Avalon.Test.ComponentModel.IValidation
	{
		.method public final virtual hidebysig newslot 
			instance void OnEvent(object sender, class [mscorlib]System.EventArgs args)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance bool Validate(object[] validationParams)
		{
			.param [1]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method public final virtual hidebysig specialname 
			instance class Avalon.Test.ComponentModel.Validations.IEventHandler get_ValidationObject()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance class Avalon.Test.ComponentModel.Validations.IEventHandler ValidationObject()
		{
			.get instance class Avalon.Test.ComponentModel.Validations.IEventHandler Avalon.Test.ComponentModel.Validations.ControlChangeStatusDuringEvent::get_ValidationObject()
		}
	}
	.class public ControlChildPropertyValidationById
		extends [mscorlib]System.Object
		implements Avalon.Test.ComponentModel.IValidation
	{
		.method public final virtual hidebysig newslot 
			instance bool Validate(object[] validateParams)
		{
			.param [1]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public ControlChildPropertyValidationById2
		extends [mscorlib]System.Object
		implements Avalon.Test.ComponentModel.IValidation
	{
		.method public final virtual hidebysig newslot 
			instance bool Validate(object[] validateParams)
		{
			.param [1]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance bool CompareNumbers(object obj, string propertyName, object expectedValue, string compareType)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public ControlContainedValidation
		extends [mscorlib]System.Object
		implements Avalon.Test.ComponentModel.IValidation
	{
		.method public final virtual hidebysig newslot 
			instance bool Validate(object[] validationParams)
		{
			.param [1]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public ControlEventArgsValidation
		extends Avalon.Test.ComponentModel.Validations.ControlEventTestBase
		implements Avalon.Test.ComponentModel.Validations.IEventHandler, Avalon.Test.ComponentModel.IValidation
	{
		.method public virtual hidebysig newslot 
			instance void OnEvent(object sender, class [mscorlib]System.EventArgs args)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance bool Validate(object[] validationParams)
		{
			.param [1]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method public final virtual hidebysig specialname 
			instance class Avalon.Test.ComponentModel.Validations.IEventHandler get_ValidationObject()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance class Avalon.Test.ComponentModel.Validations.IEventHandler ValidationObject()
		{
			.get instance class Avalon.Test.ComponentModel.Validations.IEventHandler Avalon.Test.ComponentModel.Validations.ControlEventArgsValidation::get_ValidationObject()
		}
	}
	.class public ControlEventCountTest
		extends Avalon.Test.ComponentModel.Validations.ControlEventTestBase
		implements Avalon.Test.ComponentModel.Validations.IEventHandler, Avalon.Test.ComponentModel.IValidation
	{
		.method public final virtual hidebysig newslot 
			instance void OnEvent(object sender, class [mscorlib]System.EventArgs args)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance bool Validate(object[] validationParams)
		{
			.param [1]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method public final virtual hidebysig specialname 
			instance class Avalon.Test.ComponentModel.Validations.IEventHandler get_ValidationObject()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance class Avalon.Test.ComponentModel.Validations.IEventHandler ValidationObject()
		{
			.get instance class Avalon.Test.ComponentModel.Validations.IEventHandler Avalon.Test.ComponentModel.Validations.ControlEventCountTest::get_ValidationObject()
		}
	}
	.class public abstract ControlEventTestBase
		extends [mscorlib]System.Object
		implements Avalon.Test.ComponentModel.UnitTests.EventTestable
	{
		.method public virtual hidebysig newslot abstract specialname 
			instance class Avalon.Test.ComponentModel.Validations.IEventHandler get_ValidationObject()
		{
		}
		.method public hidebysig specialname 
			instance void set_EventTestableXmlElement(class [System.Xml]System.Xml.XmlElement 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [System.Xml]System.Xml.XmlElement get_EventTestableXmlElement()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [PresentationFramework]System.Windows.FrameworkElement get_TestFrameworkElemet()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void Clear()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void Setup(object testElement, class [System.Xml]System.Xml.XmlElement variation)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance valuetype [TestRuntime]Microsoft.Test.Logging.TestResult Validate()
		{
			ret
		}
		.method family hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance class [System.Xml]System.Xml.XmlElement EventTestableXmlElement()
		{
			.get instance class [System.Xml]System.Xml.XmlElement Avalon.Test.ComponentModel.Validations.ControlEventTestBase::get_EventTestableXmlElement()
			.set instance void Avalon.Test.ComponentModel.Validations.ControlEventTestBase::set_EventTestableXmlElement(class [System.Xml]System.Xml.XmlElement)
		}
		.property instance class [PresentationFramework]System.Windows.FrameworkElement TestFrameworkElemet()
		{
			.get instance class [PresentationFramework]System.Windows.FrameworkElement Avalon.Test.ComponentModel.Validations.ControlEventTestBase::get_TestFrameworkElemet()
		}
		.property instance class Avalon.Test.ComponentModel.Validations.IEventHandler ValidationObject()
		{
			.get instance class Avalon.Test.ComponentModel.Validations.IEventHandler Avalon.Test.ComponentModel.Validations.ControlEventTestBase::get_ValidationObject()
		}
	}
	.class public abstract ControlExceptionValidationBase
		extends [mscorlib]System.Object
	{
		.method family hidebysig 
			instance bool ValidateException(class [PresentationFramework]System.Windows.FrameworkElement frmElement, string name, object paras, string typeName)
		{
			ret
		}
		.method family virtual hidebysig newslot abstract 
			instance void DoAction(class [PresentationFramework]System.Windows.FrameworkElement frmElement, string name, object paras)
		{
		}
		.method family hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public ControlIndexPartPropertyValidation
		extends [mscorlib]System.Object
		implements Avalon.Test.ComponentModel.IValidation
	{
		.method public final virtual hidebysig newslot 
			instance bool Validate(object[] validationParams)
		{
			.param [1]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public ControlItemsCountValidation
		extends [mscorlib]System.Object
		implements Avalon.Test.ComponentModel.IValidation
	{
		.method public final virtual hidebysig newslot 
			instance bool Validate(object[] validationParams)
		{
			.param [1]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public ControlPropertyValidation
		extends [mscorlib]System.Object
		implements Avalon.Test.ComponentModel.IValidation
	{
		.method public final virtual hidebysig newslot 
			instance bool Validate(object[] validateParams)
		{
			.param [1]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public ControlPropertyValidationById
		extends [mscorlib]System.Object
		implements Avalon.Test.ComponentModel.IValidation
	{
		.method public final virtual hidebysig newslot 
			instance bool Validate(object[] validateParams)
		{
			.param [1]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public ControlPropertyValueValidation
		extends [mscorlib]System.Object
		implements Avalon.Test.ComponentModel.IValidation
	{
		.method public final virtual hidebysig newslot 
			instance bool Validate(object[] validationParams)
		{
			.param [1]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public ControlVisualPartPropertyValidation
		extends [mscorlib]System.Object
		implements Avalon.Test.ComponentModel.IValidation
	{
		.method public final virtual hidebysig newslot 
			instance bool Validate(object[] validationParams)
		{
			.param [1]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public CustomListViewSortingValidation
		extends [mscorlib]System.Object
		implements Avalon.Test.ComponentModel.IValidation
	{
		.method public final virtual hidebysig newslot 
			instance bool Validate(object[] validationParams)
		{
			.param [1]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public DispatcherValidation
		extends Avalon.Test.ComponentModel.Validations.ValidationAdapter
	{
		.method family virtual hidebysig 
			instance void DoCore()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Avalon.Test.ComponentModel.Utilities.IFinder get_Finder()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Finder(class Avalon.Test.ComponentModel.Utilities.IFinder 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]'System.Collections.Generic.List`1'<class Avalon.Test.ComponentModel.Utilities.ITestStep> get_Validations()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance class Avalon.Test.ComponentModel.Utilities.IFinder Finder()
		{
			.get instance class Avalon.Test.ComponentModel.Utilities.IFinder Avalon.Test.ComponentModel.Validations.DispatcherValidation::get_Finder()
			.set instance void Avalon.Test.ComponentModel.Validations.DispatcherValidation::set_Finder(class Avalon.Test.ComponentModel.Utilities.IFinder)
		}
		.property instance class [mscorlib]'System.Collections.Generic.List`1'<class Avalon.Test.ComponentModel.Utilities.ITestStep> Validations()
		{
			.get instance class [mscorlib]'System.Collections.Generic.List`1'<class Avalon.Test.ComponentModel.Utilities.ITestStep> Avalon.Test.ComponentModel.Validations.DispatcherValidation::get_Validations()
		}
	}
	.class public sealed DistanceValidation
		extends Avalon.Test.ComponentModel.Validations.ValidationAdapter
	{
		.method public hidebysig specialname 
			instance class [PresentationCore]System.Windows.UIElement get_First()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_First(class [PresentationCore]System.Windows.UIElement 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [PresentationCore]System.Windows.UIElement get_Second()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Second(class [PresentationCore]System.Windows.UIElement 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_Distance()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Distance(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Avalon.Test.ComponentModel.Validations.Position get_Position()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Position(valuetype Avalon.Test.ComponentModel.Validations.Position 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_Tolerance()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Tolerance(int32 'value')
		{
			ret
		}
		.method family virtual hidebysig 
			instance void DoCore()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty FirstProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty SecondProperty
		.property instance int32 Distance()
		{
			.get instance int32 Avalon.Test.ComponentModel.Validations.DistanceValidation::get_Distance()
			.set instance void Avalon.Test.ComponentModel.Validations.DistanceValidation::set_Distance(int32)
		}
		.property instance class [PresentationCore]System.Windows.UIElement First()
		{
			.get instance class [PresentationCore]System.Windows.UIElement Avalon.Test.ComponentModel.Validations.DistanceValidation::get_First()
			.set instance void Avalon.Test.ComponentModel.Validations.DistanceValidation::set_First(class [PresentationCore]System.Windows.UIElement)
		}
		.property instance valuetype Avalon.Test.ComponentModel.Validations.Position Position()
		{
			.get instance valuetype Avalon.Test.ComponentModel.Validations.Position Avalon.Test.ComponentModel.Validations.DistanceValidation::get_Position()
			.set instance void Avalon.Test.ComponentModel.Validations.DistanceValidation::set_Position(valuetype Avalon.Test.ComponentModel.Validations.Position)
		}
		.property instance class [PresentationCore]System.Windows.UIElement Second()
		{
			.get instance class [PresentationCore]System.Windows.UIElement Avalon.Test.ComponentModel.Validations.DistanceValidation::get_Second()
			.set instance void Avalon.Test.ComponentModel.Validations.DistanceValidation::set_Second(class [PresentationCore]System.Windows.UIElement)
		}
		.property instance int32 Tolerance()
		{
			.get instance int32 Avalon.Test.ComponentModel.Validations.DistanceValidation::get_Tolerance()
			.set instance void Avalon.Test.ComponentModel.Validations.DistanceValidation::set_Tolerance(int32)
		}
	}
	.class public interface abstract IEventHandler
		implements Avalon.Test.ComponentModel.IValidation
	{
		.method public virtual hidebysig newslot abstract 
			instance void OnEvent(object sender, class [mscorlib]System.EventArgs args)
		{
		}
	}
	.class public KeyboardFocusedElementValidation
		extends [mscorlib]System.Object
		implements Avalon.Test.ComponentModel.IValidation
	{
		.method public final virtual hidebysig newslot 
			instance bool Validate(object[] validateParams)
		{
			.param [1]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public sealed NullValidation
		extends Avalon.Test.ComponentModel.Validations.ValidationAdapter
	{
		.method family virtual hidebysig 
			instance void DoCore()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public sealed ObjectPropertyValidation
		extends Avalon.Test.ComponentModel.Validations.ValidationAdapter
	{
		.method family virtual hidebysig 
			instance void DoCore()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_TypeName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_TypeName(string 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]'System.Collections.Generic.List`1'<class Avalon.Test.ComponentModel.Validations.Checker> get_Properties()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance class [mscorlib]'System.Collections.Generic.List`1'<class Avalon.Test.ComponentModel.Validations.Checker> Properties()
		{
			.get instance class [mscorlib]'System.Collections.Generic.List`1'<class Avalon.Test.ComponentModel.Validations.Checker> Avalon.Test.ComponentModel.Validations.ObjectPropertyValidation::get_Properties()
		}
		.property instance string TypeName()
		{
			.get instance string Avalon.Test.ComponentModel.Validations.ObjectPropertyValidation::get_TypeName()
			.set instance void Avalon.Test.ComponentModel.Validations.ObjectPropertyValidation::set_TypeName(string)
		}
	}
	.class public sealed Position
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Avalon.Test.ComponentModel.Validations.Position Bottom = int32(0x00000001)
		.field static public literal valuetype Avalon.Test.ComponentModel.Validations.Position Left = int32(0x00000002)
		.field static public literal valuetype Avalon.Test.ComponentModel.Validations.Position Right = int32(0x00000003)
		.field static public literal valuetype Avalon.Test.ComponentModel.Validations.Position Top = int32(0x00000000)
	}
	.class public ScrollChangedEventArgsValidation
		extends [mscorlib]System.Object
		implements Avalon.Test.ComponentModel.IValidation
	{
		.method public final virtual hidebysig newslot 
			instance bool Validate(object[] validationParams)
		{
			.param [1]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public ScrollChangedEventValidation
		extends [mscorlib]System.Object
		implements Avalon.Test.ComponentModel.IValidation
	{
		.method public final virtual hidebysig newslot 
			instance bool Validate(object[] validationParams)
		{
			.param [1]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public sealed ThemeSensitive
		extends Avalon.Test.ComponentModel.TestObject
	{
		.method family final virtual hidebysig 
			instance void DoCore()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [WindowsBase]'System.Collections.ObjectModel.ObservableCollection`1'<class Avalon.Test.ComponentModel.Utilities.ITestStep> get_Classic()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [WindowsBase]'System.Collections.ObjectModel.ObservableCollection`1'<class Avalon.Test.ComponentModel.Utilities.ITestStep> get_Luna()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [WindowsBase]'System.Collections.ObjectModel.ObservableCollection`1'<class Avalon.Test.ComponentModel.Utilities.ITestStep> get_Aero()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance class [WindowsBase]'System.Collections.ObjectModel.ObservableCollection`1'<class Avalon.Test.ComponentModel.Utilities.ITestStep> Aero()
		{
			.get instance class [WindowsBase]'System.Collections.ObjectModel.ObservableCollection`1'<class Avalon.Test.ComponentModel.Utilities.ITestStep> Avalon.Test.ComponentModel.Validations.ThemeSensitive::get_Aero()
		}
		.property instance class [WindowsBase]'System.Collections.ObjectModel.ObservableCollection`1'<class Avalon.Test.ComponentModel.Utilities.ITestStep> Classic()
		{
			.get instance class [WindowsBase]'System.Collections.ObjectModel.ObservableCollection`1'<class Avalon.Test.ComponentModel.Utilities.ITestStep> Avalon.Test.ComponentModel.Validations.ThemeSensitive::get_Classic()
		}
		.property instance class [WindowsBase]'System.Collections.ObjectModel.ObservableCollection`1'<class Avalon.Test.ComponentModel.Utilities.ITestStep> Luna()
		{
			.get instance class [WindowsBase]'System.Collections.ObjectModel.ObservableCollection`1'<class Avalon.Test.ComponentModel.Utilities.ITestStep> Avalon.Test.ComponentModel.Validations.ThemeSensitive::get_Luna()
		}
	}
	.class public ToolBarTray_GetIsLocked
		extends [mscorlib]System.Object
		implements Avalon.Test.ComponentModel.IValidation
	{
		.method public final virtual hidebysig newslot 
			instance bool Validate(object[] validateParams)
		{
			.param [1]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public ToolBarTray_InvalidOperationException
		extends [mscorlib]System.Object
		implements Avalon.Test.ComponentModel.IValidation
	{
		.method public final virtual hidebysig newslot 
			instance bool Validate(object[] validateParams)
		{
			.param [1]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public abstract ValidationAdapter
		extends Avalon.Test.ComponentModel.TestObject
		implements Avalon.Test.ComponentModel.IValidation
	{
		.method private final virtual hidebysig newslot 
			instance bool Avalon.Test.ComponentModel.IValidation.Validate(object[] validationParams)
		{
			.override Avalon.Test.ComponentModel.IValidation::Validate
			.param [1]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method family hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public sealed VisibleValidation
		extends Avalon.Test.ComponentModel.Validations.ValidationAdapter
	{
		.method family virtual hidebysig 
			instance void DoCore()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [PresentationFramework]System.Windows.FrameworkElement get_Child()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Child(class [PresentationFramework]System.Windows.FrameworkElement 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [PresentationFramework]System.Windows.FrameworkElement get_Parent()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Parent(class [PresentationFramework]System.Windows.FrameworkElement 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_Visible()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Visible(bool 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty ChildProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty ParentProperty
		.property instance class [PresentationFramework]System.Windows.FrameworkElement Child()
		{
			.get instance class [PresentationFramework]System.Windows.FrameworkElement Avalon.Test.ComponentModel.Validations.VisibleValidation::get_Child()
			.set instance void Avalon.Test.ComponentModel.Validations.VisibleValidation::set_Child(class [PresentationFramework]System.Windows.FrameworkElement)
		}
		.property instance class [PresentationFramework]System.Windows.FrameworkElement Parent()
		{
			.get instance class [PresentationFramework]System.Windows.FrameworkElement Avalon.Test.ComponentModel.Validations.VisibleValidation::get_Parent()
			.set instance void Avalon.Test.ComponentModel.Validations.VisibleValidation::set_Parent(class [PresentationFramework]System.Windows.FrameworkElement)
		}
		.property instance bool Visible()
		{
			.get instance bool Avalon.Test.ComponentModel.Validations.VisibleValidation::get_Visible()
			.set instance void Avalon.Test.ComponentModel.Validations.VisibleValidation::set_Visible(bool)
		}
	}
}
