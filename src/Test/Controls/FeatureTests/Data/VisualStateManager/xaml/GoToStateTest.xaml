<Grid xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:col="clr-namespace:System.Collections;assembly=mscorlib"
    xmlns:ctrl="clr-namespace:Microsoft.Test.Controls.DataSources;assembly=ControlsCommon"
    xmlns:utils="clr-namespace:Microsoft.Test.Controls;assembly=ControlsCommon"
    xmlns:vsm="clr-namespace:System.Windows;assembly=PresentationFramework"
    xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework"
    x:Name="HostPanel"
    Height="700" Width="800">
  <Grid.Resources>

    <!--ValidationError template-->
    <ControlTemplate x:Key="ValidationToolTipTemplate">
      <Grid x:Name="Root" Margin="6,0" RenderTransformOrigin="0,0" Opacity="0">
        <Grid.RenderTransform>
          <TranslateTransform x:Name="xform" X="0"/>
        </Grid.RenderTransform>
        <VisualStateManager.VisualStateGroups>
          <VisualStateGroup Name="OpenStates">
            <VisualStateGroup.Transitions>
              <VisualTransition GeneratedDuration="0"/>
              <VisualTransition From="Closed" To="Open" GeneratedDuration="0:0:0.2">
                <Storyboard>
                  <DoubleAnimation Storyboard.TargetName="xform" Storyboard.TargetProperty="X" From="-25" To="0" Duration="0:0:0.2">
                    <DoubleAnimation.EasingFunction>
                      <BackEase Amplitude=".3" EasingMode="EaseOut"/>
                    </DoubleAnimation.EasingFunction>
                  </DoubleAnimation>
                  <DoubleAnimation Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.2"/>
                </Storyboard>
              </VisualTransition>
            </VisualStateGroup.Transitions>
            <VisualState x:Name="Closed">
              <Storyboard>
                <DoubleAnimation Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="0" Duration="0"/>
              </Storyboard>
            </VisualState>
            <VisualState x:Name="Open">
              <Storyboard>
                <DoubleAnimation Storyboard.TargetName="xform" Storyboard.TargetProperty="X" To="0" Duration="0"/>
                <DoubleAnimation Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="1" Duration="0"/>
              </Storyboard>
            </VisualState>
          </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <Border Background="#152A2E31" CornerRadius="4" Margin="4,4,-4,-4"/>
        <Border Background="#252A2E31" CornerRadius="4" Margin="3,3,-3,-3"/>
        <Border Background="#352A2E31" CornerRadius="4" Margin="2,2,-2,-2"/>
        <Border Background="#452A2E31" CornerRadius="4" Margin="1,1,-1,-1"/>

        <Border Background="#FFDC000C" CornerRadius="4"/>
        <Border CornerRadius="4">
          <Border.Background>
            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
              <GradientStop Color="#66FFFFFF"/>
              <GradientStop Color="#66000000" Offset="1"/>
              <GradientStop Color="#00E5E5E5" Offset="0.1"/>
              <GradientStop Color="#00161616" Offset="0.9"/>
            </LinearGradientBrush>
          </Border.Background>

          <TextBlock Foreground="White"
                     Margin="8"
                     MaxWidth="250"
                     TextWrapping="Wrap"
                     Text="{Binding (Validation.Errors)[0].Exception.Message}"/>
        </Border>
      </Grid>
    </ControlTemplate>

    <!-- Default style for System.Windows.Controls.Button -->
    <Style x:Key="Button" TargetType="Button">
      <Setter Property="Background" Value="#FF1F3B53"/>
      <Setter Property="Foreground" Value="#FF000000"/>
      <Setter Property="Padding" Value="3"/>
      <Setter Property="FontSize" Value="11" />
      <Setter Property="BorderThickness" Value="1"/>
      <Setter Property="BorderBrush">
        <Setter.Value>
          <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#FFA3AEB9" Offset="0"/>
            <GradientStop Color="#FF8399A9" Offset="0.375"/>
            <GradientStop Color="#FF718597" Offset="0.375"/>
            <GradientStop Color="#FF617584" Offset="1"/>
          </LinearGradientBrush>
        </Setter.Value>
      </Setter>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="Button">
            <Grid>
              <Grid.Resources>
                <SolidColorBrush x:Key="MouseOverColor" Color="Red"/>
                <SolidColorBrush x:Key="PressedColor" Color="Yellow"/>
                <SolidColorBrush x:Key="HighlightColor" Color="Green"/>
                <SolidColorBrush x:Key="FocusColor" Color="Blue"/>
              </Grid.Resources>
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup Name="CommonStates">
                  <VisualStateGroup.Transitions>
                    <VisualTransition GeneratedDuration="0"/>
                    <VisualTransition GeneratedDuration="00:00:00.1" To="MouseOver"/>
                    <VisualTransition GeneratedDuration="00:00:00.1" To="Pressed"/>
                  </VisualStateGroup.Transitions>
                  <VisualState Name="Normal"/>
                  <VisualState Name="MouseOver">
                    <Storyboard>
                      <DoubleAnimation Duration="0" Storyboard.TargetName="BackgroundMouseOver" Storyboard.TargetProperty="Opacity" To="1"/>
                      <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" To="#F2FFFFFF"/>
                      <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)" To="#CCFFFFFF"/>
                      <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[3].(GradientStop.Color)" To="#7FFFFFFF"/>
                    </Storyboard>
                  </VisualState>
                  <VisualState Name="Pressed">
                    <Storyboard>
                      <DoubleAnimation Duration="0" Storyboard.TargetName="Highlight" Storyboard.TargetProperty="Opacity" To="1"/>
                      <DoubleAnimation Duration="0" Storyboard.TargetName="BackgroundPressed" Storyboard.TargetProperty="Opacity" To="1"/>
                      <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" To="#F4FFFFFF"/>
                      <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" To="#EAFFFFFF"/>
                      <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)" To="#C6FFFFFF"/>
                      <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[3].(GradientStop.Color)" To="#6BFFFFFF"/>
                    </Storyboard>
                  </VisualState>
                  <VisualState Name="Disabled">
                    <Storyboard>
                      <DoubleAnimation Duration="0" Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)" To="1"/>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
                <VisualStateGroup Name="FocusStates">
                  <VisualState Name="Focused">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Visibility" Duration="0">
                        <DiscreteObjectKeyFrame KeyTime="0">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState Name="Unfocused" />
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>
              <Border x:Name="Background" CornerRadius="3" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}"/>
              <Border x:Name="BackgroundMouseOver" Opacity="0" CornerRadius="3" Background="{StaticResource MouseOverColor}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}"/>
              <Border x:Name="BackgroundPressed" Opacity="0" CornerRadius="3" Background="{StaticResource PressedColor}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}"/>
              <Border x:Name="BackgroundGradient" CornerRadius="1.75" BorderThickness="1" Margin="{TemplateBinding BorderThickness}" BorderBrush="#FFFFFFFF">
                <Border.Background>
                  <LinearGradientBrush StartPoint=".7,0" EndPoint=".7,1">
                    <GradientStop Color="#FFFFFFFF" Offset="0" />
                    <GradientStop Color="#F9FFFFFF" Offset="0.375" />
                    <GradientStop Color="#E5FFFFFF" Offset="0.625" />
                    <GradientStop Color="#C6FFFFFF" Offset="1" />
                  </LinearGradientBrush>
                </Border.Background>
              </Border>
              <Border x:Name="Highlight" CornerRadius="1.75" Opacity="0" IsHitTestVisible="false" BorderBrush="{StaticResource HighlightColor}" BorderThickness="1" Margin="{TemplateBinding BorderThickness}" />
              <ContentPresenter
                  x:Name="contentPresenter"
                  Content="{TemplateBinding Content}"
                  ContentTemplate="{TemplateBinding ContentTemplate}"
                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                  Margin="{TemplateBinding Padding}"/>
              <Border x:Name="DisabledVisualElement" CornerRadius="3" Background="#A5FFFFFF" Opacity="0" IsHitTestVisible="false" />
              <Border x:Name="FocusVisualElement" CornerRadius="3" BorderBrush="{StaticResource FocusColor}" BorderThickness="1" Visibility="Collapsed" IsHitTestVisible="false" />
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <!-- Default style for System.Windows.Controls.Primitives.RepeatButton -->
    <Style x:Key="RepeatButton" TargetType="RepeatButton">
      <Setter Property="Background" Value="#FF1F3B53"/>
      <Setter Property="Foreground" Value="#FF000000"/>
      <Setter Property="Padding" Value="3"/>
      <Setter Property="FontSize" Value="11" />
      <Setter Property="BorderThickness" Value="1"/>
      <Setter Property="ClickMode" Value="Press"/>
      <Setter Property="Delay" Value="250"/>
      <Setter Property="Interval" Value="250"/>
      <Setter Property="BorderBrush">
        <Setter.Value>
          <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#FFA3AEB9" Offset="0"/>
            <GradientStop Color="#FF8399A9" Offset="0.375"/>
            <GradientStop Color="#FF718597" Offset="0.375"/>
            <GradientStop Color="#FF617584" Offset="1"/>
          </LinearGradientBrush>
        </Setter.Value>
      </Setter>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="RepeatButton">
            <Grid x:Name="Root">
              <Grid.Resources>
                <SolidColorBrush x:Key="MouseOverColor" Color="Red"/>
                <SolidColorBrush x:Key="PressedColor" Color="Yellow"/>
                <SolidColorBrush x:Key="HighlightColor" Color="Green"/>
                <SolidColorBrush x:Key="FocusColor" Color="Blue"/>
              </Grid.Resources>
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup Name="CommonStates">
                  <VisualStateGroup.Transitions>
                    <VisualTransition GeneratedDuration="0"/>
                    <VisualTransition GeneratedDuration="00:00:00.1" To="MouseOver"/>
                    <VisualTransition GeneratedDuration="00:00:00.1" To="Pressed"/>
                  </VisualStateGroup.Transitions>
                  <VisualState Name="Normal"/>
                  <VisualState Name="MouseOver">
                    <Storyboard>
                      <DoubleAnimation Duration="0" Storyboard.TargetName="BackgroundMouseOver" Storyboard.TargetProperty="Opacity" To="1"/>
                      <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" To="#F2FFFFFF"/>
                      <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)" To="#CCFFFFFF"/>
                      <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[3].(GradientStop.Color)" To="#7FFFFFFF"/>
                    </Storyboard>
                  </VisualState>
                  <VisualState Name="Pressed">
                    <Storyboard>
                      <DoubleAnimation Duration="0" Storyboard.TargetName="Highlight" Storyboard.TargetProperty="Opacity" To="1"/>
                      <DoubleAnimation Duration="0" Storyboard.TargetName="BackgroundPressed" Storyboard.TargetProperty="Opacity" To="1"/>
                      <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" To="#F4FFFFFF"/>
                      <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" To="#EAFFFFFF"/>
                      <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)" To="#C6FFFFFF"/>
                      <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[3].(GradientStop.Color)" To="#6BFFFFFF"/>
                    </Storyboard>
                  </VisualState>
                  <VisualState Name="Disabled">
                    <Storyboard>
                      <DoubleAnimation Duration="0" Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)" To="1"/>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
                <VisualStateGroup Name="FocusStates">
                  <VisualState Name="Focused">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Visibility" Duration="0">
                        <DiscreteObjectKeyFrame KeyTime="0">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState Name="Unfocused" />
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>
              <Border x:Name="Background" CornerRadius="3" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}"/>
              <Border x:Name="BackgroundMouseOver" Opacity="0" CornerRadius="3" Background="{StaticResource MouseOverColor}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}"/>
              <Border x:Name="BackgroundPressed" Opacity="0" CornerRadius="3" Background="{StaticResource PressedColor}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}"/>
              <Border x:Name="BackgroundGradient" CornerRadius="2" BorderThickness="1" Margin="{TemplateBinding BorderThickness}" BorderBrush="#FFFFFFFF">
                <Border.Background>
                  <LinearGradientBrush StartPoint=".7,0" EndPoint=".7,1">
                    <GradientStop Color="#FFFFFFFF" Offset="0" />
                    <GradientStop Color="#F9FFFFFF" Offset="0.375" />
                    <GradientStop Color="#E5FFFFFF" Offset="0.625" />
                    <GradientStop Color="#C6FFFFFF" Offset="1" />
                  </LinearGradientBrush>
                </Border.Background>
              </Border>
              <Border x:Name="Highlight" CornerRadius="2" Opacity="0" IsHitTestVisible="false" BorderBrush="{StaticResource HighlightColor}" BorderThickness="1" Margin="{TemplateBinding BorderThickness}" />
              <ContentPresenter
                  x:Name="contentPresenter"
                  Content="{TemplateBinding Content}"
                  ContentTemplate="{TemplateBinding ContentTemplate}"
                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                  Margin="{TemplateBinding Padding}"/>
              <Border x:Name="DisabledVisualElement" CornerRadius="3" Background="#A5FFFFFF" Opacity="0" IsHitTestVisible="false" />
              <Border x:Name="FocusVisualElement" CornerRadius="3" BorderBrush="{StaticResource FocusColor}" BorderThickness="1" Visibility="Collapsed" IsHitTestVisible="false" />
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <!-- Default style for System.Windows.Controls.Primitives.ToggleButton -->
    <Style x:Key="ToggleButton" TargetType="ToggleButton">
      <Setter Property="Background" Value="#FF1F3B53"/>
      <Setter Property="Foreground" Value="#FF000000"/>
      <Setter Property="Padding" Value="3"/>
      <Setter Property="FontSize" Value="11" />
      <Setter Property="BorderThickness" Value="1"/>
      <Setter Property="BorderBrush">
        <Setter.Value>
          <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#FFA3AEB9" Offset="0"/>
            <GradientStop Color="#FF8399A9" Offset="0.375"/>
            <GradientStop Color="#FF718597" Offset="0.375"/>
            <GradientStop Color="#FF617584" Offset="1"/>
          </LinearGradientBrush>
        </Setter.Value>
      </Setter>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="ToggleButton">
            <Grid>
              <Grid.Resources>
                <SolidColorBrush x:Key="MouseOverColor" Color="Red"/>
                <SolidColorBrush x:Key="PressedColor" Color="Yellow"/>
                <SolidColorBrush x:Key="HighlightColor" Color="Green"/>
                <SolidColorBrush x:Key="FocusColor" Color="Blue"/>
              </Grid.Resources>
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup Name="CommonStates">
                  <VisualStateGroup.Transitions>
                    <VisualTransition GeneratedDuration="0"/>
                    <VisualTransition GeneratedDuration="00:00:00.1" To="MouseOver"/>
                    <VisualTransition GeneratedDuration="00:00:00.1" To="Pressed"/>
                  </VisualStateGroup.Transitions>
                  <VisualState Name="Normal"/>
                  <VisualState Name="MouseOver">
                    <Storyboard>
                      <DoubleAnimation Duration="0" Storyboard.TargetName="BackgroundMouseOver" Storyboard.TargetProperty="Opacity" To="1"/>
                      <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" To="#F2FFFFFF"/>
                      <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)" To="#CCFFFFFF"/>
                      <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[3].(GradientStop.Color)" To="#7FFFFFFF"/>
                    </Storyboard>
                  </VisualState>
                  <VisualState Name="Pressed">
                    <Storyboard>
                      <DoubleAnimation Duration="0" Storyboard.TargetName="Highlight" Storyboard.TargetProperty="Opacity" To="1"/>
                      <DoubleAnimation Duration="0" Storyboard.TargetName="BackgroundPressed" Storyboard.TargetProperty="Opacity" To="1"/>
                      <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" To="#F4FFFFFF"/>
                      <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" To="#EAFFFFFF"/>
                      <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)" To="#C6FFFFFF"/>
                      <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[3].(GradientStop.Color)" To="#6BFFFFFF"/>
                    </Storyboard>
                  </VisualState>
                  <VisualState Name="Disabled">
                    <Storyboard>
                      <DoubleAnimation Duration="0" Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)" To="1"/>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
                <VisualStateGroup Name="CheckStates">
                  <VisualStateGroup.Transitions>
                    <VisualTransition GeneratedDuration="00:00:00"/>
                  </VisualStateGroup.Transitions>
                  <VisualState Name="Checked">
                    <Storyboard>
                      <PointAnimation Duration="0" To="0.7,1" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.StartPoint)"/>
                      <PointAnimation Duration="0" To="0.7,0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Border.Background).(LinearGradientBrush.EndPoint)"/>
                    </Storyboard>
                  </VisualState>
                  <VisualState Name="Unchecked"/>
                  <VisualState Name="Indeterminate"/>
                </VisualStateGroup>
                <VisualStateGroup Name="FocusStates">
                  <VisualState Name="Focused">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Visibility" Duration="0">
                        <DiscreteObjectKeyFrame KeyTime="0">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState Name="Unfocused" />
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>
              <Border x:Name="Background" CornerRadius="3" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}"/>
              <Border x:Name="BackgroundMouseOver" Opacity="0" CornerRadius="3" Background="{StaticResource MouseOverColor}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}"/>
              <Border x:Name="BackgroundPressed" Opacity="0" CornerRadius="3" Background="{StaticResource PressedColor}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}"/>
              <Border x:Name="BackgroundGradient" CornerRadius="1.75" BorderThickness="1" Margin="{TemplateBinding BorderThickness}" BorderBrush="#FFFFFFFF">
                <Border.Background>
                  <LinearGradientBrush StartPoint=".7,0" EndPoint=".7,1">
                    <GradientStop Color="#FFFFFFFF" Offset="0" />
                    <GradientStop Color="#F9FFFFFF" Offset="0.375" />
                    <GradientStop Color="#E5FFFFFF" Offset="0.625" />
                    <GradientStop Color="#C6FFFFFF" Offset="1" />
                  </LinearGradientBrush>
                </Border.Background>
              </Border>
              <Border x:Name="Highlight" CornerRadius="1.75" Opacity="0" IsHitTestVisible="false" BorderBrush="{StaticResource HighlightColor}" BorderThickness="1" Margin="{TemplateBinding BorderThickness}" />
              <ContentPresenter
                  x:Name="contentPresenter"
                  Content="{TemplateBinding Content}"
                  ContentTemplate="{TemplateBinding ContentTemplate}"
                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                  Margin="{TemplateBinding Padding}"/>
              <Border x:Name="DisabledVisualElement" CornerRadius="3" Background="#A5FFFFFF" Opacity="0" IsHitTestVisible="false" />
              <Border x:Name="FocusVisualElement" CornerRadius="3" BorderBrush="{StaticResource FocusColor}" BorderThickness="1" Visibility="Collapsed" IsHitTestVisible="false" />
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <!-- Default style for System.Windows.Controls.CheckBox -->
    <Style x:Key="CheckBox" TargetType="CheckBox">
      <Setter Property="Background" Value="#FF448DCA"/>
      <Setter Property="Foreground" Value="#FF333333"/>
      <Setter Property="HorizontalContentAlignment" Value="Left"/>
      <Setter Property="VerticalContentAlignment" Value="Top"/>
      <Setter Property="Padding" Value="4,1,0,0"/>
      <Setter Property="FontSize" Value="11" />
      <Setter Property="BorderThickness" Value="1"/>
      <Setter Property="BorderBrush">
        <Setter.Value>
          <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#FFA3AEB9" Offset="0"/>
            <GradientStop Color="#FF8399A9" Offset="0.375"/>
            <GradientStop Color="#FF718597" Offset="0.375"/>
            <GradientStop Color="#FF617584" Offset="1"/>
          </LinearGradientBrush>
        </Setter.Value>
      </Setter>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="CheckBox">
            <Grid>
              <Grid.Resources>
                <SolidColorBrush x:Key="AccentColor" Color="#FFC4DBEE"/>
                <SolidColorBrush x:Key="FocusColor" Color="#FF45D6FA"/>
              </Grid.Resources>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="16"/>
                <ColumnDefinition Width="*"/>
              </Grid.ColumnDefinitions>
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup Name="CommonStates">
                  <VisualStateGroup.Transitions>
                    <VisualTransition GeneratedDuration="0"/>
                    <VisualTransition GeneratedDuration="00:00:00.1" To="MouseOver"/>
                    <VisualTransition GeneratedDuration="00:00:00.1" To="Pressed"/>
                  </VisualStateGroup.Transitions>
                  <VisualState Name="Normal"/>
                  <VisualState Name="MouseOver">
                    <Storyboard>
                      <DoubleAnimation Storyboard.TargetName="BackgroundOverlay" Storyboard.TargetProperty="Opacity" Duration="0" To="1"/>
                      <DoubleAnimation Storyboard.TargetName="BoxMiddleBackground" Storyboard.TargetProperty="Opacity" Duration="0" To="1"/>
                      <ColorAnimation Storyboard.TargetName="BoxMiddle" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Duration="0" To="#7FFFFFFF"/>
                      <ColorAnimation Storyboard.TargetName="BoxMiddle" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Duration="0" To="#CCFFFFFF"/>
                      <ColorAnimation Storyboard.TargetName="BoxMiddle" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Duration="0" To="#F2FFFFFF"/>
                    </Storyboard>
                  </VisualState>
                  <VisualState Name="Pressed">
                    <Storyboard>
                      <DoubleAnimation Storyboard.TargetName="BackgroundOverlay" Storyboard.TargetProperty="Opacity" Duration="0" To="1"/>
                      <DoubleAnimation Storyboard.TargetName="BoxMiddleBackground" Storyboard.TargetProperty="Opacity" Duration="0" To="1"/>
                      <ColorAnimation Storyboard.TargetName="BoxMiddle" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Duration="0" To="#6BFFFFFF"/>
                      <ColorAnimation Storyboard.TargetName="BoxMiddle" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Duration="0" To="#C6FFFFFF"/>
                      <ColorAnimation Storyboard.TargetName="BoxMiddle" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Duration="0" To="#EAFFFFFF"/>
                      <ColorAnimation Storyboard.TargetName="BoxMiddle" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Duration="0" To="#F4FFFFFF"/>
                      <ColorAnimation Storyboard.TargetName="BoxMiddle" Storyboard.TargetProperty="(Shape.Stroke).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Duration="0" To="#FF45D6FA"/>
                      <ColorAnimation Storyboard.TargetName="BoxMiddle" Storyboard.TargetProperty="(Shape.Stroke).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Duration="0" To="#FF45D6FA"/>
                      <ColorAnimation Storyboard.TargetName="BoxMiddle" Storyboard.TargetProperty="(Shape.Stroke).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Duration="0" To="#FF45D6FA"/>
                      <ColorAnimation Storyboard.TargetName="BoxMiddle" Storyboard.TargetProperty="(Shape.Stroke).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Duration="0" To="#FF45D6FA"/>
                    </Storyboard>
                  </VisualState>
                  <VisualState Name="Disabled">
                    <Storyboard>
                      <DoubleAnimation Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)" Duration="0" To="0.7"/>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
                <VisualStateGroup Name="CheckStates">
                  <VisualStateGroup.Transitions>
                    <VisualTransition GeneratedDuration="0"/>
                  </VisualStateGroup.Transitions>
                  <VisualState Name="Checked">
                    <Storyboard>
                      <DoubleAnimation Storyboard.TargetName="CheckIcon" Storyboard.TargetProperty="(UIElement.Opacity)" Duration="0" To="1"/>
                    </Storyboard>
                  </VisualState>
                  <VisualState Name="Unchecked"/>
                  <VisualState Name="Indeterminate">
                    <Storyboard>
                      <DoubleAnimation Storyboard.TargetName="IndeterminateIcon" Storyboard.TargetProperty="(UIElement.Opacity)" Duration="0" To="1"/>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
                <VisualStateGroup Name="FocusStates">
                  <VisualStateGroup.Transitions>
                    <VisualTransition GeneratedDuration="0"/>
                  </VisualStateGroup.Transitions>
                  <VisualState Name="Focused">
                    <Storyboard>
                      <DoubleAnimation Storyboard.TargetName="ContentFocusVisualElement" Storyboard.TargetProperty="Opacity" Duration="0" To="1"/>
                    </Storyboard>
                  </VisualState>
                  <VisualState Name="Unfocused" />
                </VisualStateGroup>
                <VisualStateGroup Name="ValidationStates">
                  <VisualState Name="Valid"/>
                  <VisualState Name="InvalidFocused">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0" >
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="validationTooltip" Storyboard.TargetProperty="IsOpen">
                        <DiscreteObjectKeyFrame KeyTime="0" >
                          <DiscreteObjectKeyFrame.Value>
                            <sys:Boolean>True</sys:Boolean>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState Name="InvalidUnfocused">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0" >
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>
              <Grid HorizontalAlignment="Left" VerticalAlignment="Top">
                <Rectangle x:Name="Background" Width="14" Height="14" RadiusX="1" RadiusY="1" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}" Fill="#FFFFFFFF" Margin="1"/>
                <Rectangle x:Name="BackgroundOverlay" Fill="{StaticResource AccentColor}" Opacity="0" Width="14" Height="14" RadiusX="1" RadiusY="1" StrokeThickness="1" Margin="1" Stroke="#00000000"/>
                <Rectangle x:Name="BoxMiddleBackground" Width="10" Height="10" RadiusX="1" RadiusY="1" Fill="{TemplateBinding Background}" Stroke="#00000000" StrokeThickness="1"/>
                <Rectangle x:Name="BoxMiddle" Width="10" Height="10" RadiusX="1" RadiusY="1" StrokeThickness="1" >
                  <Rectangle.Stroke>
                    <LinearGradientBrush EndPoint=".5,1" StartPoint=".5,0">
                      <GradientStop Color="#FFFFFFFF" Offset="1"/>
                      <GradientStop Color="#FFFFFFFF" Offset="0"/>
                      <GradientStop Color="#FFFFFFFF" Offset="0.375"/>
                      <GradientStop Color="#FFFFFFFF" Offset="0.375"/>
                    </LinearGradientBrush>
                  </Rectangle.Stroke>
                  <Rectangle.Fill>
                    <LinearGradientBrush StartPoint="0.62,0.15" EndPoint="0.64,0.88">
                      <GradientStop Color="#FFFFFFFF" Offset="0.013" />
                      <GradientStop Color="#F9FFFFFF" Offset="0.375" />
                      <GradientStop Color="#EAFFFFFF" Offset="0.603" />
                      <GradientStop Color="#D8FFFFFF" Offset="1" />
                    </LinearGradientBrush>
                  </Rectangle.Fill>
                </Rectangle>
                <Rectangle x:Name="BoxMiddleLine" Width="10" Height="10" RadiusX="1" RadiusY="1" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1" Opacity=".2"/>
                <Path x:Name="CheckIcon" Margin="1,1,0,1.5" Fill="#FF333333" Stretch="Fill" Opacity="0" Width="10.5" Height="10" Data="M102.03442,598.79645 L105.22962,597.78918 L106.78825,600.42358 C106.78825,600.42358 108.51028,595.74304 110.21724,593.60419 C112.00967,591.35822 114.89314,591.42316 114.89314,591.42316 C114.89314,591.42316 112.67844,593.42645 111.93174,594.44464 C110.7449,596.06293 107.15683,604.13837 107.15683,604.13837 z"/>
                <Rectangle x:Name="IndeterminateIcon" Height="2" Fill="#FF333333" Opacity="0" Width="6"/>
                <Rectangle x:Name="DisabledVisualElement" RadiusX="1" RadiusY="1" Width="14" Height="14" Opacity="0" Fill="#FFFFFFFF"/>
                <Rectangle x:Name="ContentFocusVisualElement" RadiusX="2" RadiusY="2" Stroke="{StaticResource FocusColor}" StrokeThickness="1" Opacity="0" IsHitTestVisible="false" Width="16" Height="16" />

                <Border x:Name="ValidationErrorElement"
                      Margin="1"
                      BorderThickness="1"
                      CornerRadius="1"
                      BorderBrush="#FFDB000C"
                      Visibility="Collapsed"
                      ToolTipService.PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                  <ToolTipService.ToolTip>
                    <ToolTip x:Name="validationTooltip"
                         Template="{StaticResource ValidationToolTipTemplate}"
                         DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                         Placement="Right"
                         PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                    </ToolTip>
                  </ToolTipService.ToolTip>
                  <Grid Width="10" Height="10" HorizontalAlignment="Right" Margin="0,-4,-4,0" VerticalAlignment="Top" Background="Transparent">
                    <Path Margin="0,3,0,0" Data="M 1,0 L5,0 A 2,2 90 0 1 7,2 L7,6 z" Fill="#FFDC000C"/>
                    <Path Margin="0,3,0,0" Data="M 0,0 L2,0 L 7,5 L7,7" Fill="#ffffff"/>
                  </Grid>
                </Border>
              </Grid>
              <ContentPresenter
                  Grid.Column="1"
                  x:Name="contentPresenter"
                  Content="{TemplateBinding Content}"
                  ContentTemplate="{TemplateBinding ContentTemplate}"
                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                  Margin="{TemplateBinding Padding}"/>
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <!-- Default style for System.Windows.Controls.RadioButton -->
    <Style x:Key="RadioButton" TargetType="RadioButton">
      <Setter Property="Background" Value="#FF448DCA"/>
      <Setter Property="Foreground" Value="#FF333333"/>
      <Setter Property="HorizontalContentAlignment" Value="Left"/>
      <Setter Property="VerticalContentAlignment" Value="Top"/>
      <Setter Property="Padding" Value="4,1,0,0"/>
      <Setter Property="FontSize" Value="11" />
      <Setter Property="BorderThickness" Value="1"/>
      <Setter Property="BorderBrush">
        <Setter.Value>
          <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#FFA3AEB9" Offset="0"/>
            <GradientStop Color="#FF8399A9" Offset="0.375"/>
            <GradientStop Color="#FF718597" Offset="0.375"/>
            <GradientStop Color="#FF617584" Offset="1"/>
          </LinearGradientBrush>
        </Setter.Value>
      </Setter>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="RadioButton">
            <Grid>
              <Grid.Resources>
                <SolidColorBrush x:Key="AccentColor" Color="#FFC4DBEE"/>
                <SolidColorBrush x:Key="FocusColor" Color="#FF45D6FA"/>
              </Grid.Resources>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="16"/>
                <ColumnDefinition Width="*"/>
              </Grid.ColumnDefinitions>
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup Name="CommonStates">
                  <VisualStateGroup.Transitions>
                    <VisualTransition GeneratedDuration="0"/>
                    <VisualTransition GeneratedDuration="00:00:00.1" To="MouseOver"/>
                    <VisualTransition GeneratedDuration="00:00:00.1" To="Pressed"/>
                  </VisualStateGroup.Transitions>
                  <VisualState Name="Normal"/>
                  <VisualState Name="MouseOver">
                    <Storyboard>
                      <DoubleAnimation Storyboard.TargetName="BackgroundOverlay" Storyboard.TargetProperty="Opacity" Duration="0" To="1"/>
                      <DoubleAnimation Storyboard.TargetName="BoxMiddleBackground" Storyboard.TargetProperty="Opacity" Duration="0" To="1"/>
                      <ColorAnimation Storyboard.TargetName="BoxMiddle" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Duration="0" To="#7FFFFFFF"/>
                      <ColorAnimation Storyboard.TargetName="BoxMiddle" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Duration="0" To="#CCFFFFFF"/>
                      <ColorAnimation Storyboard.TargetName="BoxMiddle" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Duration="0" To="#F2FFFFFF"/>
                    </Storyboard>
                  </VisualState>
                  <VisualState Name="Pressed">
                    <Storyboard>
                      <DoubleAnimation Storyboard.TargetName="BackgroundOverlay" Storyboard.TargetProperty="Opacity" Duration="0" To="1"/>
                      <DoubleAnimation Storyboard.TargetName="BoxMiddleBackground" Storyboard.TargetProperty="Opacity" Duration="0" To="1"/>
                      <ColorAnimation Storyboard.TargetName="BoxMiddle" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Duration="0" To="#6BFFFFFF"/>
                      <ColorAnimation Storyboard.TargetName="BoxMiddle" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Duration="0" To="#C6FFFFFF"/>
                      <ColorAnimation Storyboard.TargetName="BoxMiddle" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Duration="0" To="#EAFFFFFF"/>
                      <ColorAnimation Storyboard.TargetName="BoxMiddle" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Duration="0" To="#F4FFFFFF"/>
                      <ColorAnimation Storyboard.TargetName="BoxMiddle" Storyboard.TargetProperty="(Shape.Stroke).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Duration="0" To="#FF45D6FA"/>
                      <ColorAnimation Storyboard.TargetName="BoxMiddle" Storyboard.TargetProperty="(Shape.Stroke).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Duration="0" To="#FF45D6FA"/>
                      <ColorAnimation Storyboard.TargetName="BoxMiddle" Storyboard.TargetProperty="(Shape.Stroke).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Duration="0" To="#FF45D6FA"/>
                      <ColorAnimation Storyboard.TargetName="BoxMiddle" Storyboard.TargetProperty="(Shape.Stroke).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Duration="0" To="#FF45D6FA"/>
                    </Storyboard>
                  </VisualState>
                  <VisualState Name="Disabled">
                    <Storyboard>
                      <DoubleAnimation Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)" Duration="0" To="0.7"/>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
                <VisualStateGroup Name="CheckStates">
                  <VisualStateGroup.Transitions>
                    <VisualTransition GeneratedDuration="0"/>
                  </VisualStateGroup.Transitions>
                  <VisualState Name="Checked">
                    <Storyboard>
                      <DoubleAnimation Storyboard.TargetName="CheckIcon" Storyboard.TargetProperty="(UIElement.Opacity)" Duration="0" To="1"/>
                    </Storyboard>
                  </VisualState>
                  <VisualState Name="Unchecked"/>
                </VisualStateGroup>
                <VisualStateGroup Name="FocusStates">
                  <VisualStateGroup.Transitions>
                    <VisualTransition GeneratedDuration="0"/>
                  </VisualStateGroup.Transitions>
                  <VisualState Name="Focused">
                    <Storyboard>
                      <DoubleAnimation Storyboard.TargetName="ContentFocusVisualElement" Storyboard.TargetProperty="Opacity" Duration="0" To="1"/>
                    </Storyboard>
                  </VisualState>
                  <VisualState Name="Unfocused" />
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>
              <Grid HorizontalAlignment="Left" VerticalAlignment="Top">
                <Ellipse x:Name="Background" Width="14" Height="14" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}" Fill="#FFFFFFFF" Margin="1"/>
                <Ellipse x:Name="BackgroundOverlay" Fill="{StaticResource AccentColor}" Opacity="0" Width="14" Height="14" StrokeThickness="1" Margin="1" Stroke="#00000000"/>
                <Ellipse x:Name="BoxMiddleBackground" Width="10" Height="10" Fill="{TemplateBinding Background}" Stroke="#00000000" StrokeThickness="1"/>
                <Ellipse x:Name="BoxMiddle" Width="10" Height="10" StrokeThickness="1" >
                  <Ellipse.Stroke>
                    <LinearGradientBrush EndPoint=".5,1" StartPoint=".5,0">
                      <GradientStop Color="#FFFFFFFF" Offset="1"/>
                      <GradientStop Color="#FFFFFFFF" Offset="0"/>
                      <GradientStop Color="#FFFFFFFF" Offset="0.375"/>
                      <GradientStop Color="#FFFFFFFF" Offset="0.375"/>
                    </LinearGradientBrush>
                  </Ellipse.Stroke>
                  <Ellipse.Fill>
                    <LinearGradientBrush StartPoint="0.62,0.15" EndPoint="0.64,0.88">
                      <GradientStop Color="#FFFFFFFF" Offset="0.013" />
                      <GradientStop Color="#F9FFFFFF" Offset="0.375" />
                      <GradientStop Color="#EAFFFFFF" Offset="0.603" />
                      <GradientStop Color="#D8FFFFFF" Offset="1" />
                    </LinearGradientBrush>
                  </Ellipse.Fill>
                </Ellipse>
                <Ellipse x:Name="BoxMiddleLine" Width="10" Height="10" Stroke="#FF333333" StrokeThickness="1" Opacity=".2"/>
                <Ellipse x:Name="CheckIcon" Fill="#FF333333" Width="4" Height="4" VerticalAlignment="Center" HorizontalAlignment="Center" Opacity="0"/>
                <Ellipse x:Name="DisabledVisualElement" Width="14" Height="14" Opacity="0" Fill="#FFFFFFFF"/>
                <Ellipse x:Name="ContentFocusVisualElement" Stroke="{StaticResource FocusColor}" StrokeThickness="1" Opacity="0" IsHitTestVisible="false" Width="16" Height="16" />
              </Grid>
              <ContentPresenter
                  Grid.Column="1"
                  x:Name="contentPresenter"
                  Content="{TemplateBinding Content}"
                  ContentTemplate="{TemplateBinding ContentTemplate}"
                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                  Margin="{TemplateBinding Padding}"/>
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <!-- Default style for System.Windows.Controls.ListBox -->
    <Style x:Key="ListBox" TargetType="ListBox">
      <Setter Property="Padding" Value="1"/>
      <Setter Property="Background" Value="#FFFFFFFF" />
      <Setter Property="Foreground" Value="#FF000000"/>
      <Setter Property="HorizontalContentAlignment" Value="Left" />
      <Setter Property="VerticalContentAlignment" Value="Top" />
      <Setter Property="IsTabStop" Value="False" />
      <Setter Property="BorderThickness" Value="1" />
      <Setter Property="BorderBrush">
        <Setter.Value>
          <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#FFA3AEB9" Offset="0"/>
            <GradientStop Color="#FF8399A9" Offset="0.375"/>
            <GradientStop Color="#FF718597" Offset="0.375"/>
            <GradientStop Color="#FF617584" Offset="1"/>
          </LinearGradientBrush>
        </Setter.Value>
      </Setter>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="ListBox">
            <Grid>
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup Name="ValidationStates">
                  <VisualState Name="Valid"/>
                  <VisualState Name="InvalidFocused">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0" >
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="validationTooltip" Storyboard.TargetProperty="IsOpen">
                        <DiscreteObjectKeyFrame KeyTime="0" >
                          <DiscreteObjectKeyFrame.Value>
                            <sys:Boolean>True</sys:Boolean>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState Name="InvalidUnfocused">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0" >
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>
              <Border CornerRadius="2"
                      BorderBrush="{TemplateBinding BorderBrush}"
                      BorderThickness="{TemplateBinding BorderThickness}">
                <ScrollViewer x:Name="ScrollViewer" Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" BorderBrush="Transparent" BorderThickness="0">
                  <ItemsPresenter />
                </ScrollViewer>
              </Border>

              <Border x:Name="ValidationErrorElement"
                      Margin="1"
                      BorderThickness="1"
                      CornerRadius="1"
                      BorderBrush="#FFDB000C"
                      Visibility="Collapsed"
                      ToolTipService.PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                <ToolTipService.ToolTip>
                  <ToolTip x:Name="validationTooltip"
                       Template="{StaticResource ValidationToolTipTemplate}"
                       DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                       Placement="Right"
                       PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                  </ToolTip>
                </ToolTipService.ToolTip>
                <Grid Width="10" Height="10" HorizontalAlignment="Right" Margin="0,-4,-4,0" VerticalAlignment="Top" Background="Transparent">
                  <Path Margin="0,3,0,0" Data="M 1,0 L5,0 A 2,2 90 0 1 7,2 L7,6 z" Fill="#FFDC000C"/>
                  <Path Margin="0,3,0,0" Data="M 0,0 L2,0 L 7,5 L7,7" Fill="#ffffff"/>
                </Grid>
              </Border>
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <!-- Default style for System.Windows.Controls.ListBoxItem -->
    <Style x:Key="ListBoxItem" TargetType="ListBoxItem">
      <Setter Property="Padding" Value="3" />
      <Setter Property="HorizontalContentAlignment" Value="Left" />
      <Setter Property="VerticalContentAlignment" Value="Top" />
      <Setter Property="Background" Value="Transparent" />
      <Setter Property="BorderThickness" Value="1"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="ListBoxItem">
            <Grid Background="{TemplateBinding Background}">
              <Grid.Resources>
                <SolidColorBrush x:Key="MouseOverColor" Color="#FFBADDE9"/>
                <SolidColorBrush x:Key="SelectedColor" Color="#FFBADDE9"/>
                <SolidColorBrush x:Key="FocusColor" Color="#FF45D6FA"/>
              </Grid.Resources>
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup Name="CommonStates">
                  <VisualStateGroup.Transitions>
                    <VisualTransition To="Normal" GeneratedDuration="00:00:00"/>
                    <VisualTransition GeneratedDuration="00:00:00"/>
                  </VisualStateGroup.Transitions>
                  <VisualState Name="Normal" />
                  <VisualState Name="Disabled" />
                  <VisualState Name="MouseOver">
                    <Storyboard>
                      <DoubleAnimation Storyboard.TargetName="fillColor" Storyboard.TargetProperty="Opacity" Duration="0" To=".35"/>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
                <VisualStateGroup Name="SelectionStates">
                  <VisualStateGroup.Transitions>
                    <VisualTransition GeneratedDuration="0" />
                  </VisualStateGroup.Transitions>
                  <VisualState Name="SelectedUnfocused" />
                  <VisualState Name="Unselected" />
                  <VisualState Name="Selected">
                    <Storyboard>
                      <DoubleAnimation Storyboard.TargetName="fillColor2" Storyboard.TargetProperty="Opacity" Duration="0" To=".75"/>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
                <VisualStateGroup Name="FocusStates">
                  <VisualStateGroup.Transitions>
                    <VisualTransition GeneratedDuration="00:00:00"/>
                  </VisualStateGroup.Transitions>
                  <VisualState Name="Focused">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Visibility" Duration="0">
                        <DiscreteObjectKeyFrame KeyTime="0">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState Name="Unfocused"/>
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>
              <Rectangle x:Name="fillColor" Opacity="0" Fill="{StaticResource MouseOverColor}" IsHitTestVisible="False" RadiusX="1" RadiusY="1"/>
              <Rectangle x:Name="fillColor2" Opacity="0" Fill="{StaticResource SelectedColor}" IsHitTestVisible="False" RadiusX="1" RadiusY="1"/>
              <ContentPresenter
                  x:Name="contentPresenter"
                  Content="{TemplateBinding Content}"
                  ContentTemplate="{TemplateBinding ContentTemplate}"
                  HorizontalAlignment="Left"
                  Margin="{TemplateBinding Padding}"/>
              <Rectangle x:Name="FocusVisualElement" Stroke="{StaticResource FocusColor}" StrokeThickness="1" Visibility="Collapsed" RadiusX="1" RadiusY="1" />
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <!-- Default style for System.Windows.Controls.ComboBoxItem -->
    <Style x:Key="ComboBoxItem" TargetType="ComboBoxItem">
      <Setter Property="Padding" Value="3" />
      <Setter Property="HorizontalContentAlignment" Value="Left" />
      <Setter Property="VerticalContentAlignment" Value="Top" />
      <Setter Property="Background" Value="Transparent" />
      <Setter Property="BorderThickness" Value="1"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="ComboBoxItem">
            <Grid Background="{TemplateBinding Background}">
              <Grid.Resources>
                <SolidColorBrush x:Key="MouseOverColor" Color="#FFBADDE9"/>
                <SolidColorBrush x:Key="SelectedColor" Color="#FFBADDE9"/>
                <SolidColorBrush x:Key="FocusColor" Color="#FF45D6FA"/>
              </Grid.Resources>
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup Name="CommonStates">
                  <VisualStateGroup.Transitions>
                    <VisualTransition To="Normal" GeneratedDuration="00:00:00"/>
                    <VisualTransition GeneratedDuration="00:00:00"/>
                  </VisualStateGroup.Transitions>
                  <VisualState Name="Normal" />
                  <VisualState Name="MouseOver">
                    <Storyboard>
                      <DoubleAnimation Storyboard.TargetName="fillColor" Storyboard.TargetProperty="Opacity" Duration="0" To=".35"/>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
                <VisualStateGroup Name="SelectionStates">
                  <VisualStateGroup.Transitions>
                    <VisualTransition GeneratedDuration="0" />
                  </VisualStateGroup.Transitions>
                  <VisualState Name="Unselected" />
                  <VisualState Name="SelectedUnfocused" />
                  <VisualState Name="Selected">
                    <Storyboard>
                      <DoubleAnimation Storyboard.TargetName="fillColor2" Storyboard.TargetProperty="Opacity" Duration="0" To=".75"/>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
                <VisualStateGroup Name="FocusStates">
                  <VisualStateGroup.Transitions>
                    <VisualTransition GeneratedDuration="00:00:00"/>
                  </VisualStateGroup.Transitions>
                  <VisualState Name="Focused">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Visibility" Duration="0">
                        <DiscreteObjectKeyFrame KeyTime="0">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState Name="Unfocused"/>
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>
              <Rectangle x:Name="fillColor" Opacity="0" Fill="{StaticResource MouseOverColor}" IsHitTestVisible="False" RadiusX="1" RadiusY="1"/>
              <Rectangle x:Name="fillColor2" Opacity="0" Fill="{StaticResource SelectedColor}" IsHitTestVisible="False" RadiusX="1" RadiusY="1"/>
              <ContentPresenter
                  x:Name="contentPresenter"
                  Content="{TemplateBinding Content}"
                  ContentTemplate="{TemplateBinding ContentTemplate}"
                  HorizontalAlignment="Left"
                  Margin="{TemplateBinding Padding}"/>
              <Rectangle x:Name="FocusVisualElement" Stroke="{StaticResource FocusColor}" StrokeThickness="1" Visibility="Collapsed" RadiusX="1" RadiusY="1" />
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <!-- Default style for System.Windows.Controls.Primitives.Thumb -->
    <Style x:Key="Thumb" TargetType="Thumb">
      <Setter Property="Background" Value="#FF1F3B53"/>
      <Setter Property="BorderThickness" Value="1" />
      <Setter Property="BorderBrush">
        <Setter.Value>
          <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#FFA3AEB9" Offset="0"/>
            <GradientStop Color="#FF8399A9" Offset="0.375"/>
            <GradientStop Color="#FF718597" Offset="0.375"/>
            <GradientStop Color="#FF617584" Offset="1"/>
          </LinearGradientBrush>
        </Setter.Value>
      </Setter>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="Thumb">
            <Grid>
              <Grid.Resources>
                <SolidColorBrush x:Key="MouseOverColor" Color="#FF448DCA"/>
                <SolidColorBrush x:Key="PressedColor" Color="#FF448DCA"/>
                <SolidColorBrush x:Key="HighlightColor" Color="#FF45D6FA"/>
                <SolidColorBrush x:Key="FocusColor" Color="#FF45D6FA"/>
              </Grid.Resources>
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup Name="CommonStates">
                  <VisualState Name="Normal"/>
                  <VisualState Name="MouseOver">
                    <Storyboard>
                      <DoubleAnimation Duration="0" Storyboard.TargetName="BackgroundAnimation" Storyboard.TargetProperty="Opacity" To="1"/>
                      <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" To="#F2FFFFFF"/>
                      <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)" To="#CCFFFFFF"/>
                      <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)" To="#7FFFFFFF"/>
                    </Storyboard>
                  </VisualState>
                  <VisualState Name="Pressed">
                    <Storyboard>
                      <ColorAnimation Duration="0" Storyboard.TargetName="Background" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#FF6DBDD1"/>
                      <DoubleAnimation Duration="0" Storyboard.TargetName="BackgroundAnimation" Storyboard.TargetProperty="Opacity" To="1"/>
                      <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" To="#D8FFFFFF"/>
                      <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" To="#C6FFFFFF"/>
                      <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)" To="#8CFFFFFF"/>
                      <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)" To="#3FFFFFFF"/>
                    </Storyboard>
                  </VisualState>
                  <VisualState Name="Disabled">
                    <Storyboard>
                      <DoubleAnimation Duration="0" Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="Opacity" To=".55"/>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
                <VisualStateGroup Name="FocusStates">
                  <VisualState Name="Focused">
                    <Storyboard>
                      <DoubleAnimation Duration="0" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Opacity" To="1"/>
                    </Storyboard>
                  </VisualState>
                  <VisualState Name="Unfocused"/>
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>
              <Border x:Name="Background" CornerRadius="2" Background="White" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                <Grid Background="{TemplateBinding Background}"  Margin="1">
                  <Border Opacity="0"  x:Name="BackgroundAnimation" Background="#FF448DCA" />
                  <Rectangle x:Name="BackgroundGradient" >
                    <Rectangle.Fill>
                      <LinearGradientBrush StartPoint=".7,0" EndPoint=".7,1">
                        <GradientStop Color="#FFFFFFFF" Offset="0" />
                        <GradientStop Color="#F9FFFFFF" Offset="0.375" />
                        <GradientStop Color="#E5FFFFFF" Offset="0.625" />
                        <GradientStop Color="#C6FFFFFF" Offset="1" />
                      </LinearGradientBrush>
                    </Rectangle.Fill>
                  </Rectangle>
                </Grid>
              </Border>
              <Rectangle x:Name="DisabledVisualElement" RadiusX="2" RadiusY="2" Fill="#FFFFFFFF" Opacity="0" IsHitTestVisible="false" />
              <Rectangle x:Name="FocusVisualElement" RadiusX="1" RadiusY="1" Margin="1" Stroke="#FF6DBDD1" StrokeThickness="1" Opacity="0" IsHitTestVisible="false" />

            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <!-- Default style for System.Windows.Controls.ScrollBar -->
    <Style x:Key="ScrollBar" TargetType="{x:Type ScrollBar}">
      <Setter Property="MinWidth" Value="17"/>
      <Setter Property="MinHeight" Value="17"/>
      <Setter Property="IsTabStop" Value="False"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type ScrollBar}">
            <Grid x:Name="Root">
              <Grid.Resources>

                <!-- RepeatButton Templates -->
                <ControlTemplate x:Key="RepeatButtonTemplate" TargetType="{x:Type RepeatButton}">
                  <Grid x:Name="Root" Background="Transparent">
                    <VisualStateManager.VisualStateGroups>
                      <VisualStateGroup Name="CommonStates">
                        <VisualState Name="Normal" />
                      </VisualStateGroup>
                    </VisualStateManager.VisualStateGroups>
                  </Grid>
                </ControlTemplate>

                <!-- Vertical Inc/Dec Templates -->
                <ControlTemplate x:Key="VerticalIncrementTemplate" TargetType="{x:Type RepeatButton}">
                  <Grid x:Name="Root">
                    <VisualStateManager.VisualStateGroups>
                      <VisualStateGroup Name="CommonStates">
                        <VisualState Name="Normal" />
                        <VisualState Name="MouseOver">
                          <Storyboard>
                            <DoubleAnimation Duration="0:0:0" Storyboard.TargetName="Background" Storyboard.TargetProperty="Opacity" To="1"/>
                            <DoubleAnimation Duration="0:0:0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="Opacity" To="1"/>
                            <DoubleAnimation Duration="0:0:0" Storyboard.TargetName="BackgroundMouseOver" Storyboard.TargetProperty="Opacity" To="1"/>
                            <ColorAnimation Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Duration="0" To="#7FFFFFFF"/>
                            <ColorAnimation Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Duration="0" To="#CCFFFFFF"/>
                            <ColorAnimation Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Duration="0" To="#F2FFFFFF"/>
                          </Storyboard>
                        </VisualState>
                        <VisualState Name="Pressed">
                          <Storyboard>
                            <DoubleAnimation Duration="0:0:0" Storyboard.TargetName="Background" Storyboard.TargetProperty="Opacity" To="1"/>
                            <DoubleAnimation Duration="0:0:0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="Opacity" To="1"/>
                            <DoubleAnimation Duration="0:0:0" Storyboard.TargetName="BackgroundPressed" Storyboard.TargetProperty="Opacity" To="1"/>
                            <DoubleAnimation Storyboard.TargetName="Highlight" Storyboard.TargetProperty="(UIElement.Opacity)" Duration="0" To="1"/>
                            <ColorAnimation Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Duration="0" To="#6BFFFFFF"/>
                            <ColorAnimation Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Duration="0" To="#C6FFFFFF"/>
                            <ColorAnimation Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Duration="0" To="#EAFFFFFF"/>
                            <ColorAnimation Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Duration="0" To="#F4FFFFFF"/>
                          </Storyboard>
                        </VisualState>
                        <VisualState Name="Disabled">
                          <Storyboard>
                            <DoubleAnimation Duration="0:0:0" Storyboard.TargetName="DisabledElement" Storyboard.TargetProperty="Opacity" To=".7" />
                          </Storyboard>
                        </VisualState>
                      </VisualStateGroup>
                    </VisualStateManager.VisualStateGroups>
                    <Rectangle x:Name="Background" Opacity="0" RadiusX="2" RadiusY="2" Fill="#FF1F3B53" StrokeThickness="1">
                      <Rectangle.Stroke>
                        <LinearGradientBrush EndPoint="1,.5" StartPoint="0,.5">
                          <GradientStop Color="#FF647480" Offset="1"/>
                          <GradientStop Color="#FFAEB7BF" Offset="0"/>
                          <GradientStop Color="#FF919EA7" Offset="0.35"/>
                          <GradientStop Color="#FF7A8A99" Offset="0.35"/>
                        </LinearGradientBrush>
                      </Rectangle.Stroke>
                    </Rectangle>
                    <Rectangle x:Name="BackgroundMouseOver" Opacity="0" RadiusX="2" RadiusY="2" Fill="#FF448DCA" StrokeThickness="1" Stroke="#00000000"/>
                    <Rectangle x:Name="BackgroundPressed" Opacity="0" RadiusX="2" RadiusY="2" Fill="#FF448DCA" StrokeThickness="1" Stroke="#00000000"/>
                    <Rectangle x:Name="BackgroundGradient" Opacity="0" RadiusX="1" RadiusY="1" StrokeThickness="1" Margin="1" Stroke="#FFFFFFFF">
                      <Rectangle.Fill>
                        <LinearGradientBrush StartPoint="0,.7" EndPoint="1,.7">
                          <GradientStop Color="#FFFFFFFF" Offset="0.013" />
                          <GradientStop Color="#F9FFFFFF" Offset="0.375" />
                          <GradientStop Color="#E5FFFFFF" Offset="0.603" />
                          <GradientStop Color="#C6FFFFFF" Offset="1" />
                        </LinearGradientBrush>
                      </Rectangle.Fill>
                    </Rectangle>
                    <Rectangle x:Name="Highlight" Opacity="0" RadiusX="1" RadiusY="1" IsHitTestVisible="false" Stroke="#FF6DBDD1" StrokeThickness="1" Margin="1" />
                    <Path Stretch="Uniform" Height="4" Width="8" Data="F1 M 531.107,321.943L 541.537,321.943L 536.322,328.042L 531.107,321.943 Z ">
                      <Path.Fill>
                        <SolidColorBrush x:Name="ButtonColor" Color="#FF333333" />
                      </Path.Fill>
                    </Path>
                    <Rectangle x:Name="DisabledElement" Opacity="0" RadiusX="2" RadiusY="2" Fill="#FFFFFFFF"/>
                  </Grid>
                </ControlTemplate>
                <ControlTemplate x:Key="VerticalDecrementTemplate" TargetType="{x:Type RepeatButton}">
                  <Grid x:Name="Root">
                    <VisualStateManager.VisualStateGroups>
                      <VisualStateGroup Name="CommonStates">
                        <VisualState Name="Normal" />
                        <VisualState Name="MouseOver">
                          <Storyboard>
                            <DoubleAnimation Duration="0:0:0" Storyboard.TargetName="Background" Storyboard.TargetProperty="Opacity" To="1"/>
                            <DoubleAnimation Duration="0:0:0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="Opacity" To="1"/>
                            <DoubleAnimation Duration="0:0:0" Storyboard.TargetName="BackgroundMouseOver" Storyboard.TargetProperty="Opacity" To="1"/>
                            <ColorAnimation Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Duration="0" To="#7FFFFFFF"/>
                            <ColorAnimation Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Duration="0" To="#CCFFFFFF"/>
                            <ColorAnimation Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Duration="0" To="#F2FFFFFF"/>
                          </Storyboard>
                        </VisualState>
                        <VisualState Name="Pressed">
                          <Storyboard>
                            <DoubleAnimation Duration="0:0:0" Storyboard.TargetName="Background" Storyboard.TargetProperty="Opacity" To="1"/>
                            <DoubleAnimation Duration="0:0:0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="Opacity" To="1"/>
                            <DoubleAnimation Duration="0:0:0" Storyboard.TargetName="BackgroundPressed" Storyboard.TargetProperty="Opacity" To="1"/>
                            <DoubleAnimation Storyboard.TargetName="Highlight" Storyboard.TargetProperty="(UIElement.Opacity)" Duration="0" To="1"/>
                            <ColorAnimation Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Duration="0" To="#6BFFFFFF"/>
                            <ColorAnimation Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Duration="0" To="#C6FFFFFF"/>
                            <ColorAnimation Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Duration="0" To="#EAFFFFFF"/>
                            <ColorAnimation Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Duration="0" To="#F4FFFFFF"/>
                          </Storyboard>
                        </VisualState>
                        <VisualState Name="Disabled">
                          <Storyboard>
                            <DoubleAnimation Duration="0:0:0" Storyboard.TargetName="DisabledElement" Storyboard.TargetProperty="Opacity" To=".7" />
                          </Storyboard>
                        </VisualState>
                      </VisualStateGroup>
                    </VisualStateManager.VisualStateGroups>
                    <Rectangle x:Name="Background" Opacity="0" RadiusX="2" RadiusY="2" Fill="#FF1F3B53" StrokeThickness="1">
                      <Rectangle.Stroke>
                        <LinearGradientBrush EndPoint="1,.5" StartPoint="0,.5">
                          <GradientStop Color="#FF647480" Offset="1"/>
                          <GradientStop Color="#FFAEB7BF" Offset="0"/>
                          <GradientStop Color="#FF919EA7" Offset="0.35"/>
                          <GradientStop Color="#FF7A8A99" Offset="0.35"/>
                        </LinearGradientBrush>
                      </Rectangle.Stroke>
                    </Rectangle>
                    <Rectangle x:Name="BackgroundMouseOver" Opacity="0" RadiusX="2" RadiusY="2" Fill="#FF448DCA" StrokeThickness="1" Stroke="#00000000"/>
                    <Rectangle x:Name="BackgroundPressed" Opacity="0" RadiusX="2" RadiusY="2" Fill="#FF448DCA" StrokeThickness="1" Stroke="#00000000"/>
                    <Rectangle x:Name="BackgroundGradient" Opacity="0" RadiusX="1" RadiusY="1" StrokeThickness="1" Margin="1" Stroke="#FFFFFFFF">
                      <Rectangle.Fill>
                        <LinearGradientBrush StartPoint="0,.7" EndPoint="1,.7">
                          <GradientStop Color="#FFFFFFFF" Offset="0.013" />
                          <GradientStop Color="#F9FFFFFF" Offset="0.375" />
                          <GradientStop Color="#E5FFFFFF" Offset="0.603" />
                          <GradientStop Color="#C6FFFFFF" Offset="1" />
                        </LinearGradientBrush>
                      </Rectangle.Fill>
                    </Rectangle>
                    <Rectangle x:Name="Highlight" Opacity="0" RadiusX="1" RadiusY="1" IsHitTestVisible="false" Stroke="#FF6DBDD1" StrokeThickness="1" Margin="1" />
                    <Path Stretch="Uniform" Height="4" Width="8" Data="F1 M 541.537,173.589L 531.107,173.589L 536.322,167.49L 541.537,173.589 Z ">
                      <Path.Fill>
                        <SolidColorBrush x:Name="ButtonColor" Color="#FF333333" />
                      </Path.Fill>
                    </Path>
                    <Rectangle x:Name="DisabledElement" Opacity="0" RadiusX="2" RadiusY="2" Fill="#FFFFFFFF"/>
                  </Grid>
                </ControlTemplate>

                <!-- Thumb Templates -->
                <ControlTemplate x:Key="VerticalThumbTemplate" TargetType="{x:Type Thumb}">
                  <Grid>
                    <VisualStateManager.VisualStateGroups>
                      <VisualStateGroup Name="CommonStates">
                        <VisualState Name="Normal" />
                        <VisualState Name="MouseOver">
                          <Storyboard>
                            <DoubleAnimation Duration="0:0:0" Storyboard.TargetName="BackgroundMouseOver" Storyboard.TargetProperty="Opacity" To="1"/>
                            <ColorAnimation Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Duration="0" To="#7FFFFFFF"/>
                            <ColorAnimation Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Duration="0" To="#CCFFFFFF"/>
                            <ColorAnimation Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Duration="0" To="#F2FFFFFF"/>
                          </Storyboard>
                        </VisualState>
                        <VisualState Name="Pressed">
                          <Storyboard>
                            <DoubleAnimation Duration="0:0:0" Storyboard.TargetName="BackgroundPressed" Storyboard.TargetProperty="Opacity" To="1"/>
                            <DoubleAnimation Storyboard.TargetName="Highlight" Storyboard.TargetProperty="(UIElement.Opacity)" Duration="0" To="1"/>
                            <ColorAnimation Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Duration="0" To="#6BFFFFFF"/>
                            <ColorAnimation Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Duration="0" To="#C6FFFFFF"/>
                            <ColorAnimation Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Duration="0" To="#EAFFFFFF"/>
                            <ColorAnimation Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Duration="0" To="#F4FFFFFF"/>
                          </Storyboard>
                        </VisualState>
                        <VisualState Name="Disabled">
                          <Storyboard>
                            <DoubleAnimation Duration="0:0:0" Storyboard.TargetName="ThumbVisual" Storyboard.TargetProperty="Opacity" To="0" />
                          </Storyboard>
                        </VisualState>
                      </VisualStateGroup>
                    </VisualStateManager.VisualStateGroups>
                    <Grid x:Name="ThumbVisual" Margin="1,0,1,0">
                      <Rectangle x:Name="Background" RadiusX="2" RadiusY="2" Fill="#FF1F3B53" StrokeThickness="1">
                        <Rectangle.Stroke>
                          <LinearGradientBrush EndPoint="1,.5" StartPoint="0,.5">
                            <GradientStop Color="#FF818F99" Offset="1"/>
                            <GradientStop Color="#FFC2C9CE" Offset="0"/>
                            <GradientStop Color="#FFB3BBC1" Offset="0.35"/>
                            <GradientStop Color="#FF96A4B1" Offset="0.35"/>
                          </LinearGradientBrush>
                        </Rectangle.Stroke>
                      </Rectangle>
                      <Rectangle x:Name="BackgroundMouseOver" Opacity="0" RadiusX="2" RadiusY="2" Fill="#FF448DCA" StrokeThickness="1" Stroke="#00000000"/>
                      <Rectangle x:Name="BackgroundPressed" Opacity="0" RadiusX="2" RadiusY="2" Fill="#FF448DCA" StrokeThickness="1" Stroke="#00000000"/>
                      <Rectangle x:Name="BackgroundGradient" RadiusX="1" RadiusY="1" StrokeThickness="1" Margin="1" Stroke="#FFFFFFFF">
                        <Rectangle.Fill>
                          <LinearGradientBrush StartPoint="0,.7" EndPoint="1,.7">
                            <GradientStop Color="#FFFFFFFF" Offset="0" />
                            <GradientStop Color="#F9FFFFFF" Offset="0.375" />
                            <GradientStop Color="#E5FFFFFF" Offset="0.6" />
                            <GradientStop Color="#C6FFFFFF" Offset="1" />
                          </LinearGradientBrush>
                        </Rectangle.Fill>
                      </Rectangle>
                      <Rectangle x:Name="Highlight" RadiusX="1" RadiusY="1" Opacity="0" IsHitTestVisible="false" Stroke="#FF6DBDD1" StrokeThickness="1" Margin="1" />
                    </Grid>
                  </Grid>
                </ControlTemplate>
              </Grid.Resources>

              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup Name="CommonStates">
                  <VisualState Name="Normal" />
                  <VisualState Name="MouseOver" />
                  <VisualState Name="Disabled">
                    <Storyboard>
                      <DoubleAnimation Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="0.5" Duration="0" />
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>

              <Grid.RowDefinitions>
                <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                <RowDefinition Height="0.00001*"/>
                <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
              </Grid.RowDefinitions>

              <!-- Track Layer -->
              <Rectangle Grid.RowSpan="3" RadiusX="1" RadiusY="1" StrokeThickness="1" Stroke="#00000000">
                <Rectangle.Fill>
                  <LinearGradientBrush StartPoint="1,0.5" EndPoint="0,0.5">
                    <GradientStop Color="#FFF4F6F7" Offset="0"/>
                    <GradientStop Color="#FFF0F4F7" Offset="0.344"/>
                    <GradientStop Color="#FFDFE3E6" Offset="1"/>
                    <GradientStop Color="#FFE9EEF4" Offset="0.527"/>
                  </LinearGradientBrush>
                </Rectangle.Fill>
              </Rectangle>
              <Rectangle Grid.RowSpan="3" RadiusX="1" RadiusY="1" StrokeThickness="1" Opacity=".375">
                <Rectangle.Stroke>
                  <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFA3AEB9" Offset="0"/>
                    <GradientStop Color="#FF8399A9" Offset="0.375"/>
                    <GradientStop Color="#FF718597" Offset="0.375"/>
                    <GradientStop Color="#FF617584" Offset="1"/>
                  </LinearGradientBrush>
                </Rectangle.Stroke>
              </Rectangle>
              <Rectangle Grid.RowSpan="3" RadiusX="1" RadiusY="1" Margin="1">
                <Rectangle.Stroke>
                  <LinearGradientBrush EndPoint="0.125,0.5" StartPoint="0.875,0.5">
                    <GradientStop Color="#33FFFFFF"/>
                    <GradientStop Color="#99FFFFFF" Offset="1"/>
                  </LinearGradientBrush>
                </Rectangle.Stroke>
              </Rectangle>

              <RepeatButton x:Name="VerticalSmallDecrease" Height="16" IsTabStop="False" Interval="50" Template="{StaticResource VerticalDecrementTemplate}" Margin="1"
                    Command="{x:Static ScrollBar.LineUpCommand}"/>
              <Track Grid.Row="1"
             Name="PART_Track"
             IsEnabled="{TemplateBinding IsMouseOver}"
             IsDirectionReversed="true">
                <Track.DecreaseRepeatButton>
                  <RepeatButton Template="{StaticResource RepeatButtonTemplate}" Interval="50" IsTabStop="False"
                    Command="{x:Static ScrollBar.PageUpCommand}"/>
                </Track.DecreaseRepeatButton>
                <Track.IncreaseRepeatButton>
                  <RepeatButton Template="{StaticResource RepeatButtonTemplate}" Interval="50" IsTabStop="False"
                    Command="{x:Static ScrollBar.PageDownCommand}"/>
                </Track.IncreaseRepeatButton>
                <Track.Thumb>
                  <Thumb MinHeight="18" Height="18" Template="{StaticResource VerticalThumbTemplate}"/>
                </Track.Thumb>
              </Track>
              <RepeatButton Grid.Row="2"
                    Height="16" IsTabStop="False" Interval="50" Template="{StaticResource VerticalIncrementTemplate}" Margin="1"
                    Command="{x:Static ScrollBar.LineDownCommand}"/>
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <!-- Disable animations when opening ComboBox dropdown.  They interfere with the test -->
    <PopupAnimation x:Key="{x:Static SystemParameters.ComboBoxPopupAnimationKey}">None</PopupAnimation>

    <!-- Default style for System.Windows.Controls.ComboBox -->
    <Style x:Key="ComboBox" TargetType="{x:Type ComboBox}">
      <Setter Property="Padding" Value="6,2,25,2" />
      <Setter Property="Background" Value="#FF1F3B53"/>
      <Setter Property="HorizontalContentAlignment" Value="Left"/>
      <Setter Property="BorderThickness" Value="1"/>
      <Setter Property="BorderBrush">
        <Setter.Value>
          <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#FFA3AEB9" Offset="0"/>
            <GradientStop Color="#FF8399A9" Offset="0.375"/>
            <GradientStop Color="#FF718597" Offset="0.375"/>
            <GradientStop Color="#FF617584" Offset="1"/>
          </LinearGradientBrush>
        </Setter.Value>
      </Setter>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type ComboBox}">
            <Grid>
              <Grid.Resources>
                <Style x:Key="comboToggleStyle" TargetType="{x:Type ToggleButton}">
                  <Setter Property="Foreground" Value="#FF333333"/>
                  <Setter Property="Background" Value="#FF1F3B53"/>
                  <Setter Property="BorderBrush">
                    <Setter.Value>
                      <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FFA3AEB9" Offset="0"/>
                        <GradientStop Color="#FF8399A9" Offset="0.375"/>
                        <GradientStop Color="#FF718597" Offset="0.375"/>
                        <GradientStop Color="#FF617584" Offset="1"/>
                      </LinearGradientBrush>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="BorderThickness" Value="1"/>
                  <Setter Property="Padding" Value="3"/>
                  <Setter Property="Template">
                    <Setter.Value>
                      <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Grid>
                          <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="CommonStates">
                              <VisualState Name="Normal"/>
                              <VisualState Name="MouseOver">
                                <Storyboard>
                                  <DoubleAnimation Duration="0" Storyboard.TargetName="BackgroundOverlay" Storyboard.TargetProperty="Opacity" To="1"/>
                                  <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)" To="#7FFFFFFF"/>
                                  <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)" To="#CCFFFFFF"/>
                                  <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" To="#F2FFFFFF"/>
                                </Storyboard>
                              </VisualState>
                              <VisualState Name="Pressed">
                                <Storyboard>
                                  <DoubleAnimation Duration="0" Storyboard.TargetName="BackgroundOverlay2" Storyboard.TargetProperty="Opacity" To="1"/>
                                  <DoubleAnimation Duration="0" Storyboard.TargetName="Highlight" Storyboard.TargetProperty="(UIElement.Opacity)" To="1"/>
                                  <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" To="#E5FFFFFF"/>
                                  <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)" To="#BCFFFFFF"/>
                                  <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)" To="#6BFFFFFF"/>
                                  <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" To="#F2FFFFFF"/>
                                </Storyboard>
                              </VisualState>
                              <VisualState Name="Disabled" />
                            </VisualStateGroup>
                            <VisualStateGroup Name="CheckStates">
                              <VisualState Name="Checked">
                                <Storyboard>
                                  <DoubleAnimation Duration="0" Storyboard.TargetName="BackgroundOverlay3" Storyboard.TargetProperty="(UIElement.Opacity)" To="1"/>
                                  <DoubleAnimation Duration="0" Storyboard.TargetName="Highlight" Storyboard.TargetProperty="(UIElement.Opacity)" To="1"/>
                                  <DoubleAnimation Duration="0" Storyboard.TargetName="BackgroundGradient2" Storyboard.TargetProperty="(UIElement.Opacity)" To="1"/>
                                  <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient2" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" To="#E5FFFFFF"/>
                                  <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient2" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)" To="#BCFFFFFF"/>
                                  <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient2" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)" To="#6BFFFFFF"/>
                                  <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient2" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" To="#F2FFFFFF"/>
                                </Storyboard>
                              </VisualState>
                              <VisualState Name="Unchecked"/>
                            </VisualStateGroup>
                            <VisualStateGroup Name="FocusStates">
                              <VisualState Name="Focused">
                                <Storyboard>
                                  <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Visibility" Duration="0">
                                    <DiscreteObjectKeyFrame KeyTime="0">
                                      <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                      </DiscreteObjectKeyFrame.Value>
                                    </DiscreteObjectKeyFrame>
                                  </ObjectAnimationUsingKeyFrames>
                                </Storyboard>
                              </VisualState>
                              <VisualState Name="Unfocused" />
                            </VisualStateGroup>
                          </VisualStateManager.VisualStateGroups>

                          <Rectangle x:Name="Background" RadiusX="3" RadiusY="3" Fill="{TemplateBinding Background}" StrokeThickness="{TemplateBinding BorderThickness}" Stroke="{TemplateBinding BorderBrush}"/>
                          <Rectangle x:Name="BackgroundOverlay" Opacity="0" RadiusX="3" RadiusY="3" Fill="#FF448DCA" StrokeThickness="{TemplateBinding BorderThickness}" Stroke="#00000000"/>
                          <Rectangle x:Name="BackgroundOverlay2" Opacity="0" RadiusX="3" RadiusY="3" Fill="#FF448DCA" StrokeThickness="{TemplateBinding BorderThickness}" Stroke="#00000000"/>
                          <Rectangle x:Name="BackgroundGradient" RadiusX="2" RadiusY="2" StrokeThickness="1" Margin="{TemplateBinding BorderThickness}" Stroke="#FFFFFFFF">
                            <Rectangle.Fill>
                              <LinearGradientBrush StartPoint=".7,0" EndPoint=".7,1">
                                <GradientStop Color="#FFFFFFFF" Offset="0" />
                                <GradientStop Color="#F9FFFFFF" Offset="0.375" />
                                <GradientStop Color="#E5FFFFFF" Offset="0.625" />
                                <GradientStop Color="#C6FFFFFF" Offset="1" />
                              </LinearGradientBrush>
                            </Rectangle.Fill>
                          </Rectangle>
                          <Rectangle Opacity="0" x:Name="BackgroundOverlay3" RadiusX="3" RadiusY="3" Fill="#FF448DCA" StrokeThickness="{TemplateBinding BorderThickness}" Stroke="#00000000"/>
                          <Rectangle Opacity="0" x:Name="BackgroundGradient2" RadiusX="2" RadiusY="2" StrokeThickness="1" Margin="{TemplateBinding BorderThickness}" Stroke="#FFFFFFFF">
                            <Rectangle.Fill>
                              <LinearGradientBrush StartPoint=".7,0" EndPoint=".7,1">
                                <GradientStop Color="#FFFFFFFF" Offset="0" />
                                <GradientStop Color="#F9FFFFFF" Offset="0.375" />
                                <GradientStop Color="#E5FFFFFF" Offset="0.625" />
                                <GradientStop Color="#C6FFFFFF" Offset="1" />
                              </LinearGradientBrush>
                            </Rectangle.Fill>
                          </Rectangle>
                          <Rectangle x:Name="Highlight" RadiusX="2" RadiusY="2" Opacity="0" IsHitTestVisible="false" Stroke="#FF6DBDD1" StrokeThickness="1" Margin="{TemplateBinding BorderThickness}" />

                          <ContentPresenter
                                      x:Name="contentPresenter"
                                      Content="{TemplateBinding Content}"
                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      Margin="{TemplateBinding Padding}"/>

                          <Rectangle x:Name="FocusVisualElement" RadiusX="3.5" Margin="1"  RadiusY="3.5" Stroke="#FF6DBDD1" StrokeThickness="1" Visibility="Collapsed" IsHitTestVisible="false" />
                        </Grid>
                      </ControlTemplate>
                    </Setter.Value>
                  </Setter>
                </Style>
              </Grid.Resources>
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup Name="CommonStates">
                  <VisualState Name="Normal" />
                  <VisualState Name="MouseOver" />
                  <VisualState Name="Disabled">
                    <Storyboard>
                      <DoubleAnimation Duration="00:00:00" Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)" To=".55"/>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
                <VisualStateGroup Name="FocusStates">
                  <VisualState Name="Focused">
                    <Storyboard>
                      <DoubleAnimation Duration="00:00:00" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)" To="1"/>
                    </Storyboard>
                  </VisualState>
                  <VisualState Name="Unfocused"/>
                  <VisualState Name="FocusedDropDown">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Duration="00:00:00" Storyboard.TargetName="PopupBorder" Storyboard.TargetProperty="(UIElement.Visibility)">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
                <VisualStateGroup Name="EditStates">
                  <VisualState Name="Editable">
                    <Storyboard>
                      <DoubleAnimation Duration="00:00:00" Storyboard.TargetName="FocusVisualElement2" Storyboard.TargetProperty="(UIElement.Opacity)" To="1"/>
                    </Storyboard>
                  </VisualState>
                  <VisualState Name="Uneditable" />
                </VisualStateGroup>
                <VisualStateGroup Name="ValidationStates">
                  <VisualState Name="Valid"/>
                  <VisualState Name="InvalidUnfocused">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0" >
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState Name="InvalidFocused">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0" >
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="validationTooltip" Storyboard.TargetProperty="IsOpen">
                        <DiscreteObjectKeyFrame KeyTime="0" >
                          <DiscreteObjectKeyFrame.Value>
                            <sys:Boolean>True</sys:Boolean>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>

              <Border x:Name="ContentPresenterBorder">
                <Grid>
                  <ToggleButton x:Name="DropDownToggle"
                                Style="{StaticResource comboToggleStyle}"
                                IsChecked="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ComboBox}}, Path=IsDropDownOpen, Mode=TwoWay}"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                Margin="0"
                                HorizontalContentAlignment="Right"
                                Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}">
                    <Path x:Name="BtnArrow"
                          Height="4"
                          Width="8"
                          Stretch="Uniform"
                          Data="F1 M 301.14,-189.041L 311.57,-189.041L 306.355,-182.942L 301.14,-189.041 Z "
                          Margin="0,0,6,0"
                          HorizontalAlignment="Right">
                      <Path.Fill>
                        <SolidColorBrush x:Name="BtnArrowColor" Color="#FF333333"/>
                      </Path.Fill>
                    </Path>
                  </ToggleButton>
                  <ContentPresenter x:Name="ContentPresenter"
                                    Margin="{TemplateBinding Padding}"
                                    Content="{TemplateBinding ComboBox.SelectionBoxItem}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                </Grid>
              </Border>

              <Rectangle x:Name="DisabledVisualElement" RadiusX="3" RadiusY="3" Fill="White" Opacity="0" IsHitTestVisible="false" />
              <Rectangle x:Name="FocusVisualElement" RadiusX="2" RadiusY="2" Margin="1"  Stroke="#FF6DBDD1" StrokeThickness="1" Opacity="0" IsHitTestVisible="false" />
              <Rectangle x:Name="FocusVisualElement2" RadiusX="2" RadiusY="2" Margin="1"  Stroke="#FF6DBDFF" StrokeThickness="1" Opacity="0" IsHitTestVisible="false" />

              <Popup x:Name="Popup" >
                <Border x:Name="PopupBorder"
                        HorizontalAlignment="Stretch"
                        Height="Auto"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        CornerRadius="3">
                  <Border.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                      <GradientStop Color="#FFFFFFFF" Offset="0"/>
                      <GradientStop Color="#FFFEFEFE" Offset="1"/>
                    </LinearGradientBrush>
                  </Border.Background>
                  <ScrollViewer x:Name="ScrollViewer" BorderThickness="0" Padding="1">
                    <ItemsPresenter/>
                  </ScrollViewer>
                </Border>
              </Popup>

              <Border x:Name="ValidationErrorElement"
                      Margin="1"
                      BorderThickness="1"
                      CornerRadius="1"
                      BorderBrush="#FFDB000C"
                      Visibility="Collapsed"
                      ToolTipService.PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                <ToolTipService.ToolTip>
                  <ToolTip x:Name="validationTooltip"
                       Template="{StaticResource ValidationToolTipTemplate}"
                       DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                       Placement="Right"
                       PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                  </ToolTip>
                </ToolTipService.ToolTip>
                <Grid Width="10" Height="10" HorizontalAlignment="Right" Margin="0,-4,-4,0" VerticalAlignment="Top" Background="Transparent">
                  <Path Margin="0,3,0,0" Data="M 1,0 L5,0 A 2,2 90 0 1 7,2 L7,6 z" Fill="#FFDC000C"/>
                  <Path Margin="0,3,0,0" Data="M 0,0 L2,0 L 7,5 L7,7" Fill="#ffffff"/>
                </Grid>
              </Border>
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <!-- Default style for System.Windows.Controls.Slider -->
    <Style x:Key="Slider" TargetType="{x:Type Slider}">
      <Setter Property="BorderThickness" Value="1" />
      <Setter Property="Maximum" Value="10" />
      <Setter Property="Minimum" Value="0" />
      <Setter Property="Value" Value="0" />
      <Setter Property="BorderBrush">
        <Setter.Value>
          <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#FFA3AEB9" Offset="0"/>
            <GradientStop Color="#FF8399A9" Offset="0.375"/>
            <GradientStop Color="#FF718597" Offset="0.375"/>
            <GradientStop Color="#FF617584" Offset="1"/>
          </LinearGradientBrush>
        </Setter.Value>
      </Setter>
      <Setter Property="IsTabStop" Value="False" />
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type Slider}">
            <Grid x:Name="Root">
              <Grid.Resources>
                <SolidColorBrush x:Key="FocusColor" Color="Blue"/>
                <ControlTemplate x:Key="RepeatButtonTemplate">
                  <Grid x:Name="Root" Opacity="0" Background="Transparent"/>
                </ControlTemplate>
              </Grid.Resources>
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup Name="CommonStates">
                  <VisualState Name="Normal"/>
                  <VisualState Name="MouseOver"/>
                  <VisualState Name="Disabled">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalTrackRectangleDisabledOverlay" Storyboard.TargetProperty="Visibility" Duration="0">
                        <DiscreteObjectKeyFrame KeyTime="0">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ThumbDisabledOverlay" Storyboard.TargetProperty="Visibility" Duration="0">
                        <DiscreteObjectKeyFrame KeyTime="0">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalTrackRectangleDisabledOverlay" Storyboard.TargetProperty="Visibility" Duration="0">
                        <DiscreteObjectKeyFrame KeyTime="0">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
                <VisualStateGroup Name="FocusStates">
                  <VisualState Name="Focused">
                    <Storyboard>
                      <DoubleAnimation Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Opacity" To="1" Duration="0"/>
                    </Storyboard>
                  </VisualState>
                  <VisualState Name="Unfocused">
                    <Storyboard>
                      <DoubleAnimation Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Opacity" To="0" Duration="0"/>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>

              <!-- Horizontal Template -->
              <Grid x:Name="HorizontalTemplate" Background="{TemplateBinding Background}">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto"/>
                  <ColumnDefinition Width="Auto"/>
                  <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <!-- Track Layer -->
                <Rectangle x:Name="TrackRectangle" Stroke="#FFA3AEB9" StrokeThickness="{TemplateBinding BorderThickness}" Fill="#FFE6EFF7" Grid.Column="0" Grid.ColumnSpan="3" Height="3" RadiusX="1" RadiusY="1" Margin="5,0,5,0" />
                <Rectangle x:Name="HorizontalTrackRectangleDisabledOverlay" Visibility="Collapsed"  Fill="White" Opacity=".55" Grid.Column="0" Grid.ColumnSpan="3" Height="3" RadiusX="1" RadiusY="1" Margin="5,0,5,0" />
                <!-- Repeat Buttons + Thumb -->
                <RepeatButton x:Name="HorizontalTrackLargeChangeDecreaseRepeatButton" IsTabStop="False" Template="{StaticResource RepeatButtonTemplate}" Grid.Column="0"/>
                <Thumb Height="18" x:Name="HorizontalThumb" Width="11" Grid.Column="1" IsTabStop="True"/>
                <Rectangle x:Name="ThumbDisabledOverlay" RadiusX="2" RadiusY="2"  Width="11" Grid.Column="1" Fill="White" Opacity=".55" Visibility="Collapsed"/>
                <RepeatButton x:Name="HorizontalTrackLargeChangeIncreaseRepeatButton" IsTabStop="False" Template="{StaticResource RepeatButtonTemplate}" Grid.Column="2"/>
              </Grid>

              <!-- Vertical Template -->
              <Grid x:Name="VerticalTemplate" Visibility="Collapsed" Background="{TemplateBinding Background}">
                <Grid.RowDefinitions>
                  <RowDefinition Height="*"/>
                  <RowDefinition Height="Auto"/>
                  <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <!-- Track Layer -->
                <Rectangle Stroke="#FFA3AEB9" StrokeThickness="{TemplateBinding BorderThickness}" Fill="#FFE6EFF7" Grid.Row="0" Grid.RowSpan="3" Width="3" RadiusX="1" RadiusY="1" Margin="0,5,0,5" />
                <Rectangle x:Name="VerticalTrackRectangleDisabledOverlay" Visibility="Collapsed"  Fill="White" Opacity=".55" Grid.Row="0" Grid.RowSpan="3" Width="3" RadiusX="1" RadiusY="1" Margin="0,5,0,5" />
                <!-- Repeat Buttons + Thumb -->
                <RepeatButton x:Name="VerticalTrackLargeChangeDecreaseRepeatButton" IsTabStop="False" Template="{StaticResource RepeatButtonTemplate}" Grid.Row="2"/>
                <Thumb Height="11" x:Name="VerticalThumb" Width="18" Grid.Row="1" IsTabStop="True"/>
                <RepeatButton x:Name="VerticalTrackLargeChangeIncreaseRepeatButton" IsTabStop="False" Template="{StaticResource RepeatButtonTemplate}" Grid.Row="0"/>

                <Rectangle x:Name="FocusVisualElement" Stroke="{StaticResource FocusColor}" StrokeThickness="1" Visibility="Collapsed" RadiusX="1" RadiusY="1" />

              </Grid>

            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <!-- Default style for System.Windows.Controls.ProgressBar -->
    <Style x:Key="ProgressBar" TargetType="{x:Type ProgressBar}">
      <Setter Property="Foreground" Value="#FF027DB8"/>
      <Setter Property="Background" Value="#FFD2D5D8" />
      <Setter Property="BorderThickness" Value="1"/>
      <Setter Property="Maximum" Value="100" />
      <Setter Property="IsTabStop" Value="False"/>
      <Setter Property="BorderBrush">
        <Setter.Value>
          <LinearGradientBrush EndPoint=".5,1" StartPoint=".5,0">
            <GradientStop Color="#FFAEB7BF" Offset="0"/>
            <GradientStop Color="#FF919EA7" Offset="0.35"/>
            <GradientStop Color="#FF7A8A99" Offset="0.35"/>
            <GradientStop Color="#FF647480" Offset="1"/>
          </LinearGradientBrush>
        </Setter.Value>
      </Setter>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type ProgressBar}">
            <Grid x:Name="Root">
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup Name="CommonStates">
                  <VisualState Name="Determinate"/>
                  <VisualState Name="Indeterminate">
                    <Storyboard RepeatBehavior="Forever">
                      <DoubleAnimation Storyboard.TargetName="IndeterminateGradientFill"
                   Storyboard.TargetProperty="(Shape.Fill).(LinearGradientBrush.Transform).(TransformGroup.Children)[0].X"
                   Duration="00:00:.5" From="0" To="20" />
                      <ObjectAnimationUsingKeyFrames Duration="00:00:00" Storyboard.TargetName="IndeterminateRoot" Storyboard.TargetProperty="(UIElement.Visibility)">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Duration="00:00:00" Storyboard.TargetName="DeterminateRoot" Storyboard.TargetProperty="(UIElement.Visibility)">
                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Collapsed</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>
              <!--Default Root Visuals for either type of ProgressBar-->
              <Border Name="ProgressBarTrack" CornerRadius="3" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" />
              <Grid x:Name="ProgressBarRootGrid" >
                <!-- Beginning of Gradient over all visuals -->
                <Rectangle Canvas.ZIndex="1" x:Name="ProgressBarRootGradient" StrokeThickness="1" Margin="{TemplateBinding BorderThickness}" Stroke="#FFFFFFFF" RadiusX="1.5" RadiusY="1.5">
                  <Rectangle.Fill>
                    <LinearGradientBrush StartPoint=".7,0" EndPoint=".7,1">
                      <GradientStop Color="#B2FFFFFF" Offset="0" />
                      <GradientStop Color="#C6FFFFFF" Offset="0.15"/>
                      <GradientStop Color="#D1FFFFFF" Offset="0.275" />
                      <GradientStop Color="#C6FFFFFF" Offset="0.4"/>
                      <GradientStop Color="#BFFFFFFF" Offset="0.65" />
                      <GradientStop Color="#A5FFFFFF" Offset="0.75"/>
                      <GradientStop Color="#91FFFFFF" Offset="0.85"/>
                      <GradientStop Color="#72FFFFFF" Offset="1" />
                    </LinearGradientBrush>
                  </Rectangle.Fill>
                </Rectangle>
                <!-- Beginning of Indeterminate Progress Bar Visuals-->
                <Grid x:Name="IndeterminateRoot" Visibility="Collapsed">
                  <Rectangle x:Name="IndeterminateSolidFill" Stroke="#FF448DCA" RadiusX="2" RadiusY="2" StrokeThickness="0" Margin="{TemplateBinding BorderThickness}" Fill="{TemplateBinding Foreground}" Opacity="1" RenderTransformOrigin="0.5,0.5" />
                  <Rectangle x:Name="IndeterminateGradientFill" RadiusX="2" RadiusY="2" StrokeThickness="1" Margin="{TemplateBinding BorderThickness}" Opacity="0.7" >
                    <Rectangle.Fill>
                      <LinearGradientBrush SpreadMethod="Repeat" MappingMode="Absolute" EndPoint="0,1" StartPoint="20,1">
                        <LinearGradientBrush.Transform >
                          <TransformGroup>
                            <TranslateTransform X="0" />
                            <SkewTransform AngleX="-30" />
                          </TransformGroup>
                        </LinearGradientBrush.Transform>
                        <GradientStop Color="#FFFFFFFF" Offset="0"/>
                        <GradientStop Color="#00FFFFFF" Offset=".25"/>
                        <GradientStop Color="#FFFFFFFF" Offset="0.85"/>
                      </LinearGradientBrush>
                    </Rectangle.Fill>
                  </Rectangle>
                </Grid>
                <!-- Beginning of Determinate Progress Bar Visuals-->
                <Grid x:Name="DeterminateRoot" Margin="1" >
                  <!--Background -->
                  <Rectangle HorizontalAlignment="Left" x:Name="ProgressBarIndicator" Margin="{TemplateBinding BorderThickness}" StrokeThickness="0.5" RadiusX="1.5" RadiusY="1.5" Fill="{TemplateBinding Foreground}"/>
                </Grid>
              </Grid>
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <!-- Default style for System.Windows.Controls.TextBox -->
    <Style x:Key="TextBox" TargetType="{x:Type TextBox}">
      <Setter Property="BorderThickness" Value="1" />
      <Setter Property="Background" Value="#FFFFFFFF" />
      <Setter Property="Foreground" Value="#FF000000" />
      <Setter Property="Padding" Value="2" />
      <Setter Property="BorderBrush">
        <Setter.Value>
          <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#FFA3AEB9" Offset="0"/>
            <GradientStop Color="#FF8399A9" Offset="0.375"/>
            <GradientStop Color="#FF718597" Offset="0.375"/>
            <GradientStop Color="#FF617584" Offset="1"/>
          </LinearGradientBrush>
        </Setter.Value>
      </Setter>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type TextBox}">
            <Grid x:Name="RootElement">
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup Name="CommonStates">
                  <VisualState Name="Normal" />
                  <VisualState Name="MouseOver">
                    <Storyboard>
                      <ColorAnimation Storyboard.TargetName="MouseOverBorder" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="#FF99C1E2" Duration="0"/>
                    </Storyboard>
                  </VisualState>
                  <VisualState Name="Disabled">
                    <Storyboard>
                      <DoubleAnimation Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="Opacity" To="1" Duration="0"/>
                    </Storyboard>
                  </VisualState>
                  <VisualState Name="ReadOnly" >
                    <Storyboard>
                      <DoubleAnimation Storyboard.TargetName="ReadOnlyVisualElement" Storyboard.TargetProperty="Opacity" To="1" Duration="0" />
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
                <VisualStateGroup Name="FocusStates">
                  <VisualState Name="Focused">
                    <Storyboard>
                      <DoubleAnimation Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Opacity" To="1" Duration="0"/>
                    </Storyboard>
                  </VisualState>
                  <VisualState Name="Unfocused">
                    <Storyboard>
                      <DoubleAnimation Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Opacity" To="0" Duration="0"/>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
                <VisualStateGroup Name="ValidationStates">
                  <VisualState Name="Valid"/>
                  <VisualState Name="InvalidFocused">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0" >
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="validationTooltip" Storyboard.TargetProperty="IsOpen">
                        <DiscreteObjectKeyFrame KeyTime="0" >
                          <DiscreteObjectKeyFrame.Value>
                            <sys:Boolean>True</sys:Boolean>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState Name="InvalidUnfocused">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0" >
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>

              <Border x:Name="Border" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="1" Opacity="1" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}">
                <Grid>
                  <Border x:Name="ReadOnlyVisualElement" Background="#72F7F7F7" Opacity="0" />
                  <Border x:Name="MouseOverBorder" BorderThickness="1" BorderBrush="Transparent">
                    <ScrollViewer x:Name="PART_ContentHost" Padding="{TemplateBinding Padding}" BorderThickness="0" IsTabStop="False"/>
                  </Border>
                </Grid>
              </Border>
              <Border x:Name="DisabledVisualElement" Background="#A5F7F7F7" BorderBrush="#A5F7F7F7" BorderThickness="{TemplateBinding BorderThickness}" Opacity="0" IsHitTestVisible="False"/>
              <Border x:Name="FocusVisualElement" BorderBrush="#FF6DBDD1" BorderThickness="{TemplateBinding BorderThickness}" Margin="1" Opacity="0" IsHitTestVisible="False"/>

              <Border x:Name="ValidationErrorElement"
                   Margin="1"
                   BorderThickness="1"
                   CornerRadius="1"
                   BorderBrush="#FFDB000C"
                   Visibility="Collapsed"
                   ToolTipService.PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                <ToolTipService.ToolTip>
                  <ToolTip x:Name="validationTooltip"
                       Template="{StaticResource ValidationToolTipTemplate}"
                       DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                       Placement="Right"
                       PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                  </ToolTip>
                </ToolTipService.ToolTip>
                <Grid Width="10" Height="10" HorizontalAlignment="Right" Margin="0,-4,-4,0" VerticalAlignment="Top" Background="Transparent">
                  <Path Margin="0,3,0,0" Data="M 1,0 L5,0 A 2,2 90 0 1 7,2 L7,6 z" Fill="#FFDC000C"/>
                  <Path Margin="0,3,0,0" Data="M 0,0 L2,0 L 7,5 L7,7" Fill="#ffffff"/>
                </Grid>
              </Border>
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <!-- Default style for System.Windows.Controls.PasswordBox -->
    <Style x:Key="PasswordBox" TargetType="{x:Type PasswordBox}">
      <Setter Property="BorderThickness" Value="1" />
      <Setter Property="Background" Value="#FFFFFFFF" />
      <Setter Property="Foreground" Value="#FF000000" />
      <Setter Property="Padding" Value="2" />
      <Setter Property="BorderBrush">
        <Setter.Value>
          <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#FFA3AEB9" Offset="0"/>
            <GradientStop Color="#FF8399A9" Offset="0.375"/>
            <GradientStop Color="#FF718597" Offset="0.375"/>
            <GradientStop Color="#FF617584" Offset="1"/>
          </LinearGradientBrush>
        </Setter.Value>
      </Setter>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type PasswordBox}">
            <Grid x:Name="RootElement">
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup Name="CommonStates">
                  <VisualState Name="Normal" />
                  <VisualState Name="MouseOver">
                    <Storyboard>
                      <ColorAnimation Storyboard.TargetName="MouseOverBorder" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="#FF99C1E2" Duration="0"/>
                    </Storyboard>
                  </VisualState>
                  <VisualState Name="Disabled">
                    <Storyboard>
                      <DoubleAnimation Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="Opacity" To="1" Duration="0"/>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
                <VisualStateGroup Name="FocusStates">
                  <VisualState Name="Focused">
                    <Storyboard>
                      <DoubleAnimation Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Opacity" To="1" Duration="0"/>
                    </Storyboard>
                  </VisualState>
                  <VisualState Name="Unfocused">
                    <Storyboard>
                      <DoubleAnimation Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Opacity" To="0" Duration="0"/>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>

              <Border x:Name="Border" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="1" Opacity="1" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}">
                <Grid>
                  <Border x:Name="MouseOverBorder" BorderThickness="1" BorderBrush="Transparent">
                    <ScrollViewer x:Name="PART_ContentHost" Padding="{TemplateBinding Padding}" BorderThickness="0" IsTabStop="False"/>
                  </Border>
                </Grid>
              </Border>
              <Border x:Name="DisabledVisualElement" Background="#A5F7F7F7" BorderBrush="#A5F7F7F7" BorderThickness="{TemplateBinding BorderThickness}" Opacity="0" IsHitTestVisible="False"/>
              <Border x:Name="FocusVisualElement" BorderBrush="#FF6DBDD1" BorderThickness="{TemplateBinding BorderThickness}" Margin="1" Opacity="0" IsHitTestVisible="False"/>
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <!--TabItem-->
    <Style x:Key="TabItem" TargetType="TabItem">
      <Setter Property="Background" Value="#FF1F3B53"/>
      <Setter Property="BorderBrush" Value="#FFA3AEB9"/>
      <Setter Property="BorderThickness" Value="1"/>
      <Setter Property="Padding" Value="6,2,6,2"/>
      <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
      <Setter Property="VerticalContentAlignment" Value="Stretch"/>
      <Setter Property="MinWidth" Value="5"/>
      <Setter Property="MinHeight" Value="5"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="TabItem">
            <Grid x:Name="Root">
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup Name="CommonStates">
                  <VisualStateGroup.Transitions>
                    <VisualTransition GeneratedDuration="0" />
                    <VisualTransition To="MouseOver" GeneratedDuration="0:0:0.1" />
                  </VisualStateGroup.Transitions>
                  <VisualState Name="Normal" />
                  <VisualState Name="MouseOver">
                  </VisualState>
                  <VisualState Name="Disabled">
                    <Storyboard>
                      <DoubleAnimation Storyboard.TargetName="DisabledVisual" Storyboard.TargetProperty="Opacity" To="1" Duration="0" />
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
                <VisualStateGroup Name="SelectionStates">
                  <VisualState Name="Unselected"/>
                  <VisualState Name="Selected" />
                </VisualStateGroup>
                <VisualStateGroup Name="FocusStates">
                  <VisualState Name="Focused">

                  </VisualState>
                  <VisualState Name="Unfocused">
                  </VisualState>
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>

              <Border BorderThickness="1,1,1,0"
                      Padding="{TemplateBinding Control.Padding}"
                      BorderBrush="{TemplateBinding Border.BorderBrush}"
                      Background="{TemplateBinding Panel.Background}"
                      Name="Bd">
                <ContentPresenter RecognizesAccessKey="True"
                                  Content="{TemplateBinding HeaderedContentControl.Header}"
                                  ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}"
                                  ContentStringFormat="{TemplateBinding HeaderedContentControl.HeaderStringFormat}"
                                  ContentSource="Header" Name="Content"
                                  HorizontalAlignment="Stretch"
                                  VerticalAlignment="Stretch"
                                  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
              </Border>

              <Border x:Name="FocusVisualElement" CornerRadius="3,3,0,0" BorderBrush="#FF45D6FA" BorderThickness="1" Margin="-1" Visibility="Collapsed" IsHitTestVisible="false" />

              <Border x:Name="DisabledVisual" CornerRadius="3" Background="#A5FFFFFF" Opacity="0" IsHitTestVisible="false" />
            </Grid>
            <ControlTemplate.Triggers>
              <Trigger Property="UIElement.IsMouseOver">
                <Setter Property="Panel.Background" TargetName="Bd">
                  <Setter.Value>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                      <LinearGradientBrush.GradientStops>
                        <GradientStop Color="#FFEAF6FD" Offset="0.15" />
                        <GradientStop Color="#FFD9F0FC" Offset="0.5" />
                        <GradientStop Color="#FFBEE6FD" Offset="0.5" />
                        <GradientStop Color="#FFA7D9F5" Offset="1" />
                      </LinearGradientBrush.GradientStops>
                    </LinearGradientBrush>
                  </Setter.Value>
                </Setter>
                <Trigger.Value>
                  <sys:Boolean>True</sys:Boolean>
                </Trigger.Value>
              </Trigger>
              <Trigger Property="Selector.IsSelected">
                <Setter Property="Panel.ZIndex">
                  <Setter.Value>
                    <sys:Int32>1</sys:Int32>
                  </Setter.Value>
                </Setter>
                <Setter Property="Panel.Background" TargetName="Bd">
                  <Setter.Value>
                    <SolidColorBrush>#FFF9F9F9</SolidColorBrush>
                  </Setter.Value>
                </Setter>
                <Trigger.Value>
                  <sys:Boolean>True</sys:Boolean>
                </Trigger.Value>
              </Trigger>
              <MultiTrigger>
                <MultiTrigger.Conditions>
                  <Condition Property="Selector.IsSelected">
                    <Condition.Value>
                      <sys:Boolean>False</sys:Boolean>
                    </Condition.Value>
                  </Condition>
                  <Condition Property="UIElement.IsMouseOver">
                    <Condition.Value>
                      <sys:Boolean>True</sys:Boolean>
                    </Condition.Value>
                  </Condition>
                </MultiTrigger.Conditions>
                <Setter Property="Border.BorderBrush" TargetName="Bd">
                  <Setter.Value>
                    <SolidColorBrush>#FF3C7FB1</SolidColorBrush>
                  </Setter.Value>
                </Setter>
              </MultiTrigger>
              <Trigger Property="TabItem.TabStripPlacement">
                <Setter Property="Border.BorderThickness" TargetName="Bd">
                  <Setter.Value>
                    <Thickness>1,0,1,1</Thickness>
                  </Setter.Value>
                </Setter>
                <Trigger.Value>
                  <x:Static Member="Dock.Bottom" />
                </Trigger.Value>
              </Trigger>
              <Trigger Property="TabItem.TabStripPlacement">
                <Setter Property="Border.BorderThickness" TargetName="Bd">
                  <Setter.Value>
                    <Thickness>1,1,0,1</Thickness>
                  </Setter.Value>
                </Setter>
                <Trigger.Value>
                  <x:Static Member="Dock.Left" />
                </Trigger.Value>
              </Trigger>
              <Trigger Property="TabItem.TabStripPlacement">
                <Setter Property="Border.BorderThickness" TargetName="Bd">
                  <Setter.Value>
                    <Thickness>0,1,1,1</Thickness>
                  </Setter.Value>
                </Setter>
                <Trigger.Value>
                  <x:Static Member="Dock.Right" />
                </Trigger.Value>
              </Trigger>
              <MultiTrigger>
                <MultiTrigger.Conditions>
                  <Condition Property="Selector.IsSelected">
                    <Condition.Value>
                      <sys:Boolean>True</sys:Boolean>
                    </Condition.Value>
                  </Condition>
                  <Condition Property="TabItem.TabStripPlacement" Value="{x:Static Dock.Top}" />
                </MultiTrigger.Conditions>
                <Setter Property="FrameworkElement.Margin">
                  <Setter.Value>
                    <Thickness>-2,-2,-2,-1</Thickness>
                  </Setter.Value>
                </Setter>
                <Setter Property="FrameworkElement.Margin" TargetName="Content">
                  <Setter.Value>
                    <Thickness>0,0,0,1</Thickness>
                  </Setter.Value>
                </Setter>
              </MultiTrigger>
              <MultiTrigger>
                <MultiTrigger.Conditions>
                  <Condition Property="Selector.IsSelected">
                    <Condition.Value>
                      <sys:Boolean>True</sys:Boolean>
                    </Condition.Value>
                  </Condition>
                  <Condition Property="TabItem.TabStripPlacement" Value="{x:Static Dock.Bottom}" />
                </MultiTrigger.Conditions>
                <Setter Property="FrameworkElement.Margin">
                  <Setter.Value>
                    <Thickness>-2,-1,-2,-2</Thickness>
                  </Setter.Value>
                </Setter>
                <Setter Property="FrameworkElement.Margin" TargetName="Content">
                  <Setter.Value>
                    <Thickness>0,1,0,0</Thickness>
                  </Setter.Value>
                </Setter>
              </MultiTrigger>
              <MultiTrigger>
                <MultiTrigger.Conditions>
                  <Condition Property="Selector.IsSelected">
                    <Condition.Value>
                      <sys:Boolean>True</sys:Boolean>
                    </Condition.Value>
                  </Condition>
                  <Condition Property="TabItem.TabStripPlacement" Value="{x:Static Dock.Left}" />
                </MultiTrigger.Conditions>
                <Setter Property="FrameworkElement.Margin">
                  <Setter.Value>
                    <Thickness>-2,-2,-1,-2</Thickness>
                  </Setter.Value>
                </Setter>
                <Setter Property="FrameworkElement.Margin" TargetName="Content">
                  <Setter.Value>
                    <Thickness>0,0,1,0</Thickness>
                  </Setter.Value>
                </Setter>
              </MultiTrigger>
              <MultiTrigger>
                <MultiTrigger.Conditions>
                  <Condition Property="Selector.IsSelected">
                    <Condition.Value>
                      <sys:Boolean>True</sys:Boolean>
                    </Condition.Value>
                  </Condition>
                  <Condition Property="TabItem.TabStripPlacement" Value="{x:Static Dock.Right}" />
                </MultiTrigger.Conditions>
                <Setter Property="FrameworkElement.Margin">
                  <Setter.Value>
                    <Thickness>-1,-2,-2,-2</Thickness>
                  </Setter.Value>
                </Setter>
                <Setter Property="FrameworkElement.Margin" TargetName="Content">
                  <Setter.Value>
                    <Thickness>1,0,0,0</Thickness>
                  </Setter.Value>
                </Setter>
              </MultiTrigger>
              <Trigger Property="UIElement.IsEnabled">
                <Setter Property="Panel.Background" TargetName="Bd">
                  <Setter.Value>
                    <SolidColorBrush>#FFF4F4F4</SolidColorBrush>
                  </Setter.Value>
                </Setter>
                <Setter Property="Border.BorderBrush" TargetName="Bd">
                  <Setter.Value>
                    <SolidColorBrush>#FFC9C7BA</SolidColorBrush>
                  </Setter.Value>
                </Setter>
                <Setter Property="TextElement.Foreground">
                  <Setter.Value>
                    <DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
                  </Setter.Value>
                </Setter>
                <Trigger.Value>
                  <sys:Boolean>False</sys:Boolean>
                </Trigger.Value>
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <!--TabControl-->
    <Style x:Key="TabControl" TargetType="TabControl">
      <Setter Property="IsTabStop" Value="False" />
      <Setter Property="Background">
        <Setter.Value>
          <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#FFFFFFFF" Offset="0"/>
            <GradientStop Color="#FFFEFEFE" Offset="1"/>
          </LinearGradientBrush>
        </Setter.Value>
      </Setter>
      <Setter Property="BorderBrush">
        <Setter.Value>
          <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#FFA3AEB9" Offset="0" />
            <GradientStop Color="#FF8399A9" Offset="0.375" />
            <GradientStop Color="#FF718597" Offset="0.375" />
            <GradientStop Color="#FF617584" Offset="1" />
          </LinearGradientBrush>
        </Setter.Value>
      </Setter>
      <Setter Property="BorderThickness" Value="1"/>
      <Setter Property="Padding" Value="5"/>
      <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
      <Setter Property="VerticalContentAlignment" Value="Stretch"/>

      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="TabControl">
            <Grid ClipToBounds="True" SnapsToDevicePixels="True" KeyboardNavigation.TabNavigation="Local">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Name="ColumnDefinition0" />
                <ColumnDefinition Width="0" Name="ColumnDefinition1" />
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto" Name="RowDefinition0" />
                <RowDefinition Height="*" Name="RowDefinition1" />
              </Grid.RowDefinitions>

              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup Name="CommonStates">
                  <VisualStateGroup.Transitions>
                    <VisualTransition GeneratedDuration="0" />
                  </VisualStateGroup.Transitions>
                  <VisualState Name="Normal" />
                  <VisualState Name="Disabled">
                    <Storyboard>
                      <DoubleAnimation Storyboard.TargetName="DisabledVisual" Storyboard.TargetProperty="Opacity" To="1" Duration="0" />
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>

              <TabPanel IsItemsHost="True" Name="HeaderPanel" Margin="2,2,2,0" Panel.ZIndex="1" KeyboardNavigation.TabIndex="1" Grid.Column="0" Grid.Row="0" />

              <Border BorderThickness="{TemplateBinding Border.BorderThickness}"
                      BorderBrush="{TemplateBinding Border.BorderBrush}"
                      Background="{TemplateBinding Panel.Background}"
                      Name="ContentPanel"
                      KeyboardNavigation.TabIndex="2"
                      KeyboardNavigation.TabNavigation="Local"
                      KeyboardNavigation.DirectionalNavigation="Contained"
                      Grid.Column="0"
                      Grid.Row="1">
                <ContentPresenter Content="{TemplateBinding TabControl.SelectedContent}"
                                  ContentTemplate="{TemplateBinding TabControl.SelectedContentTemplate}"
                                  ContentStringFormat="{TemplateBinding TabControl.SelectedContentStringFormat}"
                                  ContentSource="SelectedContent"
                                  Name="PART_SelectedContentHost"
                                  Margin="{TemplateBinding Control.Padding}"
                                  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
              </Border>

              <!-- Disabled Visual -->
              <Rectangle x:Name="DisabledVisual" Canvas.ZIndex="1" IsHitTestVisible="False" Fill="#A5FFFFFF" Opacity="0" />

            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <!-- Default style for GridSplitter -->
    <Style x:Key="GridSplitter" TargetType="GridSplitter">
      <Setter Property="Background" Value="#FFFFFFFF"/>
      <Setter Property="IsTabStop" Value="true"/>
      <Setter Property="HorizontalAlignment" Value="Right"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="GridSplitter">
            <Grid x:Name="Root" IsHitTestVisible="{TemplateBinding IsEnabled}">
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup Name="CommonStates">
                  <VisualState Name="Normal" />
                  <VisualState Name="MouseOver" />
                  <VisualState Name="Disabled">
                    <Storyboard>
                      <DoubleAnimation Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="0.5" Duration="0" />
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
                <VisualStateGroup Name="FocusStates">
                  <VisualStateGroup.Transitions>
                    <VisualTransition GeneratedDuration="0" />
                  </VisualStateGroup.Transitions>
                  <VisualState Name="Unfocused" />
                  <VisualState Name="Focused">
                    <Storyboard>
                      <DoubleAnimation Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="Opacity" To="1" Duration="0" />
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>

              <Rectangle Fill="{TemplateBinding Background}" StrokeThickness="0" />

              <Grid x:Name="HorizontalTemplate" Height="10">
                <StackPanel Height="6" VerticalAlignment="Center">
                  <Rectangle Height="1" Margin="1" Width="10" StrokeThickness="0" Fill="#FF868686" />
                  <Rectangle Height="1" Margin="1" Width="10" StrokeThickness="0" Fill="#FF868686" />
                </StackPanel>
              </Grid>

              <Grid x:Name="VerticalTemplate" Visibility="Collapsed" Width="10">
                <StackPanel Width="6" VerticalAlignment="Center" Orientation="Horizontal">
                  <Rectangle Width="1" Margin="1" Height="10" StrokeThickness="0" Fill="#FF868686" />
                  <Rectangle Width="1" Margin="1" Height="10" StrokeThickness="0" Fill="#FF868686" />
                </StackPanel>
              </Grid>

              <Rectangle x:Name="FocusVisual" Stroke="#FF45D6FA" StrokeThickness="1" Opacity="0" IsHitTestVisible="false" />
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <!-- Default style for Expander -->
    <Style x:Key="Expander" TargetType="Expander">
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type Expander}">
            <ControlTemplate.Resources>
              <Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
                <Setter Property="Template">
                  <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                      <Border Padding="{TemplateBinding Padding}">
                        <Grid Background="Transparent" SnapsToDevicePixels="False">
                          <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="19"/>
                            <ColumnDefinition Width="*"/>
                          </Grid.ColumnDefinitions>
                          <Ellipse x:Name="circle" Width="19" Height="19" Stroke="DarkGray" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                          <Path x:Name="arrow" HorizontalAlignment="Center" VerticalAlignment="Center" Stroke="#666" StrokeThickness="2" SnapsToDevicePixels="false" Data="M 1,1.5 L 4.5,5 L 8,1.5"/>
                          <ContentPresenter Grid.Column="1" Margin="4,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" SnapsToDevicePixels="True" RecognizesAccessKey="True"/>
                        </Grid>
                      </Border>
                      <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                          <Setter Property="Data" Value="M 1,4.5  L 4.5,1  L 8,4.5" TargetName="arrow"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                          <Setter Property="Stroke" Value="#FF3C7FB1" TargetName="circle"/>
                          <Setter Property="Stroke" Value="#222" TargetName="arrow"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                          <Setter Property="Stroke" Value="#FF526C7B" TargetName="circle"/>
                          <Setter Property="StrokeThickness" Value="1.5" TargetName="circle"/>
                          <Setter Property="Stroke" Value="#FF003366" TargetName="arrow"/>
                        </Trigger>
                      </ControlTemplate.Triggers>
                    </ControlTemplate>
                  </Setter.Value>
                </Setter>
              </Style>
            </ControlTemplate.Resources>
            <Border BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Background="{TemplateBinding Background}"
                    CornerRadius="3"
                    SnapsToDevicePixels="true">
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup Name="CommonStates">
                  <VisualStateGroup.Transitions>
                    <VisualTransition GeneratedDuration="0"/>
                  </VisualStateGroup.Transitions>
                  <VisualState Name="Normal"/>
                  <VisualState Name="Disabled" />
                  <VisualState Name="MouseOver" />
                </VisualStateGroup>
                <VisualStateGroup Name="FocusStates">
                  <VisualState Name="Focused" />
                  <VisualState Name="Unfocused"/>
                </VisualStateGroup>
                <VisualStateGroup Name="ExpansionStates">
                  <VisualStateGroup.Transitions>
                    <VisualTransition GeneratedDuration="0"/>
                  </VisualStateGroup.Transitions>
                  <VisualState Name="Collapsed"/>
                  <VisualState Name="Expanded" />
                </VisualStateGroup>
                <VisualStateGroup Name="ExpandDirectionStates">
                  <VisualStateGroup.Transitions>
                    <VisualTransition GeneratedDuration="0"/>
                  </VisualStateGroup.Transitions>
                  <VisualState Name="ExpandDown" />
                  <VisualState Name="ExpandUp" />
                  <VisualState Name="ExpandLeft" />
                  <VisualState Name="ExpandRight" />
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>
              <DockPanel>
                <ToggleButton x:Name="HeaderSite"
                              DockPanel.Dock="Top"
                              Margin="1"
                              MinWidth="0"
                              MinHeight="0"
                              Style="{StaticResource ExpanderDownHeaderStyle}"
                              IsChecked="{Binding Path=IsExpanded,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                              Content="{TemplateBinding Header}"
                              ContentTemplate="{TemplateBinding HeaderTemplate}"
                              ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                              Foreground="{TemplateBinding Foreground}"
                              Padding="{TemplateBinding Padding}"
                              HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                <ContentPresenter x:Name="ExpandSite"
                                  DockPanel.Dock="Bottom"
                                  Visibility="Collapsed"
                                  Focusable="false"
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                  Margin="{TemplateBinding Padding}"/>
              </DockPanel>
            </Border>
            <ControlTemplate.Triggers>
              <Trigger Property="IsExpanded" Value="true">
                <Setter Property="Visibility" Value="Visible" TargetName="ExpandSite"/>
              </Trigger>
              <Trigger Property="ExpandDirection" Value="Right">
                <Setter Property="DockPanel.Dock" Value="Right" TargetName="ExpandSite"/>
                <Setter Property="DockPanel.Dock" Value="Left" TargetName="HeaderSite"/>
                <!--<Setter Property="Style" Value="{StaticResource ExpanderRightHeaderStyle}" TargetName="HeaderSite"/>-->
              </Trigger>
              <Trigger Property="ExpandDirection" Value="Up">
                <Setter Property="DockPanel.Dock" Value="Top" TargetName="ExpandSite"/>
                <Setter Property="DockPanel.Dock" Value="Bottom" TargetName="HeaderSite"/>
                <!--<Setter Property="Style" Value="{StaticResource ExpanderUpHeaderStyle}" TargetName="HeaderSite"/>-->
              </Trigger>
              <Trigger Property="ExpandDirection" Value="Left">
                <Setter Property="DockPanel.Dock" Value="Left" TargetName="ExpandSite"/>
                <Setter Property="DockPanel.Dock" Value="Right" TargetName="HeaderSite"/>
                <!--<Setter Property="Style" Value="{StaticResource ExpanderLeftHeaderStyle}" TargetName="HeaderSite"/>-->
              </Trigger>
              <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <!-- Default style for DataGrid -->
    <Style x:Key="DataGrid" TargetType="DataGrid">
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type DataGrid}">
            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" Padding="{TemplateBinding Padding}">

              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup Name="CommonStates">
                  <VisualState Name="Normal" />
                  <VisualState Name="Disabled" />
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>

              <ScrollViewer Focusable="false" Name="DG_ScrollViewer">
                <ScrollViewer.Template>
                  <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid>
                      <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                      </Grid.RowDefinitions>

                      <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                      </Grid.ColumnDefinitions>

                      <!--Column Headers-->
                      <DataGridColumnHeadersPresenter Grid.Column="1"
                                         Name="PART_ColumnHeadersPresenter"
                                         Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=HeadersVisibility, Converter={x:Static DataGrid.HeadersVisibilityConverter}, ConverterParameter={x:Static DataGridHeadersVisibility.Column}}"/>

                      <!--DataGrid content-->
                      <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" Grid.Row="1" Grid.ColumnSpan="2" CanContentScroll="{TemplateBinding CanContentScroll}" />

                      <ScrollBar Grid.Row="1" Grid.Column="2" Name="PART_VerticalScrollBar"
                               Orientation="Vertical"
                               Maximum="{TemplateBinding ScrollableHeight}"
                               ViewportSize="{TemplateBinding ViewportHeight}"
                               Value="{Binding Path=VerticalOffset, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                               Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>

                      <Grid Grid.Row="2" Grid.Column="1">
                        <Grid.ColumnDefinitions>
                          <ColumnDefinition Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=NonFrozenColumnsViewportHorizontalOffset}"/>
                          <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <ScrollBar Grid.Column="1"
                                   Name="PART_HorizontalScrollBar"
                                   Orientation="Horizontal"
                                   Maximum="{TemplateBinding ScrollableWidth}"
                                   ViewportSize="{TemplateBinding ViewportWidth}"
                                   Value="{Binding Path=HorizontalOffset, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>

                      </Grid>
                    </Grid>
                  </ControlTemplate>
                </ScrollViewer.Template>
                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
              </ScrollViewer>
            </Border>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <!-- Default style for TreeView -->
    <Style x:Key="TreeView" TargetType="TreeView">
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type TreeView}">
            <Border Name="Bd"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    SnapsToDevicePixels="true">
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup Name="ValidationStates">
                  <VisualState Name="Valid" />
                  <VisualState Name="InvalidFocused" />
                  <VisualState Name="InvalidUnfocused">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
                        <DiscreteObjectKeyFrame KeyTime="0" >
                          <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>
              <Grid>
                <ScrollViewer Name="_tv_scrollviewer_"
                              Background="{TemplateBinding Background}"
                              Focusable="false"
                              CanContentScroll="false"
                              HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                              VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                              Padding="{TemplateBinding Padding}"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                  <ItemsPresenter/>
                </ScrollViewer>
                <Border x:Name="ValidationErrorElement"
                     Margin="1"
                     BorderThickness="1"
                     CornerRadius="1"
                     BorderBrush="#FFDB000C"
                     Visibility="Collapsed"
                     ToolTipService.PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                  <ToolTipService.ToolTip>
                    <ToolTip x:Name="validationTooltip"
                         Template="{StaticResource ValidationToolTipTemplate}"
                         DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                         Placement="Right"
                         PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                    </ToolTip>
                  </ToolTipService.ToolTip>
                  <Grid Width="10" Height="10" HorizontalAlignment="Right" Margin="0,-4,-4,0" VerticalAlignment="Top" Background="Transparent">
                    <Path Margin="0,3,0,0" Data="M 1,0 L5,0 A 2,2 90 0 1 7,2 L7,6 z" Fill="#FFDC000C"/>
                    <Path Margin="0,3,0,0" Data="M 0,0 L2,0 L 7,5 L7,7" Fill="#ffffff"/>
                  </Grid>
                </Border>
              </Grid>
            </Border>
            <ControlTemplate.Triggers>
              <Trigger Property="IsEnabled"
                       Value="false">
                <Setter TargetName="Bd"
                        Property="Background"
                        Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
              </Trigger>
              <Trigger Property="VirtualizingStackPanel.IsVirtualizing"
                       Value="true">
                <Setter TargetName="_tv_scrollviewer_"
                        Property="CanContentScroll"
                        Value="true"/>
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <!-- Default style for DatePicker -->
    <Style x:Key="DatePicker" TargetType="DatePicker">
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type DatePicker}">
            <Border BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Background="{TemplateBinding Background}"
                    Padding="{TemplateBinding Padding}">
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                  <VisualState x:Name="Normal" />
                  <VisualState x:Name="Disabled" />
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>
              <Border.Child>
                <Grid x:Name="PART_Root"
                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                  <Grid.Resources>
                    <!-- Main DatePicker Brushes -->
                    <SolidColorBrush x:Key="DisabledBrush" Color="#A5FFFFFF" />
                  </Grid.Resources>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                  </Grid.ColumnDefinitions>
                  <Button x:Name="PART_Button" Grid.Row="0" Grid.Column="1"
                          Foreground="{TemplateBinding Foreground}"
                          Width="20"
                          Margin="3,0,3,0"
                          Focusable="False"
                          VerticalAlignment="Top"
                          HorizontalAlignment="Left" />
                  <DatePickerTextBox x:Name="PART_TextBox"
                      Grid.Row="0" Grid.Column="0"
                      Foreground="{TemplateBinding Foreground}"
                      HorizontalContentAlignment="Stretch"
                      VerticalContentAlignment="Stretch" />
                  <Grid x:Name="PART_DisabledVisual"
                        Opacity="0"
                        IsHitTestVisible="False"
                        Grid.Row="0" Grid.Column="0"
                        Grid.ColumnSpan="2">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="*"/>
                      <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Rectangle Grid.Row="0" Grid.Column="0" RadiusX="1" RadiusY="1" Fill="#A5FFFFFF"/>
                    <Rectangle Grid.Row="0" Grid.Column="1" RadiusX="1" RadiusY="1" Fill="#A5FFFFFF" Height="18" Width="19" Margin="3,0,3,0" />
                    <Popup x:Name="PART_Popup"
                           PlacementTarget="{Binding ElementName=PART_Button}"
                           Placement="Bottom"
                           StaysOpen="False"
                           AllowsTransparency="True" />
                  </Grid>
                </Grid>
              </Border.Child>
            </Border>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <Style x:Key="ColumnHeaderGripperStyle" TargetType="{x:Type Thumb}">
      <Setter Property="Width" Value="8"/>
      <Setter Property="Background" Value="Transparent"/>
      <Setter Property="Cursor" Value="SizeWE"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type Thumb}">
            <Border Padding="{TemplateBinding Padding}"
                Background="{TemplateBinding Background}"/>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <!-- Default style for DataGridColumnHeader -->
    <Style x:Key="DataGridColumnHeader" TargetType="DataGridColumnHeader">
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
            <Grid>
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup Name="CommonStates">
                  <VisualState Name="Normal" />
                  <VisualState Name="MouseOver" />
                  <VisualState Name="Pressed" />
                </VisualStateGroup>
                <VisualStateGroup Name="SortStates">
                  <VisualState Name="Unsorted" />
                  <VisualState Name="SortAscending" />
                  <VisualState Name="SortDescending" />
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>
              <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
              <Thumb x:Name="PART_LeftHeaderGripper"
                     HorizontalAlignment="Left"
                     Style="{StaticResource ColumnHeaderGripperStyle}"/>
              <Thumb x:Name="PART_RightHeaderGripper"
                     HorizontalAlignment="Right"
                     Style="{StaticResource ColumnHeaderGripperStyle}"/>
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <!-- Default style for DataGridCell -->
    <Style x:Key="DataGridCell" TargetType="DataGridCell">
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type DataGridCell}">
            <Grid>
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup Name="CommonStates">
                  <VisualState Name="Normal" />
                  <VisualState Name="MouseOver" />
                </VisualStateGroup>
                <VisualStateGroup Name="SelectionStates">
                  <VisualState Name="Unselected" />
                  <VisualState Name="Selected" />
                </VisualStateGroup>
                <VisualStateGroup Name="FocusStates">
                  <VisualState Name="Focused" />
                  <VisualState Name="Unfocused" />
                </VisualStateGroup>
                <VisualStateGroup Name="CurrentStates">
                  <VisualState Name="Regular" />
                  <VisualState Name="Current" />
                </VisualStateGroup>
                <VisualStateGroup Name="InteractionStates">
                  <VisualState Name="Display" />
                  <VisualState Name="Editing" />
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>
              <Border Background="{TemplateBinding Background}"
                      BorderBrush="{TemplateBinding BorderBrush}"
                      BorderThickness="{TemplateBinding BorderThickness}"
                      SnapsToDevicePixels="True">
                <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
              </Border>
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <!-- Default style for DataGridRow -->
    <Style x:Key="DataGridRow" TargetType="DataGridRow">
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type DataGridRow}">
            <Border x:Name="DGR_Border"
                      Background="{TemplateBinding Background}"
                      BorderBrush="{TemplateBinding BorderBrush}"
                      BorderThickness="{TemplateBinding BorderThickness}"
                      SnapsToDevicePixels="True">
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup Name="CommonStates">
                  <VisualState Name="Normal_AlternatingRow" />
                  <VisualState Name="MouseOver" />
                  <VisualState Name="MouseOver_Unfocused_Editing" />
                  <VisualState Name="MouseOver_Editing" />
                  <VisualState Name="MouseOver_Unfocused_Selected" />
                  <VisualState Name="MouseOver_Selected" />
                  <VisualState Name="Normal" />
                  <VisualState Name="Unfocused_Editing" />
                  <VisualState Name="Normal_Editing" />
                  <VisualState Name="Unfocused_Selected" />
                  <VisualState Name="Normal_Selected" />
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>

              <SelectiveScrollingGrid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto"/>
                  <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <Grid.RowDefinitions>
                  <RowDefinition Height="*"/>
                  <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <DataGridCellsPresenter Grid.Column="1"
                                 ItemsPanel="{TemplateBinding ItemsPanel}"
                                 SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>

                <DataGridDetailsPresenter  SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=AreRowDetailsFrozen, Converter={x:Static DataGrid.RowDetailsScrollingConverter}, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}}"
                                    Grid.Column="1" Grid.Row="1"
                                    Visibility="{TemplateBinding DetailsVisibility}" />

                <DataGridRowHeader SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical"  Grid.RowSpan="2"
                            Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=HeadersVisibility, Converter={x:Static DataGrid.HeadersVisibilityConverter}, ConverterParameter={x:Static DataGridHeadersVisibility.Row}}"/>
              </SelectiveScrollingGrid>
            </Border>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <Style x:Key="RowHeaderGripperStyle" TargetType="{x:Type Thumb}">
      <Setter Property="Height" Value="8"/>
      <Setter Property="Background" Value="Transparent"/>
      <Setter Property="Cursor" Value="SizeNS"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type Thumb}">
            <Border Padding="{TemplateBinding Padding}"
              Background="{TemplateBinding Background}"/>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    
    <!-- Default style for DataGridRowHeader -->
    <Style x:Key="DataGridRowHeader" TargetType="DataGridRowHeader">
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type DataGridRowHeader}">
            <Grid>
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup Name="CommonStates">
                  <VisualState Name="MouseOver" />
                  <VisualState Name="MouseOver_CurrentRow" />
                  <VisualState Name="MouseOver_Unfocused_EditingRow" />
                  <VisualState Name="MouseOver_EditingRow" />
                  <VisualState Name="MouseOver_Unfocused_Selected" />
                  <VisualState Name="MouseOver_Unfocused_CurrentRow_Selected" />
                  <VisualState Name="MouseOver_CurrentRow_Selected" />
                  <VisualState Name="MouseOver_Selected" />

                  <VisualState Name="Normal" />
                  <VisualState Name="Normal_CurrentRow" />
                  <VisualState Name="Unfocused_EditingRow" />                  
                  <VisualState Name="Normal_EditingRow" />
                  
                  <VisualState Name="Unfocused_Selected" />
                  <VisualState Name="Unfocused_CurrentRow_Selected" />
                  <VisualState Name="Normal_CurrentRow_Selected" />
                  <VisualState Name="Normal_Selected" />
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>

              <StackPanel Orientation="Horizontal">
                <!--<ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>-->
                <Button Content="Header" />
              </StackPanel>
              <Thumb x:Name="PART_TopHeaderGripper"
                     VerticalAlignment="Top"
                     Style="{StaticResource RowHeaderGripperStyle}"/>
              <Thumb x:Name="PART_BottomHeaderGripper"
                     VerticalAlignment="Bottom"
                     Style="{StaticResource RowHeaderGripperStyle}"/>
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <!-- Default style for TreeViewItem -->
    <Style x:Key="TreeViewItem" TargetType="TreeViewItem">
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type TreeViewItem}">
            <Grid>
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup Name="CommonStates">
                  <VisualState Name="Normal" />
                  <VisualState Name="MouseOver" />
                  <VisualState Name="Disabled" />
                </VisualStateGroup>
                <VisualStateGroup Name="SelectionStates">
                  <VisualState Name="Unselected" />
                  <VisualState Name="Selected" />
                  <VisualState Name="SelectedInactive" />
                </VisualStateGroup>
                <VisualStateGroup Name="FocusStates">
                  <VisualState Name="Focused" />
                  <VisualState Name="Unfocused" />
                </VisualStateGroup>
                <VisualStateGroup Name="ExpansionStates">
                  <VisualState Name="Expanded" />
                  <VisualState Name="Collapsed" />
                </VisualStateGroup>
                <VisualStateGroup Name="HasItemsStates">
                  <VisualState Name="HasItems" />
                  <VisualState Name="NoItems" />
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>

              <Grid.ColumnDefinitions>
                <ColumnDefinition MinWidth="19" Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
              </Grid.RowDefinitions>
              <ToggleButton x:Name="Expander"
                            IsChecked="{Binding Path=IsExpanded,RelativeSource={RelativeSource TemplatedParent}}"
                            ClickMode="Press"/>
              <Border Name="Bd"
                      Grid.Column="1"
                      Background="{TemplateBinding Background}"
                      BorderBrush="{TemplateBinding BorderBrush}"
                      BorderThickness="{TemplateBinding BorderThickness}"
                      Padding="{TemplateBinding Padding}"
                      SnapsToDevicePixels="true">
                <ContentPresenter x:Name="PART_Header"
                                  ContentSource="Header"
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
              </Border>
              <ItemsPresenter x:Name="ItemsHost"
                              Grid.Row="1"
                              Grid.Column="1"
                              Grid.ColumnSpan="2"/>
            </Grid>
            <ControlTemplate.Triggers>
              <Trigger Property="IsExpanded" Value="false">
                <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
              </Trigger>
              <Trigger Property="HasItems" Value="false">
                <Setter TargetName="Expander" Property="Visibility" Value="Hidden"/>
              </Trigger>
              <Trigger Property="IsSelected" Value="true">
                <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
              </Trigger>
              <MultiTrigger>
                <MultiTrigger.Conditions>
                  <Condition Property="IsSelected" Value="true"/>
                  <Condition Property="IsSelectionActive" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
              </MultiTrigger>
              <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <!-- Default style for DatePickerTextBox -->
    <Style x:Key="DatePickerTextBox" TargetType="DatePickerTextBox">
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type DatePickerTextBox}">
            <Grid>
              <Grid.Resources>
                <SolidColorBrush x:Key="WatermarkBrush" Color="#FFAAAAAA"/>
              </Grid.Resources>
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup Name="CommonStates">
                  <VisualStateGroup.Transitions>
                    <VisualTransition GeneratedDuration="0" />
                    <VisualTransition To="MouseOver" GeneratedDuration="0:0:0.1" />
                  </VisualStateGroup.Transitions>
                  <VisualState Name="Normal" />
                  <VisualState Name="Disabled" />
                  <VisualState Name="ReadOnly" />
                  <VisualState Name="MouseOver">
                    <Storyboard>
                      <ColorAnimation Storyboard.TargetName="MouseOverColor" Storyboard.TargetProperty="Color" To="#FF99C1E2" Duration="0"/>
                      <ColorAnimation Storyboard.TargetName="MouseOverColor2" Storyboard.TargetProperty="Color" To="#FF99C1E2" Duration="0"/>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
                <VisualStateGroup Name="WatermarkStates">
                  <VisualStateGroup.Transitions>
                    <VisualTransition GeneratedDuration="0" />
                  </VisualStateGroup.Transitions>
                  <VisualState Name="Unwatermarked" />
                  <VisualState Name="Watermarked">
                    <Storyboard>
                      <DoubleAnimation Storyboard.TargetName="ContentElement" Storyboard.TargetProperty="Opacity" To="0" Duration="0" />
                      <DoubleAnimation Storyboard.TargetName="PART_Watermark" Storyboard.TargetProperty="Opacity" To="1" Duration="0" />
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
                <VisualStateGroup Name="FocusStates">
                  <VisualStateGroup.Transitions>
                    <VisualTransition GeneratedDuration="0" />
                  </VisualStateGroup.Transitions>
                  <VisualState Name="Unfocused" />
                  <VisualState Name="Focused">
                    <Storyboard>
                      <DoubleAnimation Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="Opacity" To="1" Duration="0" />
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>

              <Border x:Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}"
                                CornerRadius="1"
                                Opacity="1">
                <Grid x:Name="WatermarkContent"
                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                  <Border x:Name="ContentElement" BorderThickness="1">
                    <Border.BorderBrush>
                      <SolidColorBrush x:Name="MouseOverColor" Color="#FFFFFFFF"/>
                    </Border.BorderBrush>
                  </Border>
                  <Border BorderThickness="1">
                    <Border.BorderBrush>
                      <SolidColorBrush x:Name="MouseOverColor2" Color="#FFFFFFFF"/>
                    </Border.BorderBrush>
                    <ContentControl x:Name="PART_Watermark"
                                        Opacity="0"
                                        Focusable="False"
                                        IsHitTestVisible="False"
                                        Padding="2"/>
                  </Border>
                  <ScrollViewer x:Name="PART_ContentHost"
                                Margin="0"
                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
                  <Border x:Name="FocusVisual" BorderBrush="#FF45D6FA" CornerRadius="1" Opacity="0" IsHitTestVisible="False"/>
                </Grid>
              </Border>
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <!-- Default style for ToolTip -->
    <Style x:Key="ToolTip" TargetType="ToolTip">
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type ToolTip}">           
              <Border Background="{TemplateBinding Background}"
                      BorderThickness="{TemplateBinding BorderThickness}"
                      BorderBrush="{TemplateBinding BorderBrush}"
                      Padding="{TemplateBinding Padding}"
                      CornerRadius="2">
                <VisualStateManager.VisualStateGroups>
                  <VisualStateGroup Name="OpenStates">
                    <VisualState Name="Open" />
                    <VisualState Name="Closed" />
                  </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
              </Border>           
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
  </Grid.Resources>
  <Grid.ColumnDefinitions>
    <ColumnDefinition Width="Auto"/>
    <ColumnDefinition Width="Auto"/>
    <ColumnDefinition Width="Auto"/>
  </Grid.ColumnDefinitions>
  <Grid.RowDefinitions>
    <RowDefinition Height="Auto" />
    <RowDefinition Height="Auto" />
  </Grid.RowDefinitions>

  <!--test panel-->
  <Border Grid.Row="0" Grid.Column="0" BorderThickness="3" Margin="3" BorderBrush="Black" HorizontalAlignment="Stretch">
    <GroupBox Header="Control With VSM">
      <Grid Name="testPanel" />
    </GroupBox>
  </Border>
  <Border Grid.Row="1" Grid.Column="0" BorderThickness="3" Margin="3" BorderBrush="Black" HorizontalAlignment="Stretch">
    <GroupBox Header="Control Without VSM">
      <Grid Name="testPanel2" />
    </GroupBox>
  </Border>

  <!--adhoc debug mode-->
  <Border Grid.RowSpan="2" Grid.Column="1" BorderThickness="3" Margin="3" BorderBrush="Black">
    <Grid>
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>
      <GroupBox Header="ElementUnderTest" HorizontalAlignment="Left" VerticalAlignment="Top">
        <ComboBox Name="cb_ElementUnderTest" />
      </GroupBox>
      <GroupBox Grid.Row="1" Header="VisualStateGroups" HorizontalAlignment="Center" VerticalAlignment="Top">
        <ListBox x:Name="VisualStateGroupListBox" ItemsSource="{Binding VisualStateGroups}" MaxHeight="600">
          <ListBox.ItemTemplate>
            <DataTemplate>
              <GroupBox Header="{Binding GroupName}">
                <StackPanel>
                  <StackPanel Orientation="Horizontal">
                    <GroupBox Header="CurrentState">
                      <TextBlock Text="{Binding CurrentState.Name}"/>
                    </GroupBox>
                    <GroupBox Header="PreviousState">
                      <TextBlock Text="{Binding PreviousState.Name}"/>
                    </GroupBox>
                  </StackPanel>
                  <GroupBox Header="All Possible States">
                    <ListBox ItemsSource="{Binding States}">
                      <ListBox.ItemTemplate>
                        <DataTemplate>
                          <TextBlock Text="{Binding Name}" />
                        </DataTemplate>
                      </ListBox.ItemTemplate>
                    </ListBox>
                  </GroupBox>
                </StackPanel>
              </GroupBox>
            </DataTemplate>
          </ListBox.ItemTemplate>
        </ListBox>
      </GroupBox>
    </Grid>
  </Border>

  <!--adhoc debug mode-->
  <Border Grid.RowSpan="2" Grid.Column="2" BorderThickness="3" Margin="3" BorderBrush="Black">
    <StackPanel>
      <Button x:Name="debugButton" Margin="5" HorizontalAlignment="Left" Content="Close DebugMode"/>
      <GroupBox Header="Custom Bindings" Margin="10">
        <StackPanel Name="stackPanel_CustomBindings" />
      </GroupBox>
    </StackPanel>
  </Border>
</Grid>
