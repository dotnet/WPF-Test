<Border xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Background="LightSteelBlue">
  <Grid Width="800">

    <Grid.Resources>
      <Style x:Key="{x:Type TextBlock}" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="./DrtFiles/Fonts/#Tahoma" />
        <Setter Property="FontSize" Value="11" />
      </Style>
    </Grid.Resources>

    <Grid.ColumnDefinitions>
      <ColumnDefinition Width="4" />
      <ColumnDefinition />
      <ColumnDefinition Width="4" />
      <ColumnDefinition />
      <ColumnDefinition Width="4" />
    </Grid.ColumnDefinitions>
    <Grid.RowDefinitions>
      <RowDefinition Height="4" />
      <RowDefinition Height="Auto" />
      <RowDefinition Height="4" />
      <RowDefinition Height="Auto" />
      <RowDefinition Height="4" />
      <RowDefinition Height="Auto" />
      <RowDefinition Height="4" />
      <RowDefinition Height="Auto" />
      <RowDefinition Height="4" />
      <RowDefinition Height="Auto" />
      <RowDefinition Height="4" />
      <RowDefinition Height="Auto" />
      <RowDefinition Height="4" />
      <RowDefinition Height="Auto" />
      <RowDefinition Height="4" />
      <RowDefinition Height="Auto" />
      <RowDefinition Height="4" />
      <RowDefinition Height="Auto" />
      <RowDefinition Height="4" />
      <RowDefinition Height="Auto" />
      <RowDefinition Height="4" />
      <RowDefinition Height="Auto" />
      <RowDefinition Height="4" />
      <RowDefinition Height="Auto" />
      <RowDefinition Height="4" />
    </Grid.RowDefinitions>


    <Border Background="White" Grid.Column="1" Grid.Row="1">
      <TextBlock />
    </Border>

    <Border Background="White" Grid.Column="3" Grid.Row="1">
      <TextBlock>
        <LineBreak />
      </TextBlock>
    </Border>

    <Border Background="White" Grid.Column="1" Grid.Row="3">
      <TextBlock TextWrapping="WrapWithOverflow">
        Label Element displays text. It is meant for UI Label scenarios. Most text scenarios should use the TextPanel. Label Element displays text. It is meant for UI Label scenarios. Most text scenarios should use the TextPanel.
      </TextBlock>
    </Border>

    <Border Background="White" Grid.Column="3" Grid.Row="3">
      <TextBlock TextWrapping="WrapWithOverflow">
        Label Element displays text. It is meant for UI Label scenarios.
        <Run Background="LightBlue" FontWeight="Bold">
          Most text scenarios should use the TextPanel.
        </Run>
        <Run Background="Beige" FontStyle="Italic" FontFamily="./DrtFiles/Fonts/#Times New Roman">Label Element displays text. </Run>
        <Run Background="LightGreen" FontStyle="Italic" Foreground="Navy" FontSize="12pt">It is meant for UI Label scenarios. </Run>
        Most text scenarios should use the TextPanel.
      </TextBlock>
    </Border>

    <Border Background="White" Grid.Column="1" Grid.Row="5">
      <TextBlock TextWrapping="WrapWithOverflow">
        <TextBlock>[ inline object ]</TextBlock>
      </TextBlock>
    </Border>

    <Border Background="White" Grid.Column="3" Grid.Row="5">
      <TextBlock TextWrapping="WrapWithOverflow">
        0-width [<TextBlock></TextBlock>] inline object
      </TextBlock>
    </Border>

    <Border Background="White" Grid.Column="1" Grid.Row="7">
      <TextBlock TextWrapping="WrapWithOverflow">
        <TextBlock TextWrapping="WrapWithOverflow" TextTrimming="None">
          [very_long_inlie_object_very_long_inlie_object_very_long_inlie_object_very_long_inlie_object]
        </TextBlock>
      </TextBlock>
    </Border>

    <Border Grid.Column="3" Grid.Row="7">
      <TextBlock>
        <Run />
      </TextBlock>
    </Border>

    <Border Background="White" Grid.Column="1" Grid.Row="9">
      <TextBlock TextWrapping="WrapWithOverflow">
        Wrapping of inline objects
        <TextBlock>[ 1st inline object 1st inline object ]</TextBlock>
        <TextBlock>[ 2nd inline object 2nd inline object ]</TextBlock>
      </TextBlock>
    </Border>

    <Border Grid.Column="3" Grid.Row="9" />

    <Border Background="White" Grid.Column="1" Grid.Row="11">
      <TextBlock TextWrapping="NoWrap" TextTrimming="None">
        Text with no text wrapping: TextWrap = [ NoWrap ].
        <TextBlock> + </TextBlock>
        Text with no text wrapping: TextWrap = [ NoWrap ].
      </TextBlock>
    </Border>

    <Border Grid.Column="3" Grid.Row="11" />

    <Border Background="White" Grid.Column="1" Grid.Row="13">
      <TextBlock TextWrapping="WrapWithOverflow" TextTrimming="None">
        Very_long_word_very_long_word_very_long_word_very_long_word_very_long_word
        Text with default text wrapping: TextWrap = [Wrap].
      </TextBlock>
    </Border>

    <Border Grid.Column="3" Grid.Row="13" />

    <Border Background="White" Grid.Column="1" Grid.Row="15">
      <TextBlock TextWrapping="Wrap" TextTrimming="None">
        Very_long_word_very_long_word_very_long_word_very_long_word_very_long_word
        Text with emergency text wrapping: TextWrap = [ Emergency ].
      </TextBlock>
    </Border>

    <Border Grid.Column="3" Grid.Row="15" />

    <Border Background="White" Grid.Column="1" Grid.Row="17">
      <TextBlock Width="394" TextWrapping="WrapWithOverflow" TextAlignment="Left">
        Text alignment test: Horizontal alignment =
        <TextBlock FontWeight="Bold" Foreground="Navy">[ Left ]</TextBlock>.
        Text_alignment test: Horizontal alignment =
        <TextBlock FontWeight="Bold" Foreground="Navy">[ Left ]</TextBlock>.
      </TextBlock>
    </Border>

    <Border Background="White" Grid.Column="3" Grid.Row="17">
      <TextBlock Width="394" TextWrapping="WrapWithOverflow" TextAlignment="Right">
        Text alignment test: Horizontal alignment =
        <TextBlock FontWeight="Bold" Foreground="Navy">[ Right ]</TextBlock>.
        Text_alignment test: Horizontal alignment =
        <TextBlock FontWeight="Bold" Foreground="Navy">[ Right ]</TextBlock>.
      </TextBlock>
    </Border>

    <Border Background="White" Grid.Column="1" Grid.Row="19">
      <TextBlock Width="394" TextWrapping="WrapWithOverflow" TextAlignment="Center">
        Text alignment test: Horizontal alignment =
        <TextBlock FontWeight="Bold" Foreground="Navy">[ Center ]</TextBlock>.
        Text_alignment test: Horizontal alignment =
        <TextBlock FontWeight="Bold" Foreground="Navy">[ Center ]</TextBlock>.
      </TextBlock>
    </Border>

    <Border Background="White" Grid.Column="3" Grid.Row="19">
      <TextBlock Width="394" TextWrapping="NoWrap" TextTrimming="None">
        Text trimming test with no text wrapping. Text Trimming = None None None
      </TextBlock>
    </Border>

    <Border Background="White" Grid.Column="1" Grid.Row="21">
      <TextBlock Width="394" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis">
        Text trimming test with no text wrapping. Text Trimming = CharacterEllipsis
      </TextBlock>
    </Border>

    <Border Background="White" Grid.Column="3" Grid.Row="21">
      <TextBlock Width="394" TextWrapping="NoWrap" TextTrimming="WordEllipsis">
        Text trimming test with no text wrapping. Text Trimming = WordEllipsis
      </TextBlock>
    </Border>

    <Border Background="White" Grid.Column="1" Grid.Row="23">
      <TextBlock >
        <TextBlock FontSize="18pt" FontFamily="./DrtFiles/Fonts/#Arial" TextWrapping="WrapWithOverflow" TextAlignment="Justify">This is test for justify. This is test for justify. Here is thelonglonglonglonglonglognlonglongword. This is test for justify. This is test for justify. This is test for justify. This is test for justify.</TextBlock>
      </TextBlock>
    </Border>

  </Grid>
</Border>
