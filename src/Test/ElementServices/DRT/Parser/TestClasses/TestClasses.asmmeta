#include "versions.h"
#include "ndp20.versions.h"

.assembly extern PresentationCore
{
	.publickeytoken = PRESENTATIONCORE_ASSEMBLY_PUBLIC_KEY_TOKEN_IL
	.ver PRESENTATIONCORE_ASSEMBLY_VERSION_IL
}
.assembly extern PresentationFramework
{
	.publickeytoken = PRESENTATIONFRAMEWORK_ASSEMBLY_PUBLIC_KEY_TOKEN_IL
	.ver PRESENTATIONFRAMEWORK_ASSEMBLY_VERSION_IL
}
.assembly extern System
{
	.publickeytoken = SYSTEM_ASSEMBLY_PUBLIC_KEY_TOKEN_IL
	.ver SYSTEM_ASSEMBLY_VERSION_IL
}
.assembly extern System.Xml
{
	.publickeytoken = SYSTEM_XML_ASSEMBLY_PUBLIC_KEY_TOKEN_IL
	.ver SYSTEM_XML_ASSEMBLY_VERSION_IL
}
.assembly extern WindowsBase
{
	.publickeytoken = WINDOWSBASE_ASSEMBLY_PUBLIC_KEY_TOKEN_IL
	.ver WINDOWSBASE_ASSEMBLY_VERSION_IL
}
.assembly extern mscorlib
{
	.publickeytoken = MSCORLIB_20_ASSEMBLY_PUBLIC_KEY_TOKEN_IL
	.ver MSCORLIB_20_ASSEMBLY_VERSION_IL
}
.assembly TestClasses
{
	.custom instance void [mscorlib]System.CLSCompliantAttribute::.ctor(bool) = { bool(true) }
	.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = { bool(false) }
	.publickey = TESTCLASSES_ASSEMBLY_PUBLIC_KEY_IL
	.hash algorithm 0x00008004
	.ver TESTCLASSES_ASSEMBLY_VERSION_IL
}
.namespace DRTText
{
	.class public FCETest
		extends [PresentationFramework]System.Windows.FrameworkContentElement
		implements [PresentationCore]System.Windows.Markup.IAddChild
	{
		.method public hidebysig specialname 
			instance int32 get_AlphaFCE()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_AlphaFCE(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]System.Collections.ArrayList get_Kids()
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Windows.Markup.IAddChild.AddChild(object o)
		{
			.override [PresentationCore]System.Windows.Markup.IAddChild::AddChild
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Windows.Markup.IAddChild.AddText(string s)
		{
			.override [PresentationCore]System.Windows.Markup.IAddChild::AddText
			ret
		}
		.method family virtual hidebysig specialname 
			instance class [mscorlib]System.Collections.IEnumerator get_LogicalChildren()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty AlphaFCEProperty
		.property instance int32 AlphaFCE()
		{
			.get instance int32 DRTText.FCETest::get_AlphaFCE()
			.set instance void DRTText.FCETest::set_AlphaFCE(int32)
		}
		.property instance class [mscorlib]System.Collections.ArrayList Kids()
		{
			.custom instance void [System]System.ComponentModel.DesignerSerializationVisibilityAttribute::.ctor(valuetype [System]System.ComponentModel.DesignerSerializationVisibility) = { int32(2) }
			.get instance class [mscorlib]System.Collections.ArrayList DRTText.FCETest::get_Kids()
		}
		.property instance class [mscorlib]System.Collections.IEnumerator LogicalChildren()
		{
			.get instance class [mscorlib]System.Collections.IEnumerator DRTText.FCETest::get_LogicalChildren()
		}
	}
	.class public FCETestTwo
		extends [PresentationFramework]System.Windows.FrameworkContentElement
		implements [PresentationCore]System.Windows.Markup.IAddChild
	{
		.method public hidebysig specialname 
			instance int32 get_AlphaFCE2()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_AlphaFCE2(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]System.Collections.ArrayList get_Kids()
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Windows.Markup.IAddChild.AddChild(object o)
		{
			.override [PresentationCore]System.Windows.Markup.IAddChild::AddChild
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Windows.Markup.IAddChild.AddText(string s)
		{
			.override [PresentationCore]System.Windows.Markup.IAddChild::AddText
			ret
		}
		.method family virtual hidebysig specialname 
			instance class [mscorlib]System.Collections.IEnumerator get_LogicalChildren()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty AlphaFCE2Property
		.property instance int32 AlphaFCE2()
		{
			.get instance int32 DRTText.FCETestTwo::get_AlphaFCE2()
			.set instance void DRTText.FCETestTwo::set_AlphaFCE2(int32)
		}
		.property instance class [mscorlib]System.Collections.ArrayList Kids()
		{
			.custom instance void [System]System.ComponentModel.DesignerSerializationVisibilityAttribute::.ctor(valuetype [System]System.ComponentModel.DesignerSerializationVisibility) = { int32(2) }
			.get instance class [mscorlib]System.Collections.ArrayList DRTText.FCETestTwo::get_Kids()
		}
		.property instance class [mscorlib]System.Collections.IEnumerator LogicalChildren()
		{
			.get instance class [mscorlib]System.Collections.IEnumerator DRTText.FCETestTwo::get_LogicalChildren()
		}
	}
	.class public FETest
		extends [PresentationFramework]System.Windows.FrameworkElement
		implements [PresentationCore]System.Windows.Markup.IAddChild
	{
		.method family virtual hidebysig 
			instance valuetype [WindowsBase]System.Windows.Size MeasureOverride(valuetype [WindowsBase]System.Windows.Size constraint)
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Windows.Markup.IAddChild.AddChild(object o)
		{
			.override [PresentationCore]System.Windows.Markup.IAddChild::AddChild
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Windows.Markup.IAddChild.AddText(string s)
		{
			.override [PresentationCore]System.Windows.Markup.IAddChild::AddText
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]System.Collections.ArrayList get_Kids()
		{
			ret
		}
		.method family virtual hidebysig specialname 
			instance class [mscorlib]System.Collections.IEnumerator get_LogicalChildren()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance class [mscorlib]System.Collections.ArrayList Kids()
		{
			.custom instance void [System]System.ComponentModel.DesignerSerializationVisibilityAttribute::.ctor(valuetype [System]System.ComponentModel.DesignerSerializationVisibility) = { int32(2) }
			.get instance class [mscorlib]System.Collections.ArrayList DRTText.FETest::get_Kids()
		}
		.property instance class [mscorlib]System.Collections.IEnumerator LogicalChildren()
		{
			.get instance class [mscorlib]System.Collections.IEnumerator DRTText.FETest::get_LogicalChildren()
		}
	}
	.class public 'IACC'
		extends [mscorlib]System.Object
		implements [PresentationCore]System.Windows.Markup.IAddChild, [mscorlib]System.Collections.IEnumerable
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_SomeInt()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_SomeInt(int32 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void AddChild(object o)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void AddText(string s)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance class [mscorlib]System.Collections.IEnumerator GetEnumerator()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]'System.Collections.Generic.List`1'<object> get_Children()
		{
			ret
		}
		.property instance class [mscorlib]'System.Collections.Generic.List`1'<object> Children()
		{
			.get instance class [mscorlib]'System.Collections.Generic.List`1'<object> 'DRTText.IACC'::get_Children()
		}
		.property instance int32 SomeInt()
		{
			.get instance int32 'DRTText.IACC'::get_SomeInt()
			.set instance void 'DRTText.IACC'::set_SomeInt(int32)
		}
	}
	.class public 'IENUM'
		extends [mscorlib]System.Object
		implements [mscorlib]System.Collections.IEnumerable
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_SomeInt()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_SomeInt(int32 'value')
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance class [mscorlib]System.Collections.IEnumerator GetEnumerator()
		{
			ret
		}
		.property instance int32 SomeInt()
		{
			.get instance int32 'DRTText.IENUM'::get_SomeInt()
			.set instance void 'DRTText.IENUM'::set_SomeInt(int32)
		}
	}
	.class public LiteralRepeatExtension
		extends [WindowsBase]System.Windows.Markup.MarkupExtension
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string baseStr, int32 repeat)
		{
			ret
		}
		.method public virtual hidebysig 
			instance object ProvideValue(class [mscorlib]System.IServiceProvider serviceProvider)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_RepeatCount()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_RepeatCount(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_BaseStr()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BaseStr(string 'value')
		{
			ret
		}
		.property instance string BaseStr()
		{
			.get instance string DRTText.LiteralRepeatExtension::get_BaseStr()
			.set instance void DRTText.LiteralRepeatExtension::set_BaseStr(string)
		}
		.property instance int32 RepeatCount()
		{
			.get instance int32 DRTText.LiteralRepeatExtension::get_RepeatCount()
			.set instance void DRTText.LiteralRepeatExtension::set_RepeatCount(int32)
		}
	}
	.class public MyControl
		extends [PresentationFramework]System.Windows.FrameworkElement
		implements [PresentationCore]System.Windows.IContentHost
	{
		.method private final virtual hidebysig newslot 
			instance class [PresentationCore]System.Windows.IInputElement System.Windows.IContentHost.InputHitTest(valuetype [WindowsBase]System.Windows.Point point)
		{
			.override [PresentationCore]System.Windows.IContentHost::InputHitTest
			ret
		}
		.method private final virtual hidebysig newslot 
			instance class [mscorlib]'System.Collections.ObjectModel.ReadOnlyCollection`1'<valuetype [WindowsBase]System.Windows.Rect> System.Windows.IContentHost.GetRectangles(class [PresentationCore]System.Windows.ContentElement child)
		{
			.override [PresentationCore]System.Windows.IContentHost::GetRectangles
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance class [mscorlib]'System.Collections.Generic.IEnumerator`1'<class [PresentationCore]System.Windows.IInputElement> System.Windows.IContentHost.get_HostedElements()
		{
			.override [PresentationCore]System.Windows.IContentHost::get_HostedElements
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Windows.IContentHost.OnChildDesiredSizeChanged(class [PresentationCore]System.Windows.UIElement child)
		{
			.override [PresentationCore]System.Windows.IContentHost::OnChildDesiredSizeChanged
			ret
		}
		.method public static hidebysig 
			void Whatever()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property instance class [mscorlib]'System.Collections.Generic.IEnumerator`1'<class [PresentationCore]System.Windows.IInputElement> System.Windows.IContentHost.HostedElements()
		{
			.get instance class [mscorlib]'System.Collections.Generic.IEnumerator`1'<class [PresentationCore]System.Windows.IInputElement> DRTText.MyControl::System.Windows.IContentHost.get_HostedElements()
		}
	}
	.class public MyControlsSubclass
		extends DRTText.MyControl
	{
		.method public static hidebysig 
			void Whatever()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public MyHashtable
		extends [mscorlib]System.Collections.Hashtable
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_MYTP()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_MYTP(int32 'value')
		{
			ret
		}
		.property instance int32 'MYTP'()
		{
			.get instance int32 DRTText.MyHashtable::get_MYTP()
			.set instance void DRTText.MyHashtable::set_MYTP(int32)
		}
	}
	.class public MyIList
		extends [mscorlib]System.Collections.ArrayList
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(int32 i)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_MYITP()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_MYITP(int32 'value')
		{
			ret
		}
		.property instance int32 'MYITP'()
		{
			.get instance int32 DRTText.MyIList::get_MYITP()
			.set instance void DRTText.MyIList::set_MYITP(int32)
		}
	}
	.class public MyText
		extends [PresentationFramework]System.Windows.Controls.TextBlock
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class [WindowsBase]System.Windows.DependencyObject parent)
		{
			ret
		}
	}
	.class public MyXmlIsland
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [System.Xml]System.Xml.Serialization.IXmlSerializable get_XmlSerializer()
		{
			ret
		}
		.method public hidebysig 
			instance bool ShouldSerializeXmlSerializer()
		{
			.custom instance void [System]System.ComponentModel.EditorBrowsableAttribute::.ctor(valuetype [System]System.ComponentModel.EditorBrowsableState) = { int32(1) }
			ret
		}
		.method public hidebysig specialname 
			instance class [System.Xml]System.Xml.XmlDocument get_Document()
		{
			ret
		}
		.property instance class [System.Xml]System.Xml.XmlDocument Document()
		{
			.get instance class [System.Xml]System.Xml.XmlDocument DRTText.MyXmlIsland::get_Document()
		}
		.property instance class [System.Xml]System.Xml.Serialization.IXmlSerializable XmlSerializer()
		{
			.custom instance void [System]System.ComponentModel.DesignerSerializationVisibilityAttribute::.ctor(valuetype [System]System.ComponentModel.DesignerSerializationVisibility) = { int32(2) }
			.get instance class [System.Xml]System.Xml.Serialization.IXmlSerializable DRTText.MyXmlIsland::get_XmlSerializer()
		}
	}
	.class public TextTestControl
		extends [PresentationFramework]System.Windows.Controls.ListBox
	{
		.method public static hidebysig specialname 
			int32 get_PropertyThree()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]System.Type get_TestType()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_TestType(class [mscorlib]System.Type 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_Alpha()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Alpha(int32 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]System.Globalization.CultureInfo get_MyCulture()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_MyCulture(class [mscorlib]System.Globalization.CultureInfo 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class DRTText.MyText[] get_MyTextArrayProp()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_MyTextArrayProp(class DRTText.MyText[] 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [PresentationCore]System.Windows.Media.SolidColorBrush get_BackgroundDP()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_BackgroundDP(class [PresentationCore]System.Windows.Media.SolidColorBrush 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class 'DRTText.IACC' get_IAddChildCollection()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]System.Collections.IEnumerable get_IEnumerableChildren()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class DRTText.MyIList get_BetaIList()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]System.Collections.IDictionary get_IDict()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_IDict(class [mscorlib]System.Collections.IDictionary 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]System.Collections.IList get_RWList()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_RWList(class [mscorlib]System.Collections.IList 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [PresentationCore]System.Windows.Media.SolidColorBrush get_ForegroundDP()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_ForegroundDP(class [PresentationCore]System.Windows.Media.SolidColorBrush 'value')
		{
			ret
		}
		.method public static hidebysig 
			void SetAlpha(class [WindowsBase]System.Windows.DependencyObject target, int32 'value')
		{
			ret
		}
		.method public static hidebysig 
			void SetGreekAlpha(class [WindowsBase]System.Windows.DependencyObject target, int32 'value')
		{
			ret
		}
		.method public static hidebysig 
			void SetNumberEnum(class [WindowsBase]System.Windows.DependencyObject target, valuetype DRTText.TextTestFlags 'value')
		{
			ret
		}
		.method public static hidebysig 
			class DRTText.MyIList GetBetaIListDependency(object target)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class [WindowsBase]System.Windows.DependencyObject root)
		{
			ret
		}
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty AlphaProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty BackgroundDPProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty BetaIListProperty
		.field static public int32 FieldOne
		.field static public float64 FieldTwo
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty ForegroundDPProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty GreekAlphaProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty NumberEnumProperty
		.property instance int32 Alpha()
		{
			.get instance int32 DRTText.TextTestControl::get_Alpha()
			.set instance void DRTText.TextTestControl::set_Alpha(int32)
		}
		.property instance class [PresentationCore]System.Windows.Media.SolidColorBrush BackgroundDP()
		{
			.get instance class [PresentationCore]System.Windows.Media.SolidColorBrush DRTText.TextTestControl::get_BackgroundDP()
			.set instance void DRTText.TextTestControl::set_BackgroundDP(class [PresentationCore]System.Windows.Media.SolidColorBrush)
		}
		.property instance class DRTText.MyIList BetaIList()
		{
			.get instance class DRTText.MyIList DRTText.TextTestControl::get_BetaIList()
		}
		.property instance class [PresentationCore]System.Windows.Media.SolidColorBrush ForegroundDP()
		{
			.get instance class [PresentationCore]System.Windows.Media.SolidColorBrush DRTText.TextTestControl::get_ForegroundDP()
			.set instance void DRTText.TextTestControl::set_ForegroundDP(class [PresentationCore]System.Windows.Media.SolidColorBrush)
		}
		.property instance class 'DRTText.IACC' IAddChildCollection()
		{
			.get instance class 'DRTText.IACC' DRTText.TextTestControl::get_IAddChildCollection()
		}
		.property instance class [mscorlib]System.Collections.IDictionary IDict()
		{
			.get instance class [mscorlib]System.Collections.IDictionary DRTText.TextTestControl::get_IDict()
			.set instance void DRTText.TextTestControl::set_IDict(class [mscorlib]System.Collections.IDictionary)
		}
		.property instance class [mscorlib]System.Collections.IEnumerable IEnumerableChildren()
		{
			.get instance class [mscorlib]System.Collections.IEnumerable DRTText.TextTestControl::get_IEnumerableChildren()
		}
		.property instance class [mscorlib]System.Globalization.CultureInfo MyCulture()
		{
			.get instance class [mscorlib]System.Globalization.CultureInfo DRTText.TextTestControl::get_MyCulture()
			.set instance void DRTText.TextTestControl::set_MyCulture(class [mscorlib]System.Globalization.CultureInfo)
		}
		.property instance class DRTText.MyText[] MyTextArrayProp()
		{
			.get instance class DRTText.MyText[] DRTText.TextTestControl::get_MyTextArrayProp()
			.set instance void DRTText.TextTestControl::set_MyTextArrayProp(class DRTText.MyText[])
		}
		.property int32 PropertyThree()
		{
			.get int32 DRTText.TextTestControl::get_PropertyThree()
		}
		.property instance class [mscorlib]System.Collections.IList RWList()
		{
			.get instance class [mscorlib]System.Collections.IList DRTText.TextTestControl::get_RWList()
			.set instance void DRTText.TextTestControl::set_RWList(class [mscorlib]System.Collections.IList)
		}
		.property instance class [mscorlib]System.Type TestType()
		{
			.get instance class [mscorlib]System.Type DRTText.TextTestControl::get_TestType()
			.set instance void DRTText.TextTestControl::set_TestType(class [mscorlib]System.Type)
		}
	}
	.class public TextTestControlSubclass
		extends DRTText.TextTestControl
	{
		.method public hidebysig specialname 
			instance void .ctor(class [PresentationFramework]System.Windows.Documents.TextElement root)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_Beta()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Beta(int32 'value')
		{
			ret
		}
		.method public static hidebysig 
			void SetGreekBeta(class [WindowsBase]System.Windows.DependencyObject target, int32 'value')
		{
			ret
		}
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty BetaProperty
		.field static public initonly class [WindowsBase]System.Windows.DependencyProperty GreekBetaProperty
		.property instance int32 Beta()
		{
			.get instance int32 DRTText.TextTestControlSubclass::get_Beta()
			.set instance void DRTText.TextTestControlSubclass::set_Beta(int32)
		}
	}
	.class public sealed TextTestFlags
		extends [mscorlib]System.Enum
	{
		.custom instance void [mscorlib]System.FlagsAttribute::.ctor() = { }
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype DRTText.TextTestFlags four = int32(0x00000004)
		.field static public literal valuetype DRTText.TextTestFlags one = int32(0x00000001)
		.field static public literal valuetype DRTText.TextTestFlags two = int32(0x00000002)
	}
	.class public XmlIslandDocument
		extends [System.Xml]System.Xml.XmlDocument
		implements [System.Xml]System.Xml.Serialization.IXmlSerializable
	{
		.method public final virtual hidebysig newslot 
			instance class [System.Xml]System.Xml.Schema.XmlSchema GetSchema()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void WriteXml(class [System.Xml]System.Xml.XmlWriter writer)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void ReadXml(class [System.Xml]System.Xml.XmlReader reader)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
}
