#include "versions.h"
#include "ndp20.versions.h"

.assembly extern PresentationCore
{
	.publickeytoken = PRESENTATIONCORE_ASSEMBLY_PUBLIC_KEY_TOKEN_IL
	.ver PRESENTATIONCORE_ASSEMBLY_VERSION_IL
}
.assembly extern PresentationFramework
{
	.publickeytoken = PRESENTATIONFRAMEWORK_ASSEMBLY_PUBLIC_KEY_TOKEN_IL
	.ver PRESENTATIONFRAMEWORK_ASSEMBLY_VERSION_IL
}
.assembly extern System.Windows.Forms
{
	.publickeytoken = SYSTEM_WINDOWS_FORMS_ASSEMBLY_PUBLIC_KEY_TOKEN_IL
	.ver SYSTEM_WINDOWS_FORMS_ASSEMBLY_VERSION_IL
}
.assembly extern TestRuntime
{
	.publickeytoken = TESTRUNTIME_ASSEMBLY_PUBLIC_KEY_TOKEN_IL
	.ver TESTRUNTIME_ASSEMBLY_VERSION_IL
}
.assembly extern WindowsBase
{
	.publickeytoken = WINDOWSBASE_ASSEMBLY_PUBLIC_KEY_TOKEN_IL
	.ver WINDOWSBASE_ASSEMBLY_VERSION_IL
}
.assembly extern mscorlib
{
	.publickeytoken = MSCORLIB_20_ASSEMBLY_PUBLIC_KEY_TOKEN_IL
	.ver MSCORLIB_20_ASSEMBLY_VERSION_IL
}
.assembly CoreTestsTrusted
{
	.custom instance void [mscorlib]System.CLSCompliantAttribute::.ctor(bool) = { bool(false) }
	.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = { bool(false) }
	.custom instance void [mscorlib]System.Security.AllowPartiallyTrustedCallersAttribute::.ctor() = { }
	.publickey = CORETESTSTRUSTED_ASSEMBLY_PUBLIC_KEY_IL
	.hash algorithm 0x00008004
	.ver CORETESTSTRUSTED_ASSEMBLY_VERSION_IL
}
.namespace Avalon.Test.CoreUI
{
	.class public abstract sealed PointUtil
		extends [mscorlib]System.Object
	{
		.method public static hidebysig 
			valuetype [WindowsBase]System.Windows.Point ClientToRoot(valuetype [WindowsBase]System.Windows.Point pt, class [PresentationCore]System.Windows.PresentationSource presentationSource)
		{
			ret
		}
		.method public static hidebysig 
			valuetype [WindowsBase]System.Windows.Point RootToClient(valuetype [WindowsBase]System.Windows.Point pt, class [PresentationCore]System.Windows.PresentationSource presentationSource)
		{
			ret
		}
		.method public static hidebysig 
			valuetype [WindowsBase]System.Windows.Point ApplyVisualTransform(valuetype [WindowsBase]System.Windows.Point pt, class [PresentationCore]System.Windows.Media.Visual v, bool inverse)
		{
			ret
		}
		.method public static hidebysig 
			valuetype [WindowsBase]System.Windows.Point ClientToScreen(valuetype [WindowsBase]System.Windows.Point ptClient, class [PresentationCore]System.Windows.PresentationSource presentationSource)
		{
			ret
		}
		.method public static hidebysig 
			valuetype [WindowsBase]System.Windows.Point ScreenToClient(valuetype [WindowsBase]System.Windows.Point ptScreen, class [PresentationCore]System.Windows.PresentationSource presentationSource)
		{
			ret
		}
	}
}
.namespace Avalon.Test.CoreUI.SourceHook
{
	.class public CreateWindowHelper
		extends [mscorlib]System.Object
	{
		.method public static hidebysig 
			class Avalon.Test.CoreUI.SourceHook.LayeredHost CreateLayeredHost()
		{
			ret
		}
		.method public static hidebysig 
			object[] CreateLayerWindows()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public HwndSubclassHelper
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance int32 get_GotMessage()
		{
			ret
		}
		.method public hidebysig 
			instance void Reset()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]System.Collections.ArrayList get_GotMessages()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(native int hwnd)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig 
			instance native int Attach(native int hwnd)
		{
			ret
		}
		.method public hidebysig 
			instance bool Detach(bool force)
		{
			ret
		}
		.property instance int32 GotMessage()
		{
			.get instance int32 Avalon.Test.CoreUI.SourceHook.HwndSubclassHelper::get_GotMessage()
		}
		.property instance class [mscorlib]System.Collections.ArrayList GotMessages()
		{
			.get instance class [mscorlib]System.Collections.ArrayList Avalon.Test.CoreUI.SourceHook.HwndSubclassHelper::get_GotMessages()
		}
	}
	.class public LayeredHost
		extends [PresentationFramework]System.Windows.Interop.HwndHost
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method family virtual hidebysig 
			instance valuetype [mscorlib]System.Runtime.InteropServices.HandleRef BuildWindowCore(valuetype [mscorlib]System.Runtime.InteropServices.HandleRef hwndParent)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void DestroyWindowCore(valuetype [mscorlib]System.Runtime.InteropServices.HandleRef hwnd)
		{
			ret
		}
	}
}
.namespace Avalon.Test.CoreUI.Trusted
{
	.class public AccelaratorTable
		extends [mscorlib]System.Object
		implements [mscorlib]System.IDisposable
	{
		.method public hidebysig specialname 
			instance void .ctor(class [TestRuntime]Microsoft.Test.Win32.NativeStructs/'ACCEL'[] accelArray)
		{
			ret
		}
		.method public hidebysig specialname 
			instance native int get_ACCELTable()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance void Dispose()
		{
			ret
		}
		.method family virtual hidebysig 
			instance void Finalize()
		{
			ret
		}
		.method public hidebysig 
			instance void Create()
		{
			ret
		}
		.property instance native int ACCELTable()
		{
			.get instance native int Avalon.Test.CoreUI.Trusted.AccelaratorTable::get_ACCELTable()
		}
	}
	.class public AutoData
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsAutoDataLoaded()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_UseAutoData()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_UseAutoData(bool 'value')
		{
			ret
		}
		.method public hidebysig 
			instance string GetTestString(int32 index)
		{
			ret
		}
		.property instance bool IsAutoDataLoaded()
		{
			.get instance bool Avalon.Test.CoreUI.Trusted.AutoData::get_IsAutoDataLoaded()
		}
		.property instance bool UseAutoData()
		{
			.get instance bool Avalon.Test.CoreUI.Trusted.AutoData::get_UseAutoData()
			.set instance void Avalon.Test.CoreUI.Trusted.AutoData::set_UseAutoData(bool)
		}
	}
	.class public serializable AutoStatus
		extends [mscorlib]System.Object
		implements [mscorlib]System.IDisposable
	{
		.method public final virtual hidebysig newslot 
			instance void Dispose()
		{
			ret
		}
		.field public int32 Indentation
	}
	.class public CoreAutoResetEvent
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance void .ctor(bool initialState, int32 NumberSet)
		{
			ret
		}
		.method public hidebysig 
			instance bool WaitOne()
		{
			ret
		}
		.method public hidebysig 
			instance bool Set()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [mscorlib]System.Threading.WaitHandle get_AutoEvent()
		{
			ret
		}
		.property instance class [mscorlib]System.Threading.WaitHandle AutoEvent()
		{
			.get instance class [mscorlib]System.Threading.WaitHandle Avalon.Test.CoreUI.Trusted.CoreAutoResetEvent::get_AutoEvent()
		}
	}
	.class public abstract sealed CoreLogger
		extends [mscorlib]System.Object
	{
		.method public static hidebysig 
			void LogStatus(string text)
		{
			ret
		}
		.method public static hidebysig 
			void LogStatus(string text, valuetype [mscorlib]System.ConsoleColor consoleColor)
		{
			ret
		}
		.method public static hidebysig 
			void LogException(class [mscorlib]System.Exception exception)
		{
			ret
		}
		.method public static hidebysig 
			void LogTestResult(bool bResult, string commentStr)
		{
			ret
		}
		.method public static hidebysig 
			void MonitorProcess(class [TestRuntime]Microsoft.Test.Security.Wrappers.ProcessSW process)
		{
			ret
		}
		.method public static hidebysig 
			void KillMonitoredProcesses()
		{
			ret
		}
		.method public static hidebysig 
			class [mscorlib]System.IDisposable AutoStatus(string text)
		{
			ret
		}
		.field static public bool LogThreadId
	}
	.class public abstract CoreTests
		extends [mscorlib]System.MarshalByRefObject
	{
		.method family hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.field static public literal string AvalonDefaultAssemblies = "avalondefaultassemblies"
		.field static public literal string CoreTestsDefaultAssemblies = "coretestsdefaultassemblies"
	}
	.class public CoreTestsLoaderAttribute
		extends [mscorlib]System.Attribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = { int32(68) property bool Inherited = bool(false) property bool AllowMultiple = bool(false) }
		.method public hidebysig specialname 
			instance void .ctor(valuetype Avalon.Test.CoreUI.Trusted.CoreTestsTestType typeoftest)
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype Avalon.Test.CoreUI.Trusted.CoreTestsTestType get_TypeOfTest()
		{
			ret
		}
		.property instance valuetype Avalon.Test.CoreUI.Trusted.CoreTestsTestType TypeOfTest()
		{
			.get instance valuetype Avalon.Test.CoreUI.Trusted.CoreTestsTestType Avalon.Test.CoreUI.Trusted.CoreTestsLoaderAttribute::get_TypeOfTest()
		}
	}
	.class public CoreTestsSingleRunServices
		extends [mscorlib]System.Object
	{
		.method public static hidebysig 
			void RunTestCaseProcess(string exeFile, int32 timeOut)
		{
			ret
		}
		.method public static hidebysig 
			void RunTestCaseProcess(string exeFile, int32 timeOut, string paramsStr, bool addRemotedParam)
		{
			ret
		}
		.method public static hidebysig 
			void RunTestCaseProcess(string exeFile, int32 timeOut, string paramsStr, bool addRemotedParam, bool redirectOutput)
		{
			ret
		}
		.method public static hidebysig 
			void RunTestCaseProcess(string exeFile, int32 timeOut, string paramsStr, bool addRemotedParam, bool redirectOutput, bool startApplicationMonitor)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public sealed CoreTestsTestType
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Avalon.Test.CoreUI.Trusted.CoreTestsTestType ClassBase = int32(0x00000000)
		.field static public literal valuetype Avalon.Test.CoreUI.Trusted.CoreTestsTestType MethodBase = int32(0x00000001)
	}
	.class public abstract sealed ElementUtils
		extends [mscorlib]System.Object
	{
		.permissionset assert = (2E 02 7F 53 79 73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E 50 65 72 6D 69 73 73 69 6F 6E 53 65 74 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 32 2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36 31 39 33 34 65 30 38 39 12 01 54 0E 04 4E 61 6D 65 09 46 75 6C 6C 54 72 75 73 74 7F 53 79 73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E 50 65 72 6D 69 73 73 69 6F 6E 53 65 74 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 32 2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36 31 39 33 34 65 30 38 39 12 01 54 0E 04 4E 61 6D 65 09 46 75 6C 6C 54 72 75 73 74)
		.method public static hidebysig 
			class [PresentationFramework]System.Windows.FrameworkElement FindElement(class [PresentationFramework]System.Windows.FrameworkElement scope, string id)
		{
			ret
		}
		.method public static hidebysig 
			class [PresentationFramework]System.Windows.FrameworkElement FindElementInVisuals(class [WindowsBase]System.Windows.DependencyObject scope, string id)
		{
			ret
		}
		.method public static hidebysig 
			class [WindowsBase]System.Windows.DependencyObject FindVisualByPropertyValue(class [WindowsBase]System.Windows.DependencyObject scope, class [WindowsBase]System.Windows.DependencyProperty dp, object 'value', bool includeScope)
		{
			ret
		}
		.method public static hidebysig 
			valuetype [WindowsBase]System.Windows.Rect GetClientRelativeRect(class [PresentationCore]System.Windows.UIElement element)
		{
			ret
		}
		.method public static hidebysig 
			class [PresentationCore]System.Windows.Interop.HwndSource GetHwndSource(class [PresentationFramework]System.Windows.Window window)
		{
			ret
		}
		.method public static hidebysig 
			valuetype [WindowsBase]System.Windows.Rect GetScreenRelativeRect(class [PresentationCore]System.Windows.UIElement element)
		{
			ret
		}
		.method public static hidebysig 
			class [PresentationFramework]System.Windows.Window GetWindowFromElement(class [PresentationCore]System.Windows.Media.Visual element)
		{
			ret
		}
		.method public static hidebysig 
			native int WindowToHwnd(class [PresentationFramework]System.Windows.Window window)
		{
			ret
		}
		.method public static hidebysig 
			valuetype [WindowsBase]System.Windows.Rect GetClientRelativeRect(class [PresentationCore]System.Windows.UIElement3D element3d)
		{
			ret
		}
		.method public static hidebysig 
			valuetype [WindowsBase]System.Windows.Rect GetScreenRelativeRect(class [PresentationCore]System.Windows.UIElement3D element3d)
		{
			ret
		}
	}
	.class public sealed Input
		extends [mscorlib]System.Object
	{
		.method public static hidebysig 
			void SendKeyboardInput(uint8 vk, bool press)
		{
			.permissionset assert = (2E 01 7F 53 79 73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E 50 65 72 6D 69 73 73 69 6F 6E 53 65 74 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 32 2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36 31 39 33 34 65 30 38 39 12 01 54 0E 04 4E 61 6D 65 09 46 75 6C 6C 54 72 75 73 74)
			ret
		}
		.method public static hidebysig 
			void SendMouseInput(int32 x, int32 y, int32 data, valuetype Avalon.Test.CoreUI.Trusted.SendMouseInputFlags 'flags')
		{
			.permissionset assert = (2E 01 7F 53 79 73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E 50 65 72 6D 69 73 73 69 6F 6E 53 65 74 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 32 2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36 31 39 33 34 65 30 38 39 12 01 54 0E 04 4E 61 6D 65 09 46 75 6C 6C 54 72 75 73 74)
			ret
		}
		.method public static hidebysig 
			void SendMouseInput(float64 x, float64 y, int32 data, valuetype Avalon.Test.CoreUI.Trusted.SendMouseInputFlags 'flags')
		{
			.permissionset assert = (2E 01 7F 53 79 73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E 50 65 72 6D 69 73 73 69 6F 6E 53 65 74 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 32 2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36 31 39 33 34 65 30 38 39 12 01 54 0E 04 4E 61 6D 65 09 46 75 6C 6C 54 72 75 73 74)
			ret
		}
		.method public static hidebysig 
			uint8 RealVirtualKeyFromVirtualKey(uint8 vk)
		{
			ret
		}
		.method public static hidebysig 
			int32 WheelDeltaFromWheelMovement(valuetype Avalon.Test.CoreUI.Trusted.MouseWheelDirection direction, int32 nNotchesMoved)
		{
			ret
		}
		.method public static hidebysig 
			void ResetKeyboardState()
		{
			.permissionset assert = (2E 01 7F 53 79 73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E 50 65 72 6D 69 73 73 69 6F 6E 53 65 74 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 32 2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36 31 39 33 34 65 30 38 39 12 01 54 0E 04 4E 61 6D 65 09 46 75 6C 6C 54 72 75 73 74)
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.field static public literal int32 XButton1 = int32(0x00000001)
		.field static public literal int32 XButton2 = int32(0x00000002)
	}
	.class public InputHelper
		extends [mscorlib]System.Object
	{
		.permissionset assert = (2E 01 7F 53 79 73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E 50 65 72 6D 69 73 73 69 6F 6E 53 65 74 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 32 2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36 31 39 33 34 65 30 38 39 12 01 54 0E 04 4E 61 6D 65 09 46 75 6C 6C 54 72 75 73 74)
		.method public static hidebysig 
			object GetFocusedElement()
		{
			ret
		}
		.method public static hidebysig 
			class [PresentationFramework]System.Windows.Window CreateWindow()
		{
			ret
		}
		.method public static hidebysig 
			void ShowWindow(class [PresentationFramework]System.Windows.Window window)
		{
			ret
		}
		.method public static hidebysig 
			bool HasFocusWithin(class [WindowsBase]System.Windows.Interop.IKeyboardInputSink sink)
		{
			ret
		}
		.method public static hidebysig 
			bool IsInputReport(class [PresentationCore]System.Windows.RoutedEvent e)
		{
			ret
		}
		.method public static hidebysig 
			bool IsPreviewInputReport(class [PresentationCore]System.Windows.RoutedEvent e)
		{
			ret
		}
		.method public static hidebysig 
			void WaitForAllInputEvents()
		{
			ret
		}
		.method public static hidebysig 
			bool IsInputPending()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public sealed InputManagerHelper
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance void .ctor(class [PresentationCore]System.Windows.Input.InputManager inputManager)
		{
			ret
		}
		.method public static hidebysig specialname 
			class [PresentationCore]System.Windows.Input.InputManager get_Current()
		{
			ret
		}
		.method public static hidebysig specialname 
			class Avalon.Test.CoreUI.Trusted.InputManagerHelper get_CurrentHelper()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void add_PreProcessInput(class [PresentationCore]System.Windows.Input.PreProcessInputEventHandler 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void remove_PreProcessInput(class [PresentationCore]System.Windows.Input.PreProcessInputEventHandler 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void add_PreNotifyInput(class [PresentationCore]System.Windows.Input.NotifyInputEventHandler 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void remove_PreNotifyInput(class [PresentationCore]System.Windows.Input.NotifyInputEventHandler 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void add_PostNotifyInput(class [PresentationCore]System.Windows.Input.NotifyInputEventHandler 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void remove_PostNotifyInput(class [PresentationCore]System.Windows.Input.NotifyInputEventHandler 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void add_PostProcessInput(class [PresentationCore]System.Windows.Input.ProcessInputEventHandler 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void remove_PostProcessInput(class [PresentationCore]System.Windows.Input.ProcessInputEventHandler 'value')
		{
			ret
		}
		.method public static hidebysig specialname 
			class [PresentationCore]System.Windows.RoutedEvent get_InputReportEvent()
		{
			.permissionset assert = (2E 01 7F 53 79 73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E 50 65 72 6D 69 73 73 69 6F 6E 53 65 74 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 32 2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36 31 39 33 34 65 30 38 39 12 01 54 0E 04 4E 61 6D 65 09 46 75 6C 6C 54 72 75 73 74)
			ret
		}
		.method public static hidebysig specialname 
			class [PresentationCore]System.Windows.RoutedEvent get_PreviewInputReportEvent()
		{
			.permissionset assert = (2E 01 7F 53 79 73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E 50 65 72 6D 69 73 73 69 6F 6E 53 65 74 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 32 2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36 31 39 33 34 65 30 38 39 12 01 54 0E 04 4E 61 6D 65 09 46 75 6C 6C 54 72 75 73 74)
			ret
		}
		.event [PresentationCore]System.Windows.Input.NotifyInputEventHandler PostNotifyInput
		{
			.addon instance void Avalon.Test.CoreUI.Trusted.InputManagerHelper::add_PostNotifyInput(class [PresentationCore]System.Windows.Input.NotifyInputEventHandler)
			.removeon instance void Avalon.Test.CoreUI.Trusted.InputManagerHelper::remove_PostNotifyInput(class [PresentationCore]System.Windows.Input.NotifyInputEventHandler)
		}
		.event [PresentationCore]System.Windows.Input.ProcessInputEventHandler PostProcessInput
		{
			.addon instance void Avalon.Test.CoreUI.Trusted.InputManagerHelper::add_PostProcessInput(class [PresentationCore]System.Windows.Input.ProcessInputEventHandler)
			.removeon instance void Avalon.Test.CoreUI.Trusted.InputManagerHelper::remove_PostProcessInput(class [PresentationCore]System.Windows.Input.ProcessInputEventHandler)
		}
		.event [PresentationCore]System.Windows.Input.NotifyInputEventHandler PreNotifyInput
		{
			.addon instance void Avalon.Test.CoreUI.Trusted.InputManagerHelper::add_PreNotifyInput(class [PresentationCore]System.Windows.Input.NotifyInputEventHandler)
			.removeon instance void Avalon.Test.CoreUI.Trusted.InputManagerHelper::remove_PreNotifyInput(class [PresentationCore]System.Windows.Input.NotifyInputEventHandler)
		}
		.event [PresentationCore]System.Windows.Input.PreProcessInputEventHandler PreProcessInput
		{
			.addon instance void Avalon.Test.CoreUI.Trusted.InputManagerHelper::add_PreProcessInput(class [PresentationCore]System.Windows.Input.PreProcessInputEventHandler)
			.removeon instance void Avalon.Test.CoreUI.Trusted.InputManagerHelper::remove_PreProcessInput(class [PresentationCore]System.Windows.Input.PreProcessInputEventHandler)
		}
		.property class [PresentationCore]System.Windows.Input.InputManager Current()
		{
			.get class [PresentationCore]System.Windows.Input.InputManager Avalon.Test.CoreUI.Trusted.InputManagerHelper::get_Current()
		}
		.property class Avalon.Test.CoreUI.Trusted.InputManagerHelper CurrentHelper()
		{
			.get class Avalon.Test.CoreUI.Trusted.InputManagerHelper Avalon.Test.CoreUI.Trusted.InputManagerHelper::get_CurrentHelper()
		}
		.property class [PresentationCore]System.Windows.RoutedEvent InputReportEvent()
		{
			.get class [PresentationCore]System.Windows.RoutedEvent Avalon.Test.CoreUI.Trusted.InputManagerHelper::get_InputReportEvent()
		}
		.property class [PresentationCore]System.Windows.RoutedEvent PreviewInputReportEvent()
		{
			.get class [PresentationCore]System.Windows.RoutedEvent Avalon.Test.CoreUI.Trusted.InputManagerHelper::get_PreviewInputReportEvent()
		}
	}
	.class public Interop
		extends [mscorlib]System.Object
	{
		.permissionset assert = (2E 01 7F 53 79 73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E 50 65 72 6D 69 73 73 69 6F 6E 53 65 74 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 32 2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36 31 39 33 34 65 30 38 39 12 01 54 0E 04 4E 61 6D 65 09 46 75 6C 6C 54 72 75 73 74)
		.method public static hidebysig 
			valuetype [mscorlib]System.Runtime.InteropServices.HandleRef HandleRefFromWindow(class [PresentationFramework]System.Windows.Window w)
		{
			ret
		}
		.method public static hidebysig 
			class [PresentationCore]System.Windows.PresentationSource PresentationSourceFromVisual(class [PresentationCore]System.Windows.Media.Visual v)
		{
			ret
		}
		.method public static hidebysig 
			void SetFocus(valuetype [mscorlib]System.Runtime.InteropServices.HandleRef handle)
		{
			ret
		}
		.method public static hidebysig 
			valuetype [mscorlib]System.Runtime.InteropServices.HandleRef GetFocus()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public abstract sealed InterpolationHelper
		extends [mscorlib]System.Object
	{
		.method public static hidebysig 
			valuetype [WindowsBase]System.Windows.Point[] GetPoints(int32 x1, int32 y1, int32 x2, int32 y2)
		{
			ret
		}
		.method public static hidebysig 
			valuetype [WindowsBase]System.Windows.Point[] GetPoints(int32 x1, int32 y1, int32 x2, int32 y2, int32 maximum)
		{
			ret
		}
		.method public static hidebysig 
			valuetype [WindowsBase]System.Windows.Point[] GetAllPoints(int32 x1, int32 y1, int32 x2, int32 y2)
		{
			ret
		}
	}
	.class public abstract sealed KeyboardHelper
		extends [mscorlib]System.Object
	{
		.method public static hidebysig 
			void EnsureFocus(class [PresentationCore]System.Windows.IInputElement inputElement)
		{
			ret
		}
		.method public static hidebysig 
			void ResetKeyboardState()
		{
			.permissionset assert = (2E 01 7F 53 79 73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E 50 65 72 6D 69 73 73 69 6F 6E 53 65 74 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 32 2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36 31 39 33 34 65 30 38 39 12 01 54 0E 04 4E 61 6D 65 09 46 75 6C 6C 54 72 75 73 74)
			ret
		}
		.method public static hidebysig 
			void TypeKey(valuetype [WindowsBase]System.Windows.Input.Key key)
		{
			ret
		}
		.method public static hidebysig 
			void TypeKey(valuetype [WindowsBase]System.Windows.Input.Key[] keys)
		{
			ret
		}
		.method public static hidebysig 
			void TypeKey(string str)
		{
			ret
		}
		.method public static hidebysig 
			void TypeKey(string str, valuetype [WindowsBase]System.Windows.Input.ModifierKeys modifiers)
		{
			ret
		}
		.method public static hidebysig 
			void TypeKey(valuetype [WindowsBase]System.Windows.Input.Key key, valuetype [WindowsBase]System.Windows.Input.ModifierKeys modifiers)
		{
			ret
		}
		.method public static hidebysig 
			void TypeKey(class [PresentationFramework]System.Windows.Window window, valuetype [WindowsBase]System.Windows.Input.Key[] keys, valuetype [WindowsBase]System.Windows.Input.ModifierKeys modifiers)
		{
			ret
		}
		.method public static hidebysig 
			void TypeKey(native int hwnd, valuetype [WindowsBase]System.Windows.Input.Key key, valuetype [WindowsBase]System.Windows.Input.ModifierKeys modifiers)
		{
			ret
		}
		.method public static hidebysig 
			void TypeKey(native int hwnd, valuetype [WindowsBase]System.Windows.Input.Key[] keys, valuetype [WindowsBase]System.Windows.Input.ModifierKeys modifiers)
		{
			ret
		}
		.method public static hidebysig 
			void TypeKey(class [PresentationFramework]System.Windows.Window window, string str, valuetype [WindowsBase]System.Windows.Input.ModifierKeys modifiers)
		{
			ret
		}
		.method public static hidebysig 
			void TypeKey(native int hwnd, string str, valuetype [WindowsBase]System.Windows.Input.ModifierKeys modifiers)
		{
			ret
		}
		.method public static hidebysig 
			void TypeKey(valuetype [WindowsBase]System.Windows.Input.Key[] keys, valuetype [WindowsBase]System.Windows.Input.ModifierKeys modifiers)
		{
			ret
		}
		.method public static hidebysig 
			void PressKey(valuetype [WindowsBase]System.Windows.Input.Key key)
		{
			ret
		}
		.method public static hidebysig 
			void PressKey(valuetype [WindowsBase]System.Windows.Input.Key key, valuetype [WindowsBase]System.Windows.Input.ModifierKeys modifiers)
		{
			ret
		}
		.method public static hidebysig 
			void ReleaseKey(valuetype [WindowsBase]System.Windows.Input.Key key)
		{
			ret
		}
		.method public static hidebysig 
			void ReleaseKey(valuetype [WindowsBase]System.Windows.Input.Key key, valuetype [WindowsBase]System.Windows.Input.ModifierKeys modifiers)
		{
			ret
		}
		.method public static hidebysig specialname 
			bool get_IsSynchronous()
		{
			ret
		}
		.method public static hidebysig specialname 
			void set_IsSynchronous(bool 'value')
		{
			ret
		}
		.property bool IsSynchronous()
		{
			.get bool Avalon.Test.CoreUI.Trusted.KeyboardHelper::get_IsSynchronous()
			.set void Avalon.Test.CoreUI.Trusted.KeyboardHelper::set_IsSynchronous(bool)
		}
	}
	.class public abstract sealed MouseHelper
		extends [mscorlib]System.Object
	{
		.method public static hidebysig 
			valuetype [WindowsBase]System.Windows.Point GetPoint(class [PresentationCore]System.Windows.UIElement element, valuetype Avalon.Test.CoreUI.Trusted.MouseLocation location)
		{
			ret
		}
		.method public static hidebysig 
			void Move(native int hwnd)
		{
			ret
		}
		.method public static hidebysig 
			void MoveOutside(native int hwnd, valuetype Avalon.Test.CoreUI.Trusted.MouseLocation location)
		{
			ret
		}
		.method public static hidebysig 
			void MoveOutside(native int hwnd, valuetype Avalon.Test.CoreUI.Trusted.MouseLocation location, bool isImmediate)
		{
			ret
		}
		.method public static hidebysig 
			void Move(native int hwnd, valuetype Avalon.Test.CoreUI.Trusted.MouseLocation location)
		{
			ret
		}
		.method public static hidebysig 
			void Move(native int hwnd, valuetype Avalon.Test.CoreUI.Trusted.MouseLocation location, bool isImmediate)
		{
			ret
		}
		.method public static hidebysig 
			void MoveOnVirtualScreenMonitor()
		{
			ret
		}
		.method public static hidebysig 
			void MoveOnPrimaryMonitor()
		{
			ret
		}
		.method public static hidebysig 
			void MoveOnPrimaryMonitor(valuetype Avalon.Test.CoreUI.Trusted.MouseLocation location, bool synchronous)
		{
			ret
		}
		.method public static hidebysig 
			void Move(class [PresentationCore]System.Windows.UIElement element)
		{
			ret
		}
		.method public static hidebysig 
			void Move(class [PresentationCore]System.Windows.UIElement element, valuetype Avalon.Test.CoreUI.Trusted.MouseLocation location)
		{
			ret
		}
		.method public static hidebysig 
			void Move(class [PresentationCore]System.Windows.UIElement element, valuetype Avalon.Test.CoreUI.Trusted.MouseLocation location, bool isImmediate)
		{
			ret
		}
		.method public static hidebysig 
			void MoveOutside(class [PresentationCore]System.Windows.UIElement element, valuetype Avalon.Test.CoreUI.Trusted.MouseLocation location)
		{
			ret
		}
		.method public static hidebysig 
			void MoveOutside(class [PresentationCore]System.Windows.UIElement element, valuetype Avalon.Test.CoreUI.Trusted.MouseLocation location, bool isImmediate)
		{
			ret
		}
		.method public static hidebysig 
			void Drag(class [PresentationCore]System.Windows.UIElement element, valuetype Avalon.Test.CoreUI.Trusted.MouseLocation location, valuetype [PresentationCore]System.Windows.Input.MouseButton button)
		{
			ret
		}
		.method public static hidebysig 
			void Click()
		{
			ret
		}
		.method public static hidebysig 
			void Click(valuetype [PresentationCore]System.Windows.Input.MouseButton button)
		{
			ret
		}
		.method public static hidebysig 
			void Click(valuetype [PresentationCore]System.Windows.Input.MouseButton button, int32 amountOfClicks)
		{
			ret
		}
		.method public static hidebysig 
			void Click(native int hwnd)
		{
			ret
		}
		.method public static hidebysig 
			void Click(native int hwnd, valuetype Avalon.Test.CoreUI.Trusted.MouseLocation location)
		{
			ret
		}
		.method public static hidebysig 
			void Click(valuetype [PresentationCore]System.Windows.Input.MouseButton button, native int hwnd)
		{
			ret
		}
		.method public static hidebysig 
			void Click(valuetype [PresentationCore]System.Windows.Input.MouseButton button, native int hwnd, valuetype Avalon.Test.CoreUI.Trusted.MouseLocation location)
		{
			ret
		}
		.method public static hidebysig 
			void Click(class [PresentationCore]System.Windows.UIElement element)
		{
			ret
		}
		.method public static hidebysig 
			void Click(class [PresentationCore]System.Windows.UIElement element, int32 amountOfClicks)
		{
			ret
		}
		.method public static hidebysig 
			void Click(valuetype [PresentationCore]System.Windows.Input.MouseButton button, class [PresentationCore]System.Windows.UIElement element, int32 amountOfClicks)
		{
			ret
		}
		.method public static hidebysig 
			void Click(valuetype [PresentationCore]System.Windows.Input.MouseButton button, class [PresentationCore]System.Windows.UIElement element)
		{
			ret
		}
		.method public static hidebysig 
			void Click(valuetype [PresentationCore]System.Windows.Input.MouseButton button, class [PresentationCore]System.Windows.UIElement element, valuetype Avalon.Test.CoreUI.Trusted.MouseLocation location)
		{
			ret
		}
		.method public static hidebysig 
			void MoveWheel(int32 delta)
		{
			ret
		}
		.method public static hidebysig 
			void MoveWheel(valuetype Avalon.Test.CoreUI.Trusted.MouseWheelDirection direction, int32 notchCount)
		{
			ret
		}
		.method public static hidebysig 
			void PressButton()
		{
			ret
		}
		.method public static hidebysig 
			void ReleaseButton()
		{
			ret
		}
		.method public static hidebysig 
			void PressButton(valuetype [PresentationCore]System.Windows.Input.MouseButton button)
		{
			ret
		}
		.method public static hidebysig 
			void ReleaseButton(valuetype [PresentationCore]System.Windows.Input.MouseButton button)
		{
			ret
		}
		.method public static hidebysig specialname 
			bool get_IsSynchronous()
		{
			ret
		}
		.method public static hidebysig specialname 
			void set_IsSynchronous(bool 'value')
		{
			ret
		}
		.method public static hidebysig 
			void Move(class [PresentationCore]System.Windows.UIElement3D element3d)
		{
			ret
		}
		.method public static hidebysig 
			void Move(class [PresentationCore]System.Windows.UIElement3D element3d, valuetype Avalon.Test.CoreUI.Trusted.MouseLocation location)
		{
			ret
		}
		.method public static hidebysig 
			void Move(class [PresentationCore]System.Windows.UIElement3D element3d, valuetype Avalon.Test.CoreUI.Trusted.MouseLocation location, bool isImmediate)
		{
			ret
		}
		.method public static hidebysig 
			void Drag(class [PresentationCore]System.Windows.UIElement3D element3d, valuetype Avalon.Test.CoreUI.Trusted.MouseLocation location, valuetype [PresentationCore]System.Windows.Input.MouseButton button)
		{
			ret
		}
		.method public static hidebysig 
			void Click(class [PresentationCore]System.Windows.UIElement3D element3d)
		{
			ret
		}
		.method public static hidebysig 
			void Click(class [PresentationCore]System.Windows.UIElement3D element3d, int32 amountOfClicks)
		{
			ret
		}
		.method public static hidebysig 
			void Click(valuetype [PresentationCore]System.Windows.Input.MouseButton button, class [PresentationCore]System.Windows.UIElement3D element3d, int32 amountOfClicks)
		{
			ret
		}
		.method public static hidebysig 
			void Click(valuetype [PresentationCore]System.Windows.Input.MouseButton button, class [PresentationCore]System.Windows.UIElement3D element3d)
		{
			ret
		}
		.method public static hidebysig 
			void Click(valuetype [PresentationCore]System.Windows.Input.MouseButton button, class [PresentationCore]System.Windows.UIElement3D element3d, valuetype Avalon.Test.CoreUI.Trusted.MouseLocation location)
		{
			ret
		}
		.property bool IsSynchronous()
		{
			.get bool Avalon.Test.CoreUI.Trusted.MouseHelper::get_IsSynchronous()
			.set void Avalon.Test.CoreUI.Trusted.MouseHelper::set_IsSynchronous(bool)
		}
	}
	.class public sealed MouseLocation
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Avalon.Test.CoreUI.Trusted.MouseLocation Bottom = int32(0x00000007)
		.field static public literal valuetype Avalon.Test.CoreUI.Trusted.MouseLocation BottomLeft = int32(0x00000006)
		.field static public literal valuetype Avalon.Test.CoreUI.Trusted.MouseLocation BottomRight = int32(0x00000008)
		.field static public literal valuetype Avalon.Test.CoreUI.Trusted.MouseLocation Center = int32(0x00000004)
		.field static public literal valuetype Avalon.Test.CoreUI.Trusted.MouseLocation CenterLeft = int32(0x00000003)
		.field static public literal valuetype Avalon.Test.CoreUI.Trusted.MouseLocation CenterRight = int32(0x00000005)
		.field static public literal valuetype Avalon.Test.CoreUI.Trusted.MouseLocation Top = int32(0x00000001)
		.field static public literal valuetype Avalon.Test.CoreUI.Trusted.MouseLocation TopLeft = int32(0x00000000)
		.field static public literal valuetype Avalon.Test.CoreUI.Trusted.MouseLocation TopRight = int32(0x00000002)
	}
	.class public sealed MouseWheelDirection
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Avalon.Test.CoreUI.Trusted.MouseWheelDirection Backward = int32(0x00000000)
		.field static public literal valuetype Avalon.Test.CoreUI.Trusted.MouseWheelDirection Forward = int32(0x00000001)
	}
	.class public MultipleThreadTestCaseModelAttribute
		extends Avalon.Test.CoreUI.Trusted.TestCaseModelAttribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = { int32(4) property bool Inherited = bool(false) property bool AllowMultiple = bool(true) }
		.method public hidebysig specialname 
			instance void .ctor(string xtcFileName, int32 numOfThreads, string priority, string area, string title)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string xtcFileName, int32 numOfThreads, string priority, string area, valuetype [TestRuntime]Microsoft.Test.Discovery.Adaptors.TestCaseSecurityLevel securityLevel, string title)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string xtcFileName, int32 numOfThreads, string priority, string area, string paramsstr, valuetype [TestRuntime]Microsoft.Test.Discovery.Adaptors.TestCaseSecurityLevel securityLevel, string title)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string xtcFileName, int32 numOfThreads, string priority, string area, string paramsstr, string disabled, valuetype [TestRuntime]Microsoft.Test.Discovery.Adaptors.TestCaseSecurityLevel securityLevel, string title)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string xtcFileName, int32 numOfThreads, int32 modelStart, int32 modelEnd, string priority, string area, string paramsstr, string disabled, valuetype [TestRuntime]Microsoft.Test.Discovery.Adaptors.TestCaseSecurityLevel securityLevel, string title)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_NumOfThreads()
		{
			ret
		}
		.property instance int32 NumOfThreads()
		{
			.get instance int32 Avalon.Test.CoreUI.Trusted.MultipleThreadTestCaseModelAttribute::get_NumOfThreads()
		}
	}
	.class public PresentationHelper
		extends [mscorlib]System.Object
	{
		.permissionset assert = (2E 02 7F 53 79 73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E 50 65 72 6D 69 73 73 69 6F 6E 53 65 74 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 32 2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36 31 39 33 34 65 30 38 39 12 01 54 0E 04 4E 61 6D 65 09 46 75 6C 6C 54 72 75 73 74 7F 53 79 73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E 50 65 72 6D 69 73 73 69 6F 6E 53 65 74 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 32 2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36 31 39 33 34 65 30 38 39 12 01 54 0E 04 4E 61 6D 65 09 46 75 6C 6C 54 72 75 73 74)
		.method public static hidebysig 
			valuetype [mscorlib]System.Runtime.InteropServices.HandleRef GetHwnd(class [PresentationCore]System.Windows.Media.Visual element)
		{
			ret
		}
		.method public static hidebysig 
			valuetype [mscorlib]System.Runtime.InteropServices.HandleRef GetHwnd(class [PresentationCore]System.Windows.PresentationSource source)
		{
			ret
		}
		.method public static hidebysig 
			class [PresentationCore]System.Windows.PresentationSource FromElement(class [WindowsBase]System.Windows.DependencyObject dobj)
		{
			ret
		}
		.method public static hidebysig 
			class [PresentationCore]System.Windows.PresentationSource FromMouse()
		{
			ret
		}
		.method public static hidebysig 
			class [PresentationCore]System.Windows.PresentationSource FromKeyEventArgs(class [PresentationCore]System.Windows.Input.KeyEventArgs eventArgs)
		{
			ret
		}
		.method public static hidebysig 
			class [PresentationCore]System.Windows.PresentationSource FromDependencyObject(class [WindowsBase]System.Windows.DependencyObject dobj)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public sealed ResizeDirection
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Avalon.Test.CoreUI.Trusted.ResizeDirection East = int32(0x00000002)
		.field static public literal valuetype Avalon.Test.CoreUI.Trusted.ResizeDirection North = int32(0x00000000)
		.field static public literal valuetype Avalon.Test.CoreUI.Trusted.ResizeDirection Northeast = int32(0x00000005)
		.field static public literal valuetype Avalon.Test.CoreUI.Trusted.ResizeDirection Northwest = int32(0x00000004)
		.field static public literal valuetype Avalon.Test.CoreUI.Trusted.ResizeDirection South = int32(0x00000001)
		.field static public literal valuetype Avalon.Test.CoreUI.Trusted.ResizeDirection Southeast = int32(0x00000007)
		.field static public literal valuetype Avalon.Test.CoreUI.Trusted.ResizeDirection Southwest = int32(0x00000006)
		.field static public literal valuetype Avalon.Test.CoreUI.Trusted.ResizeDirection West = int32(0x00000003)
	}
	.class public sealed ResizeHandle
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Avalon.Test.CoreUI.Trusted.ResizeHandle East = int32(0x00000002)
		.field static public literal valuetype Avalon.Test.CoreUI.Trusted.ResizeHandle North = int32(0x00000000)
		.field static public literal valuetype Avalon.Test.CoreUI.Trusted.ResizeHandle Northeast = int32(0x00000005)
		.field static public literal valuetype Avalon.Test.CoreUI.Trusted.ResizeHandle Northwest = int32(0x00000004)
		.field static public literal valuetype Avalon.Test.CoreUI.Trusted.ResizeHandle South = int32(0x00000001)
		.field static public literal valuetype Avalon.Test.CoreUI.Trusted.ResizeHandle Southeast = int32(0x00000007)
		.field static public literal valuetype Avalon.Test.CoreUI.Trusted.ResizeHandle Southwest = int32(0x00000006)
		.field static public literal valuetype Avalon.Test.CoreUI.Trusted.ResizeHandle West = int32(0x00000003)
	}
	.class public sealed ResizeHandler
		extends [mscorlib]System.MulticastDelegate
	{
		.method public hidebysig specialname 
			instance void .ctor(object 'object', native int 'method')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void Invoke()
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance class [mscorlib]System.IAsyncResult BeginInvoke(class [mscorlib]System.AsyncCallback callback, object 'object')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void EndInvoke(class [mscorlib]System.IAsyncResult result)
			runtime 
		{
		}
	}
	.class public sealed ResizeMethod
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Avalon.Test.CoreUI.Trusted.ResizeMethod Keyboard = int32(0x00000001)
		.field static public literal valuetype Avalon.Test.CoreUI.Trusted.ResizeMethod Mouse = int32(0x00000000)
		.field static public literal valuetype Avalon.Test.CoreUI.Trusted.ResizeMethod Programmatic = int32(0x00000002)
	}
	.class public sealed SendMouseInputFlags
		extends [mscorlib]System.Enum
	{
		.custom instance void [mscorlib]System.FlagsAttribute::.ctor() = { }
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Avalon.Test.CoreUI.Trusted.SendMouseInputFlags Absolute = int32(0x00008000)
		.field static public literal valuetype Avalon.Test.CoreUI.Trusted.SendMouseInputFlags LeftDown = int32(0x00000002)
		.field static public literal valuetype Avalon.Test.CoreUI.Trusted.SendMouseInputFlags LeftUp = int32(0x00000004)
		.field static public literal valuetype Avalon.Test.CoreUI.Trusted.SendMouseInputFlags MiddleDown = int32(0x00000020)
		.field static public literal valuetype Avalon.Test.CoreUI.Trusted.SendMouseInputFlags MiddleUp = int32(0x00000040)
		.field static public literal valuetype Avalon.Test.CoreUI.Trusted.SendMouseInputFlags Move = int32(0x00000001)
		.field static public literal valuetype Avalon.Test.CoreUI.Trusted.SendMouseInputFlags RightDown = int32(0x00000008)
		.field static public literal valuetype Avalon.Test.CoreUI.Trusted.SendMouseInputFlags RightUp = int32(0x00000010)
		.field static public literal valuetype Avalon.Test.CoreUI.Trusted.SendMouseInputFlags Wheel = int32(0x00000800)
		.field static public literal valuetype Avalon.Test.CoreUI.Trusted.SendMouseInputFlags XDown = int32(0x00000080)
		.field static public literal valuetype Avalon.Test.CoreUI.Trusted.SendMouseInputFlags XUp = int32(0x00000100)
	}
	.class public SetupMetadataException
		extends [mscorlib]System.Exception
	{
		.method public hidebysig specialname 
			instance void .ctor(string msg)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class [mscorlib]System.Runtime.Serialization.SerializationInfo info, valuetype [mscorlib]System.Runtime.Serialization.StreamingContext context)
		{
			ret
		}
	}
	.class public SourceHelper
		extends [mscorlib]System.Object
	{
		.method public static hidebysig 
			class [PresentationCore]System.Windows.Interop.HwndSource CreateHwndSource(int32 width, int32 height, int32 left, int32 top)
		{
			ret
		}
		.method public static hidebysig 
			class [PresentationCore]System.Windows.Interop.HwndSource CreateHwndSource(int32 width, int32 height, int32 left, int32 top, native int parentHwnd)
		{
			ret
		}
		.method public static hidebysig 
			class [PresentationCore]System.Windows.Interop.HwndSource CreateHwndSource(int32 width, int32 height, int32 left, int32 top, native int parentHwnd, bool isChild)
		{
			ret
		}
		.method public static hidebysig 
			class [PresentationCore]System.Windows.Interop.HwndSource CreateHwndSource(int32 width, int32 height, int32 left, int32 top, native int parentHwnd, bool isChild, int32 windowStyle)
		{
			.permissionset assert = (2E 01 7F 53 79 73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E 50 65 72 6D 69 73 73 69 6F 6E 53 65 74 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 32 2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36 31 39 33 34 65 30 38 39 12 01 54 0E 04 4E 61 6D 65 09 46 75 6C 6C 54 72 75 73 74)
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public abstract Surface
		extends [mscorlib]System.Object
	{
		.method public static hidebysig 
			void RegisterSurface(string surfaceName, class [mscorlib]System.Type surfaceType)
		{
			ret
		}
		.method public static hidebysig 
			bool IsSurfaceRegistered(string surfaceName)
		{
			ret
		}
		.method public static hidebysig 
			bool IsSurfaceRegistered(class [mscorlib]System.Type surfaceType)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(object objectSurface)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string typeOfSurface, int32 left, int32 top, int32 width, int32 height)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string typeOfSurface, int32 left, int32 top, int32 width, int32 height, bool visibleSurface)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void Close()
		{
			ret
		}
		.method public virtual hidebysig newslot abstract 
			instance valuetype [WindowsBase]System.Windows.Point DeviceUnitsFromMeasureUnits(valuetype [WindowsBase]System.Windows.Point point)
		{
		}
		.method public virtual hidebysig newslot 
			instance void DisplayObject(object visual)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void GoBack()
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void GoForward()
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void ForceActivation()
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance class [PresentationCore]System.Windows.PresentationSource GetPresentationSource()
		{
			ret
		}
		.method public virtual hidebysig newslot abstract 
			instance valuetype [WindowsBase]System.Windows.Point MeasureUnitsFromDeviceUnits(valuetype [WindowsBase]System.Windows.Point devicePoint)
		{
		}
		.method public virtual hidebysig newslot 
			instance void SetPosition(int32 left, int32 top)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance bool SetSize(int32 width, int32 height)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance bool SetSizePixels(int32 width, int32 height)
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void Show()
		{
			ret
		}
		.method public virtual hidebysig newslot 
			instance void ShowModal()
		{
			ret
		}
		.method public hidebysig specialname 
			instance native int get_Handle()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_Height()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_HeightPixels()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsClosed()
		{
			ret
		}
		.method public hidebysig specialname 
			instance bool get_IsVisible()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_Left()
		{
			ret
		}
		.method public hidebysig specialname 
			instance object get_RootDisplayedObject()
		{
			ret
		}
		.method public hidebysig specialname 
			instance object get_SurfaceObject()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_Top()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_Width()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_WidthPixels()
		{
			ret
		}
		.method public static hidebysig 
			void Log(string s)
		{
			ret
		}
		.method family virtual hidebysig newslot abstract 
			instance native int GetHandle()
		{
		}
		.field family bool isModal
		.field family bool isVisible
		.field family object rootDisplayedObject
		.field family object surfaceObject
		.property instance native int Handle()
		{
			.get instance native int Avalon.Test.CoreUI.Trusted.Surface::get_Handle()
		}
		.property instance int32 Height()
		{
			.get instance int32 Avalon.Test.CoreUI.Trusted.Surface::get_Height()
		}
		.property instance int32 HeightPixels()
		{
			.get instance int32 Avalon.Test.CoreUI.Trusted.Surface::get_HeightPixels()
		}
		.property instance bool IsClosed()
		{
			.get instance bool Avalon.Test.CoreUI.Trusted.Surface::get_IsClosed()
		}
		.property instance bool IsVisible()
		{
			.get instance bool Avalon.Test.CoreUI.Trusted.Surface::get_IsVisible()
		}
		.property instance int32 Left()
		{
			.get instance int32 Avalon.Test.CoreUI.Trusted.Surface::get_Left()
		}
		.property instance object RootDisplayedObject()
		{
			.get instance object Avalon.Test.CoreUI.Trusted.Surface::get_RootDisplayedObject()
		}
		.property instance object SurfaceObject()
		{
			.get instance object Avalon.Test.CoreUI.Trusted.Surface::get_SurfaceObject()
		}
		.property instance int32 Top()
		{
			.get instance int32 Avalon.Test.CoreUI.Trusted.Surface::get_Top()
		}
		.property instance int32 Width()
		{
			.get instance int32 Avalon.Test.CoreUI.Trusted.Surface::get_Width()
		}
		.property instance int32 WidthPixels()
		{
			.get instance int32 Avalon.Test.CoreUI.Trusted.Surface::get_WidthPixels()
		}
	}
	.class public SurfaceCore
		extends Avalon.Test.CoreUI.Trusted.Surface
	{
		.method public hidebysig specialname 
			instance void .ctor(object objectSurface)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string typeOfSurface, int32 left, int32 top, int32 width, int32 height)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string typeOfSurface, int32 left, int32 top, int32 width, int32 height, bool visibleSurface)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void Close()
		{
			ret
		}
		.method family hidebysig 
			instance void HookWindowMessages(native int handle, string friendlyName)
		{
			.permissionset assert = (2E 01 7F 53 79 73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E 50 65 72 6D 69 73 73 69 6F 6E 53 65 74 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 32 2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36 31 39 33 34 65 30 38 39 12 01 54 0E 04 4E 61 6D 65 09 46 75 6C 6C 54 72 75 73 74)
			ret
		}
		.method public virtual hidebysig 
			instance void ForceActivation()
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance void ForceActivationCore(native int handle)
		{
			ret
		}
		.method public virtual hidebysig 
			instance valuetype [WindowsBase]System.Windows.Point DeviceUnitsFromMeasureUnits(valuetype [WindowsBase]System.Windows.Point point)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void DisplayObject(object visual)
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [PresentationCore]System.Windows.PresentationSource GetPresentationSource()
		{
			ret
		}
		.method public virtual hidebysig 
			instance valuetype [WindowsBase]System.Windows.Point MeasureUnitsFromDeviceUnits(valuetype [WindowsBase]System.Windows.Point devicePoint)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void SetPosition(int32 left, int32 top)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool SetSize(int32 width, int32 height)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool SetSizePixels(int32 width, int32 height)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void Show()
		{
			ret
		}
		.method family virtual hidebysig 
			instance native int GetHandle()
		{
			ret
		}
	}
	.class public SurfaceFramework
		extends Avalon.Test.CoreUI.Trusted.SurfaceCore
	{
		.method public hidebysig specialname 
			instance void .ctor(object objectSurface)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string typeOfSurface, int32 left, int32 top, int32 width, int32 height)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string typeOfSurface, int32 left, int32 top, int32 width, int32 height, bool visibleSurface)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void Close()
		{
			ret
		}
		.method public virtual hidebysig 
			instance valuetype [WindowsBase]System.Windows.Point DeviceUnitsFromMeasureUnits(valuetype [WindowsBase]System.Windows.Point point)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void DisplayObject(object visual)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void GoBack()
		{
			ret
		}
		.method public virtual hidebysig 
			instance void GoForward()
		{
			ret
		}
		.method public virtual hidebysig 
			instance void ForceActivation()
		{
			ret
		}
		.method public virtual hidebysig 
			instance class [PresentationCore]System.Windows.PresentationSource GetPresentationSource()
		{
			ret
		}
		.method public virtual hidebysig 
			instance valuetype [WindowsBase]System.Windows.Point MeasureUnitsFromDeviceUnits(valuetype [WindowsBase]System.Windows.Point devicePoint)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void SetPosition(int32 left, int32 top)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool SetSize(int32 width, int32 height)
		{
			ret
		}
		.method public virtual hidebysig 
			instance bool SetSizePixels(int32 width, int32 height)
		{
			ret
		}
		.method public virtual hidebysig 
			instance void Show()
		{
			ret
		}
		.method public virtual hidebysig 
			instance void ShowModal()
		{
			ret
		}
		.method family virtual hidebysig 
			instance native int GetHandle()
		{
			.permissionset assert = (2E 01 7E 53 79 73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E 55 49 50 65 72 6D 69 73 73 69 6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 32 2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36 31 39 33 34 65 30 38 39 11 01 54 02 0C 55 6E 72 65 73 74 72 69 63 74 65 64 01)
			ret
		}
	}
	.class public SynchronizedObject
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public TestCaseAreaAttribute
		extends [mscorlib]System.Attribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = { int32(68) property bool Inherited = bool(false) property bool AllowMultiple = bool(false) }
		.method public hidebysig specialname 
			instance void .ctor(string Area)
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Area()
		{
			ret
		}
		.property instance string Area()
		{
			.get instance string Avalon.Test.CoreUI.Trusted.TestCaseAreaAttribute::get_Area()
		}
	}
	.class public TestCaseAttribute
		extends [mscorlib]System.Attribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = { int32(64) property bool Inherited = bool(false) property bool AllowMultiple = bool(true) }
		.method public hidebysig specialname 
			instance void .ctor(string priority, string area, valuetype [TestRuntime]Microsoft.Test.Discovery.Adaptors.TestCaseSecurityLevel securityLevel, string title)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string priority, string area, string title)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string priority, string area, string paramsstr, string title)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string priority, string area, string paramsstr, valuetype [TestRuntime]Microsoft.Test.Discovery.Adaptors.TestCaseSecurityLevel securityLevel, string title)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string priority, string area, string paramsstr, string disabled, string title)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string priority, string area, string paramsstr, string disabled, valuetype [TestRuntime]Microsoft.Test.Discovery.Adaptors.TestCaseSecurityLevel securityLevel, string title)
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Area()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Priority()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Disabled()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Title()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Params()
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [TestRuntime]Microsoft.Test.Discovery.Adaptors.TestCaseSecurityLevel get_SecurityLevel()
		{
			ret
		}
		.property instance string Area()
		{
			.get instance string Avalon.Test.CoreUI.Trusted.TestCaseAttribute::get_Area()
		}
		.property instance string Disabled()
		{
			.get instance string Avalon.Test.CoreUI.Trusted.TestCaseAttribute::get_Disabled()
		}
		.property instance string Params()
		{
			.get instance string Avalon.Test.CoreUI.Trusted.TestCaseAttribute::get_Params()
		}
		.property instance string Priority()
		{
			.get instance string Avalon.Test.CoreUI.Trusted.TestCaseAttribute::get_Priority()
		}
		.property instance valuetype [TestRuntime]Microsoft.Test.Discovery.Adaptors.TestCaseSecurityLevel SecurityLevel()
		{
			.get instance valuetype [TestRuntime]Microsoft.Test.Discovery.Adaptors.TestCaseSecurityLevel Avalon.Test.CoreUI.Trusted.TestCaseAttribute::get_SecurityLevel()
		}
		.property instance string Title()
		{
			.get instance string Avalon.Test.CoreUI.Trusted.TestCaseAttribute::get_Title()
		}
	}
	.class public TestCaseContainerAttribute
		extends Avalon.Test.CoreUI.Trusted.TestCaseAttribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = { int32(64) property bool Inherited = bool(false) property bool AllowMultiple = bool(true) }
		.method public hidebysig specialname 
			instance void .ctor(string containerName, string containerHostType, string priority, string area, string title)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string containerName, string containerHostType, string priority, string area, valuetype [TestRuntime]Microsoft.Test.Discovery.Adaptors.TestCaseSecurityLevel securityLevel, string title)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string containerName, string containerHostType, string priority, string area, string paramsstr, string title)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string containerName, string containerHostType, string priority, string area, string paramsstr, valuetype [TestRuntime]Microsoft.Test.Discovery.Adaptors.TestCaseSecurityLevel securityLevel, string title)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string containerName, string containerHostType, string priority, string area, string paramsstr, string disabled, string title)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string containerName, string containerHostType, string priority, string area, string paramsstr, string disabled, valuetype [TestRuntime]Microsoft.Test.Discovery.Adaptors.TestCaseSecurityLevel securityLevel, string title)
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_ContainerName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_ContainerHostType()
		{
			ret
		}
		.property instance string ContainerHostType()
		{
			.get instance string Avalon.Test.CoreUI.Trusted.TestCaseContainerAttribute::get_ContainerHostType()
		}
		.property instance string ContainerName()
		{
			.get instance string Avalon.Test.CoreUI.Trusted.TestCaseContainerAttribute::get_ContainerName()
		}
	}
	.class public TestCaseDisabledAttribute
		extends [mscorlib]System.Attribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = { int32(68) property bool Inherited = bool(false) property bool AllowMultiple = bool(false) }
		.method public hidebysig specialname 
			instance void .ctor(string Disable)
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Disabled()
		{
			ret
		}
		.property instance string Disabled()
		{
			.get instance string Avalon.Test.CoreUI.Trusted.TestCaseDisabledAttribute::get_Disabled()
		}
	}
	.class public TestCaseHostedModelAttribute
		extends Avalon.Test.CoreUI.Trusted.TestCaseAttribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = { int32(4) property bool Inherited = bool(false) property bool AllowMultiple = bool(true) }
		.method public hidebysig specialname 
			instance void .ctor(string containerName, string containerHostType, string xtcFileName, string priority, string area)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string containerName, string containerHostType, string xtcFileName, string priority, string area, string title)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string containerName, string containerHostType, string xtcFileName, string priority, string area, valuetype [TestRuntime]Microsoft.Test.Discovery.Adaptors.TestCaseSecurityLevel securityLevel, string title)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string containerName, string containerHostType, string xtcFileName, string priority, string area, string paramsString, string disabled, valuetype [TestRuntime]Microsoft.Test.Discovery.Adaptors.TestCaseSecurityLevel securityLevel, string title)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string containerName, string containerHostType, string xtcFileName, int32 modelStart, int32 modelEnd, string priority, string area, string title)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string containerName, string containerHostType, string xtcFileName, int32 modelStart, int32 modelEnd, string priority, string area, valuetype [TestRuntime]Microsoft.Test.Discovery.Adaptors.TestCaseSecurityLevel securityLevel, string title)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string containerName, string containerHostType, string xtcFileName, int32 modelStart, int32 modelEnd, string priority, string area, string paramsstr, string title)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string containerName, string containerHostType, string xtcFileName, int32 modelStart, int32 modelEnd, string priority, string area, string paramsstr, string disabled, string title)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string containerName, string containerHostType, string xtcFileName, int32 modelStart, int32 modelEnd, string priority, string area, string paramsstr, string disabled, valuetype [TestRuntime]Microsoft.Test.Discovery.Adaptors.TestCaseSecurityLevel securityLevel, string title)
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_ContainerName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_ContainerHostType()
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_XtcFileName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ModelStart()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ModelEnd()
		{
			ret
		}
		.property instance string ContainerHostType()
		{
			.get instance string Avalon.Test.CoreUI.Trusted.TestCaseHostedModelAttribute::get_ContainerHostType()
		}
		.property instance string ContainerName()
		{
			.get instance string Avalon.Test.CoreUI.Trusted.TestCaseHostedModelAttribute::get_ContainerName()
		}
		.property instance int32 ModelEnd()
		{
			.get instance int32 Avalon.Test.CoreUI.Trusted.TestCaseHostedModelAttribute::get_ModelEnd()
		}
		.property instance int32 ModelStart()
		{
			.get instance int32 Avalon.Test.CoreUI.Trusted.TestCaseHostedModelAttribute::get_ModelStart()
		}
		.property instance string XtcFileName()
		{
			.get instance string Avalon.Test.CoreUI.Trusted.TestCaseHostedModelAttribute::get_XtcFileName()
		}
	}
	.class public TestCaseMethodAttribute
		extends [mscorlib]System.Attribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = { int32(68) property bool Inherited = bool(false) property bool AllowMultiple = bool(false) }
		.method public hidebysig specialname 
			instance void .ctor(string MethodName)
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_MethodName()
		{
			ret
		}
		.property instance string MethodName()
		{
			.get instance string Avalon.Test.CoreUI.Trusted.TestCaseMethodAttribute::get_MethodName()
		}
	}
	.class public TestCaseModelAttribute
		extends Avalon.Test.CoreUI.Trusted.TestCaseAttribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = { int32(4) property bool Inherited = bool(false) property bool AllowMultiple = bool(true) }
		.method public hidebysig specialname 
			instance void .ctor(string xtcFileName, string priority, string area)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string xtcFileName, string priority, string area, string title)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string xtcFileName, string priority, string area, valuetype [TestRuntime]Microsoft.Test.Discovery.Adaptors.TestCaseSecurityLevel securityLevel, string title)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string xtcFileName, string priority, string area, string paramsString, string disabled, valuetype [TestRuntime]Microsoft.Test.Discovery.Adaptors.TestCaseSecurityLevel securityLevel, string title)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string xtcFileName, int32 modelStart, int32 modelEnd, string priority, string area, string title)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string xtcFileName, int32 modelStart, int32 modelEnd, string priority, string area, valuetype [TestRuntime]Microsoft.Test.Discovery.Adaptors.TestCaseSecurityLevel securityLevel, string title)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string xtcFileName, int32 modelStart, int32 modelEnd, string priority, string area, string paramsstr, string title)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string xtcFileName, int32 modelStart, int32 modelEnd, string priority, string area, string paramsstr, string disabled, string title)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string xtcFileName, int32 modelStart, int32 modelEnd, string priority, string area, string paramsstr, string disabled, valuetype [TestRuntime]Microsoft.Test.Discovery.Adaptors.TestCaseSecurityLevel securityLevel, string title)
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_XtcFileName()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ModelStart()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_ModelEnd()
		{
			ret
		}
		.property instance int32 ModelEnd()
		{
			.get instance int32 Avalon.Test.CoreUI.Trusted.TestCaseModelAttribute::get_ModelEnd()
		}
		.property instance int32 ModelStart()
		{
			.get instance int32 Avalon.Test.CoreUI.Trusted.TestCaseModelAttribute::get_ModelStart()
		}
		.property instance string XtcFileName()
		{
			.get instance string Avalon.Test.CoreUI.Trusted.TestCaseModelAttribute::get_XtcFileName()
		}
	}
	.class public TestCaseParamsAttribute
		extends [mscorlib]System.Attribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = { int32(68) property bool Inherited = bool(false) property bool AllowMultiple = bool(false) }
		.method public hidebysig specialname 
			instance void .ctor(string Params)
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Params()
		{
			ret
		}
		.property instance string Params()
		{
			.get instance string Avalon.Test.CoreUI.Trusted.TestCaseParamsAttribute::get_Params()
		}
	}
	.class public TestCasePriorityAttribute
		extends [mscorlib]System.Attribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = { int32(68) property bool Inherited = bool(false) property bool AllowMultiple = bool(false) }
		.method public hidebysig specialname 
			instance void .ctor(string Priority)
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Priority()
		{
			ret
		}
		.property instance string Priority()
		{
			.get instance string Avalon.Test.CoreUI.Trusted.TestCasePriorityAttribute::get_Priority()
		}
	}
	.class public TestCaseSecurityLevelAttribute
		extends [mscorlib]System.Attribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = { int32(68) property bool Inherited = bool(false) property bool AllowMultiple = bool(false) }
		.method public hidebysig specialname 
			instance void .ctor(valuetype [TestRuntime]Microsoft.Test.Discovery.Adaptors.TestCaseSecurityLevel securityLevel)
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [TestRuntime]Microsoft.Test.Discovery.Adaptors.TestCaseSecurityLevel get_SecurityLevel()
		{
			ret
		}
		.property instance valuetype [TestRuntime]Microsoft.Test.Discovery.Adaptors.TestCaseSecurityLevel SecurityLevel()
		{
			.get instance valuetype [TestRuntime]Microsoft.Test.Discovery.Adaptors.TestCaseSecurityLevel Avalon.Test.CoreUI.Trusted.TestCaseSecurityLevelAttribute::get_SecurityLevel()
		}
	}
	.class public TestCaseSeedBasedAttribute
		extends Avalon.Test.CoreUI.Trusted.TestCaseAttribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = { int32(68) property bool Inherited = bool(false) property bool AllowMultiple = bool(true) }
		.method public hidebysig specialname 
			instance void .ctor(int32 seedStart, int32 seedEnd, string priority, string area, string title)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(int32 seedStart, int32 seedEnd, string priority, string area, valuetype [TestRuntime]Microsoft.Test.Discovery.Adaptors.TestCaseSecurityLevel securityLevel, string title)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(int32 seedStart, int32 seedEnd, string priority, string area, string paramsstr, string title)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(int32 seedStart, int32 seedEnd, string priority, string area, string paramsstr, valuetype [TestRuntime]Microsoft.Test.Discovery.Adaptors.TestCaseSecurityLevel securityLevel, string title)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(int32 seedStart, int32 seedEnd, string priority, string area, string paramsstr, string disabled, string title)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(int32 seedStart, int32 seedEnd, string priority, string area, string paramsstr, string disabled, valuetype [TestRuntime]Microsoft.Test.Discovery.Adaptors.TestCaseSecurityLevel securityLevel, string title)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_SeedStart()
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_SeedEnd()
		{
			ret
		}
		.property instance int32 SeedEnd()
		{
			.get instance int32 Avalon.Test.CoreUI.Trusted.TestCaseSeedBasedAttribute::get_SeedEnd()
		}
		.property instance int32 SeedStart()
		{
			.get instance int32 Avalon.Test.CoreUI.Trusted.TestCaseSeedBasedAttribute::get_SeedStart()
		}
	}
	.class public TestCaseSupportFileAttribute
		extends [mscorlib]System.Attribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = { int32(68) property bool Inherited = bool(false) property bool AllowMultiple = bool(true) }
		.method public hidebysig specialname 
			instance void .ctor(string fileName)
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_FileName()
		{
			ret
		}
		.property instance string FileName()
		{
			.get instance string Avalon.Test.CoreUI.Trusted.TestCaseSupportFileAttribute::get_FileName()
		}
	}
	.class public TestCaseTimeoutAttribute
		extends [mscorlib]System.Attribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = { int32(68) property bool Inherited = bool(false) property bool AllowMultiple = bool(false) }
		.method public hidebysig specialname 
			instance void .ctor(string TimeOut)
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_TimeOut()
		{
			ret
		}
		.property instance string TimeOut()
		{
			.get instance string Avalon.Test.CoreUI.Trusted.TestCaseTimeoutAttribute::get_TimeOut()
		}
	}
	.class public TestCaseTitleAttribute
		extends [mscorlib]System.Attribute
	{
		.custom instance void [mscorlib]System.AttributeUsageAttribute::.ctor(valuetype [mscorlib]System.AttributeTargets) = { int32(68) property bool Inherited = bool(false) property bool AllowMultiple = bool(false) }
		.method public hidebysig specialname 
			instance void .ctor(string title)
		{
			ret
		}
		.method public hidebysig specialname 
			instance string get_Title()
		{
			ret
		}
		.property instance string Title()
		{
			.get instance string Avalon.Test.CoreUI.Trusted.TestCaseTitleAttribute::get_Title()
		}
	}
	.class public TestContainer
		extends [mscorlib]System.Object
	{
		.method public hidebysig 
			instance void CreateStorageRoot(string filename)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig 
			instance class [mscorlib]'System.IO.Stream' CreateStream(string filename)
		{
			ret
		}
		.method public hidebysig 
			instance class [mscorlib]'System.IO.Stream' OpenStream()
		{
			ret
		}
		.method public hidebysig 
			instance void CloseStream()
		{
			ret
		}
		.field public string filename
		.field public class [WindowsBase]'System.IO.Packaging.StreamInfo' stInfo
		.field public class [TestRuntime]Microsoft.Test.Container.StorageRootWrapper stRoot
		.field public class [mscorlib]'System.IO.Stream' strm
	}
	.class public TestCursorSafeHandle
		extends [mscorlib]System.Runtime.InteropServices.SafeHandle
	{
		.permissionset assert = (2E 01 7F 53 79 73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E 50 65 72 6D 69 73 73 69 6F 6E 53 65 74 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 32 2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36 31 39 33 34 65 30 38 39 12 01 54 0E 04 4E 61 6D 65 09 46 75 6C 6C 54 72 75 73 74)
		.method public hidebysig specialname 
			instance void .ctor(native int handle)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(native int handle, bool ownHandle)
		{
			ret
		}
		.method public virtual hidebysig specialname 
			instance bool get_IsInvalid()
		{
			ret
		}
		.method family virtual hidebysig 
			instance bool ReleaseHandle()
		{
			ret
		}
		.property instance bool IsInvalid()
		{
			.get instance bool Avalon.Test.CoreUI.Trusted.TestCursorSafeHandle::get_IsInvalid()
		}
	}
	.class public TestHwndSource
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance void .ctor(int32 x, int32 y, int32 w, int32 h)
		{
			.permissionset assert = (2E 01 7F 53 79 73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E 50 65 72 6D 69 73 73 69 6F 6E 53 65 74 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 32 2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36 31 39 33 34 65 30 38 39 12 01 54 0E 04 4E 61 6D 65 09 46 75 6C 6C 54 72 75 73 74)
			ret
		}
		.method public hidebysig specialname 
			instance class [PresentationCore]System.Windows.Interop.HwndSource get_Source()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_Source(class [PresentationCore]System.Windows.Interop.HwndSource 'value')
		{
			ret
		}
		.property instance class [PresentationCore]System.Windows.Interop.HwndSource Source()
		{
			.get instance class [PresentationCore]System.Windows.Interop.HwndSource Avalon.Test.CoreUI.Trusted.TestHwndSource::get_Source()
			.set instance void Avalon.Test.CoreUI.Trusted.TestHwndSource::set_Source(class [PresentationCore]System.Windows.Interop.HwndSource)
		}
	}
	.class public Utility
		extends [mscorlib]System.Object
	{
		.method public static hidebysig specialname 
			string get_TempDir()
		{
			ret
		}
		.method public static hidebysig 
			class [mscorlib]System.Collections.SortedList ParseArgs(string args)
		{
			ret
		}
		.method public static hidebysig 
			class [mscorlib]System.Collections.SortedList ParseFromStringToStringArray(string arg, bool keepCase)
		{
			ret
		}
		.method public static hidebysig 
			string[] ParseArgsSpaceString(string arg)
		{
			ret
		}
		.method public static hidebysig 
			class [mscorlib]System.Collections.SortedList ParseArgs(string[] args)
		{
			ret
		}
		.method public static hidebysig 
			class [mscorlib]System.Collections.SortedList ParseArgs(string[] args, bool keepCase)
		{
			ret
		}
		.method public static hidebysig 
			class [mscorlib]System.Collections.SortedList ParseArgs(string[] args, bool keepSwitchCase, bool keepValueCase)
		{
			ret
		}
		.method public static hidebysig 
			class [mscorlib]System.Collections.SortedList ParseArgs(string[] args, bool keepSwitchCase, bool keepValueCase, string delimiter)
		{
			ret
		}
		.method public static hidebysig 
			int32 RunWin32Process(string processRelPath, string cmdLine, string workingDirectory)
		{
			ret
		}
		.method public static hidebysig 
			void WriteLineWithColor(string message, valuetype [mscorlib]System.ConsoleColor color)
		{
			ret
		}
		.method public static hidebysig specialname 
			class [mscorlib]'System.Collections.Generic.Dictionary`2'<string,class [mscorlib]System.Type> get_CoreTestTypes()
		{
			ret
		}
		.method public static hidebysig 
			class [mscorlib]System.Type FindType(string typeName, string assemblyName, bool searchFullName)
		{
			ret
		}
		.method public static hidebysig 
			class [mscorlib]System.Type FindType(string typeName, bool searchFullName)
		{
			ret
		}
		.method public static hidebysig 
			class [mscorlib]'System.Collections.Generic.Dictionary`2'<string,class [mscorlib]System.Type> FindTypes(class [mscorlib]'System.Collections.Generic.List`1'<string> typeNames, bool searchFullName)
		{
			ret
		}
		.method public static hidebysig 
			class [mscorlib]System.Type FindType(class [mscorlib]'System.Collections.Generic.List`1'<class [mscorlib]System.Type> types, string typeName, bool searchFullName)
		{
			ret
		}
		.method public static hidebysig 
			class [mscorlib]'System.Collections.Generic.Dictionary`2'<string,class [mscorlib]System.Type> FindTypes(class [mscorlib]'System.Collections.Generic.List`1'<class [mscorlib]System.Type> types, class [mscorlib]'System.Collections.Generic.List`1'<string> typeNames, bool searchFullName)
		{
			ret
		}
		.method public static hidebysig 
			class [mscorlib]'System.Collections.Generic.List`1'<class [mscorlib]System.Type> GetAssemblyTypes(class [mscorlib]System.Reflection.Assembly 'assembly')
		{
			.permissionset assert = (2E 01 7F 53 79 73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E 50 65 72 6D 69 73 73 69 6F 6E 53 65 74 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 32 2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36 31 39 33 34 65 30 38 39 12 01 54 0E 04 4E 61 6D 65 09 46 75 6C 6C 54 72 75 73 74)
			ret
		}
		.method public static hidebysig 
			class [mscorlib]'System.Collections.Generic.List`1'<class [mscorlib]System.Type> GetAssemblyTypes(string assemblyName)
		{
			.permissionset assert = (2E 01 7F 53 79 73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E 50 65 72 6D 69 73 73 69 6F 6E 53 65 74 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 32 2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36 31 39 33 34 65 30 38 39 12 01 54 0E 04 4E 61 6D 65 09 46 75 6C 6C 54 72 75 73 74)
			ret
		}
		.method public static hidebysig 
			void AddAttributeToTypeDescriptor(class [mscorlib]System.Type 'type', class [mscorlib]System.Attribute attribute)
		{
			.permissionset assert = (2E 01 7F 53 79 73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E 50 65 72 6D 69 73 73 69 6F 6E 53 65 74 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 32 2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36 31 39 33 34 65 30 38 39 12 01 54 0E 04 4E 61 6D 65 09 46 75 6C 6C 54 72 75 73 74)
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.property class [mscorlib]'System.Collections.Generic.Dictionary`2'<string,class [mscorlib]System.Type> CoreTestTypes()
		{
			.get class [mscorlib]'System.Collections.Generic.Dictionary`2'<string,class [mscorlib]System.Type> Avalon.Test.CoreUI.Trusted.Utility::get_CoreTestTypes()
		}
		.property string TempDir()
		{
			.get string Avalon.Test.CoreUI.Trusted.Utility::get_TempDir()
		}
	}
	.class public VKeys
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.field static public literal uint8 Accept = uint8(0x1E)
		.field static public literal uint8 Add = uint8(0x6B)
		.field static public literal uint8 Apps = uint8(0x5D)
		.field static public literal uint8 Attn = uint8(0xF6)
		.field static public literal uint8 Back = uint8(0x08)
		.field static public literal uint8 BrowserBack = uint8(0xA6)
		.field static public literal uint8 BrowserFavorites = uint8(0xAB)
		.field static public literal uint8 BrowserForward = uint8(0xA7)
		.field static public literal uint8 BrowserHome = uint8(0xAC)
		.field static public literal uint8 BrowserRefresh = uint8(0xA8)
		.field static public literal uint8 BrowserSearch = uint8(0xAA)
		.field static public literal uint8 BrowserStop = uint8(0xA9)
		.field static public literal uint8 Cancel = uint8(0x03)
		.field static public literal uint8 Capital = uint8(0x14)
		.field static public literal uint8 Clear = uint8(0x0C)
		.field static public literal uint8 Control = uint8(0x11)
		.field static public literal uint8 Convert = uint8(0x1C)
		.field static public literal uint8 CrSel = uint8(0xF7)
		.field static public literal uint8 Decimal = uint8(0x6E)
		.field static public literal uint8 Delete = uint8(0x2E)
		.field static public literal uint8 Divide = uint8(0x6F)
		.field static public literal uint8 Down = uint8(0x28)
		.field static public literal uint8 End = uint8(0x23)
		.field static public literal uint8 ErEof = uint8(0xF9)
		.field static public literal uint8 Escape = uint8(0x1B)
		.field static public literal uint8 ExSel = uint8(0xF8)
		.field static public literal uint8 Execute = uint8(0x2B)
		.field static public literal uint8 F1 = uint8(0x70)
		.field static public literal uint8 F10 = uint8(0x79)
		.field static public literal uint8 F11 = uint8(0x7A)
		.field static public literal uint8 F12 = uint8(0x7B)
		.field static public literal uint8 F13 = uint8(0x7C)
		.field static public literal uint8 F14 = uint8(0x7D)
		.field static public literal uint8 F15 = uint8(0x7E)
		.field static public literal uint8 F16 = uint8(0x7F)
		.field static public literal uint8 F17 = uint8(0x80)
		.field static public literal uint8 F18 = uint8(0x81)
		.field static public literal uint8 F19 = uint8(0x82)
		.field static public literal uint8 F2 = uint8(0x71)
		.field static public literal uint8 F20 = uint8(0x83)
		.field static public literal uint8 F21 = uint8(0x84)
		.field static public literal uint8 F22 = uint8(0x85)
		.field static public literal uint8 F23 = uint8(0x86)
		.field static public literal uint8 F24 = uint8(0x87)
		.field static public literal uint8 F3 = uint8(0x72)
		.field static public literal uint8 F4 = uint8(0x73)
		.field static public literal uint8 F5 = uint8(0x74)
		.field static public literal uint8 F6 = uint8(0x75)
		.field static public literal uint8 F7 = uint8(0x76)
		.field static public literal uint8 F8 = uint8(0x77)
		.field static public literal uint8 F9 = uint8(0x78)
		.field static public literal uint8 Final = uint8(0x18)
		.field static public literal uint8 Hangeul = uint8(0x15)
		.field static public literal uint8 Hangul = uint8(0x15)
		.field static public literal uint8 Hanja = uint8(0x19)
		.field static public literal uint8 Help = uint8(0x2F)
		.field static public literal uint8 Home = uint8(0x24)
		.field static public literal uint8 Ico00 = uint8(0xE4)
		.field static public literal uint8 IcoClear = uint8(0xE6)
		.field static public literal uint8 IcoHelp = uint8(0xE3)
		.field static public literal uint8 Insert = uint8(0x2D)
		.field static public literal uint8 Junja = uint8(0x17)
		.field static public literal uint8 Kana = uint8(0x15)
		.field static public literal uint8 Kanji = uint8(0x19)
		.field static public literal uint8 LButton = uint8(0x01)
		.field static public literal uint8 LControl = uint8(0xA2)
		.field static public literal uint8 LShift = uint8(0xA0)
		.field static public literal uint8 LWin = uint8(0x5B)
		.field static public literal uint8 LaunchApp1 = uint8(0xB6)
		.field static public literal uint8 LaunchApp2 = uint8(0xB7)
		.field static public literal uint8 LaunchMail = uint8(0xB4)
		.field static public literal uint8 LaunchMediaSelect = uint8(0xB5)
		.field static public literal uint8 Left = uint8(0x25)
		.field static public literal uint8 LeftAlt = uint8(0xA4)
		.field static public literal uint8 MButton = uint8(0x04)
		.field static public literal uint8 MediaNextTrack = uint8(0xB0)
		.field static public literal uint8 MediaPlayPause = uint8(0xB3)
		.field static public literal uint8 MediaPrevTrack = uint8(0xB1)
		.field static public literal uint8 MediaStop = uint8(0xB2)
		.field static public literal uint8 Menu = uint8(0x12)
		.field static public literal uint8 ModeChange = uint8(0x1F)
		.field static public literal uint8 Multiply = uint8(0x6A)
		.field static public literal uint8 Next = uint8(0x22)
		.field static public literal uint8 NoName = uint8(0xFC)
		.field static public literal uint8 NonConvert = uint8(0x1D)
		.field static public literal uint8 Numlock = uint8(0x90)
		.field static public literal uint8 Numpad0 = uint8(0x60)
		.field static public literal uint8 Numpad1 = uint8(0x61)
		.field static public literal uint8 Numpad2 = uint8(0x62)
		.field static public literal uint8 Numpad3 = uint8(0x63)
		.field static public literal uint8 Numpad4 = uint8(0x64)
		.field static public literal uint8 Numpad5 = uint8(0x65)
		.field static public literal uint8 Numpad6 = uint8(0x66)
		.field static public literal uint8 Numpad7 = uint8(0x67)
		.field static public literal uint8 Numpad8 = uint8(0x68)
		.field static public literal uint8 Numpad9 = uint8(0x69)
		.field static public literal uint8 Oem1 = uint8(0xBA)
		.field static public literal uint8 Oem102 = uint8(0xE2)
		.field static public literal uint8 Oem2 = uint8(0xBF)
		.field static public literal uint8 Oem3 = uint8(0xC0)
		.field static public literal uint8 Oem4 = uint8(0xDB)
		.field static public literal uint8 Oem5 = uint8(0xDC)
		.field static public literal uint8 Oem6 = uint8(0xDD)
		.field static public literal uint8 Oem7 = uint8(0xDE)
		.field static public literal uint8 Oem8 = uint8(0xDF)
		.field static public literal uint8 OemAttn = uint8(0xF0)
		.field static public literal uint8 OemAuto = uint8(0xF3)
		.field static public literal uint8 OemAx = uint8(0xE1)
		.field static public literal uint8 OemBackTab = uint8(0xF5)
		.field static public literal uint8 OemClear = uint8(0xFE)
		.field static public literal uint8 OemComma = uint8(0xBC)
		.field static public literal uint8 OemCopy = uint8(0xF2)
		.field static public literal uint8 OemCuSel = uint8(0xEF)
		.field static public literal uint8 OemEnlw = uint8(0xF4)
		.field static public literal uint8 OemFinish = uint8(0xF1)
		.field static public literal uint8 OemFjJisho = uint8(0x92)
		.field static public literal uint8 OemFjLoya = uint8(0x95)
		.field static public literal uint8 OemFjMasshou = uint8(0x93)
		.field static public literal uint8 OemFjRoya = uint8(0x96)
		.field static public literal uint8 OemFjTouroku = uint8(0x94)
		.field static public literal uint8 OemJump = uint8(0xEA)
		.field static public literal uint8 OemMinus = uint8(0xBD)
		.field static public literal uint8 OemNecEqual = uint8(0x92)
		.field static public literal uint8 OemPa1 = uint8(0xEB)
		.field static public literal uint8 OemPa2 = uint8(0xEC)
		.field static public literal uint8 OemPa3 = uint8(0xED)
		.field static public literal uint8 OemPeriod = uint8(0xBE)
		.field static public literal uint8 OemPlus = uint8(0xBB)
		.field static public literal uint8 OemReset = uint8(0xE9)
		.field static public literal uint8 OemWsCtrl = uint8(0xEE)
		.field static public literal uint8 Pa1 = uint8(0xFD)
		.field static public literal uint8 Packet = uint8(0xE7)
		.field static public literal uint8 Pause = uint8(0x13)
		.field static public literal uint8 Play = uint8(0xFA)
		.field static public literal uint8 Print = uint8(0x2A)
		.field static public literal uint8 Prior = uint8(0x21)
		.field static public literal uint8 ProcessKey = uint8(0xE5)
		.field static public literal uint8 RButton = uint8(0x02)
		.field static public literal uint8 RControl = uint8(0xA3)
		.field static public literal uint8 RShift = uint8(0xA1)
		.field static public literal uint8 RWin = uint8(0x5C)
		.field static public literal uint8 Return = uint8(0x0D)
		.field static public literal uint8 Right = uint8(0x27)
		.field static public literal uint8 RightAlt = uint8(0xA5)
		.field static public literal uint8 Scroll = uint8(0x91)
		.field static public literal uint8 Select = uint8(0x29)
		.field static public literal uint8 Separator = uint8(0x6C)
		.field static public literal uint8 Shift = uint8(0x10)
		.field static public literal uint8 Sleep = uint8(0x5F)
		.field static public literal uint8 Snapshot = uint8(0x2C)
		.field static public literal uint8 Space = uint8(0x20)
		.field static public literal uint8 Subtract = uint8(0x6D)
		.field static public literal uint8 Tab = uint8(0x09)
		.field static public literal uint8 Up = uint8(0x26)
		.field static public literal uint8 Vk0 = uint8(0x30)
		.field static public literal uint8 Vk1 = uint8(0x31)
		.field static public literal uint8 Vk2 = uint8(0x32)
		.field static public literal uint8 Vk3 = uint8(0x33)
		.field static public literal uint8 Vk4 = uint8(0x34)
		.field static public literal uint8 Vk5 = uint8(0x35)
		.field static public literal uint8 Vk6 = uint8(0x36)
		.field static public literal uint8 Vk7 = uint8(0x37)
		.field static public literal uint8 Vk8 = uint8(0x38)
		.field static public literal uint8 Vk9 = uint8(0x39)
		.field static public literal uint8 VkA = uint8(0x41)
		.field static public literal uint8 VkAccept = uint8(0x1E)
		.field static public literal uint8 VkAdd = uint8(0x6B)
		.field static public literal uint8 VkAlt = uint8(0x12)
		.field static public literal uint8 VkApps = uint8(0x5D)
		.field static public literal uint8 VkAttn = uint8(0xF6)
		.field static public literal uint8 VkB = uint8(0x42)
		.field static public literal uint8 VkBack = uint8(0x08)
		.field static public literal uint8 VkBrowserBack = uint8(0xA6)
		.field static public literal uint8 VkBrowserFavorites = uint8(0xAB)
		.field static public literal uint8 VkBrowserForward = uint8(0xA7)
		.field static public literal uint8 VkBrowserHome = uint8(0xAC)
		.field static public literal uint8 VkBrowserRefresh = uint8(0xA8)
		.field static public literal uint8 VkBrowserSearch = uint8(0xAA)
		.field static public literal uint8 VkBrowserStop = uint8(0xA9)
		.field static public literal uint8 VkC = uint8(0x43)
		.field static public literal uint8 VkCancel = uint8(0x03)
		.field static public literal uint8 VkCapital = uint8(0x14)
		.field static public literal uint8 VkClear = uint8(0x0C)
		.field static public literal uint8 VkControl = uint8(0x11)
		.field static public literal uint8 VkConvert = uint8(0x1C)
		.field static public literal uint8 VkCrSel = uint8(0xF7)
		.field static public literal uint8 VkD = uint8(0x44)
		.field static public literal uint8 VkDecimal = uint8(0x6E)
		.field static public literal uint8 VkDelete = uint8(0x2E)
		.field static public literal uint8 VkDivide = uint8(0x6F)
		.field static public literal uint8 VkDown = uint8(0x28)
		.field static public literal uint8 VkE = uint8(0x45)
		.field static public literal uint8 VkEnd = uint8(0x23)
		.field static public literal uint8 VkErEof = uint8(0xF9)
		.field static public literal uint8 VkEscape = uint8(0x1B)
		.field static public literal uint8 VkExSel = uint8(0xF8)
		.field static public literal uint8 VkExecute = uint8(0x2B)
		.field static public literal uint8 VkF = uint8(0x46)
		.field static public literal uint8 VkF1 = uint8(0x70)
		.field static public literal uint8 VkF10 = uint8(0x79)
		.field static public literal uint8 VkF11 = uint8(0x7A)
		.field static public literal uint8 VkF12 = uint8(0x7B)
		.field static public literal uint8 VkF13 = uint8(0x7C)
		.field static public literal uint8 VkF14 = uint8(0x7D)
		.field static public literal uint8 VkF15 = uint8(0x7E)
		.field static public literal uint8 VkF16 = uint8(0x7F)
		.field static public literal uint8 VkF17 = uint8(0x80)
		.field static public literal uint8 VkF18 = uint8(0x81)
		.field static public literal uint8 VkF19 = uint8(0x82)
		.field static public literal uint8 VkF2 = uint8(0x71)
		.field static public literal uint8 VkF20 = uint8(0x83)
		.field static public literal uint8 VkF21 = uint8(0x84)
		.field static public literal uint8 VkF22 = uint8(0x85)
		.field static public literal uint8 VkF23 = uint8(0x86)
		.field static public literal uint8 VkF24 = uint8(0x87)
		.field static public literal uint8 VkF3 = uint8(0x72)
		.field static public literal uint8 VkF4 = uint8(0x73)
		.field static public literal uint8 VkF5 = uint8(0x74)
		.field static public literal uint8 VkF6 = uint8(0x75)
		.field static public literal uint8 VkF7 = uint8(0x76)
		.field static public literal uint8 VkF8 = uint8(0x77)
		.field static public literal uint8 VkF9 = uint8(0x78)
		.field static public literal uint8 VkFinal = uint8(0x18)
		.field static public literal uint8 VkG = uint8(0x47)
		.field static public literal uint8 VkH = uint8(0x48)
		.field static public literal uint8 VkHangul = uint8(0x15)
		.field static public literal uint8 VkHanja = uint8(0x19)
		.field static public literal uint8 VkHelp = uint8(0x2F)
		.field static public literal uint8 VkHome = uint8(0x24)
		.field static public literal uint8 VkI = uint8(0x49)
		.field static public literal uint8 VkIco00 = uint8(0xE4)
		.field static public literal uint8 VkIcoClear = uint8(0xE6)
		.field static public literal uint8 VkIcoHelp = uint8(0xE3)
		.field static public literal uint8 VkInsert = uint8(0x2D)
		.field static public literal uint8 VkJ = uint8(0x4A)
		.field static public literal uint8 VkJunja = uint8(0x17)
		.field static public literal uint8 VkK = uint8(0x4B)
		.field static public literal uint8 VkKana = uint8(0x15)
		.field static public literal uint8 VkKanji = uint8(0x19)
		.field static public literal uint8 VkL = uint8(0x4C)
		.field static public literal uint8 VkLAlt = uint8(0xA4)
		.field static public literal uint8 VkLButton = uint8(0x01)
		.field static public literal uint8 VkLControl = uint8(0xA2)
		.field static public literal uint8 VkLShift = uint8(0xA0)
		.field static public literal uint8 VkLWin = uint8(0x5B)
		.field static public literal uint8 VkLaunchApp1 = uint8(0xB6)
		.field static public literal uint8 VkLaunchApp2 = uint8(0xB7)
		.field static public literal uint8 VkLaunchMail = uint8(0xB4)
		.field static public literal uint8 VkLaunchMediaSelect = uint8(0xB5)
		.field static public literal uint8 VkLeft = uint8(0x25)
		.field static public literal uint8 VkLeftAlt = uint8(0xA4)
		.field static public literal uint8 VkM = uint8(0x4D)
		.field static public literal uint8 VkMButton = uint8(0x04)
		.field static public literal uint8 VkMediaNextTrack = uint8(0xB0)
		.field static public literal uint8 VkMediaPlayPause = uint8(0xB3)
		.field static public literal uint8 VkMediaPrevTrack = uint8(0xB1)
		.field static public literal uint8 VkMediaStop = uint8(0xB2)
		.field static public literal uint8 VkMenu = uint8(0x12)
		.field static public literal uint8 VkModeChange = uint8(0x1F)
		.field static public literal uint8 VkMultiply = uint8(0x6A)
		.field static public literal uint8 VkN = uint8(0x4E)
		.field static public literal uint8 VkNext = uint8(0x22)
		.field static public literal uint8 VkNoName = uint8(0xFC)
		.field static public literal uint8 VkNonConvert = uint8(0x1D)
		.field static public literal uint8 VkNumlock = uint8(0x90)
		.field static public literal uint8 VkNumpad0 = uint8(0x60)
		.field static public literal uint8 VkNumpad1 = uint8(0x61)
		.field static public literal uint8 VkNumpad2 = uint8(0x62)
		.field static public literal uint8 VkNumpad3 = uint8(0x63)
		.field static public literal uint8 VkNumpad4 = uint8(0x64)
		.field static public literal uint8 VkNumpad5 = uint8(0x65)
		.field static public literal uint8 VkNumpad6 = uint8(0x66)
		.field static public literal uint8 VkNumpad7 = uint8(0x67)
		.field static public literal uint8 VkNumpad8 = uint8(0x68)
		.field static public literal uint8 VkNumpad9 = uint8(0x69)
		.field static public literal uint8 VkO = uint8(0x4F)
		.field static public literal uint8 VkOem1 = uint8(0xBA)
		.field static public literal uint8 VkOem102 = uint8(0xE2)
		.field static public literal uint8 VkOem2 = uint8(0xBF)
		.field static public literal uint8 VkOem3 = uint8(0xC0)
		.field static public literal uint8 VkOem4 = uint8(0xDB)
		.field static public literal uint8 VkOem5 = uint8(0xDC)
		.field static public literal uint8 VkOem6 = uint8(0xDD)
		.field static public literal uint8 VkOem7 = uint8(0xDE)
		.field static public literal uint8 VkOem8 = uint8(0xDF)
		.field static public literal uint8 VkOemAttn = uint8(0xF0)
		.field static public literal uint8 VkOemAuto = uint8(0xF3)
		.field static public literal uint8 VkOemAx = uint8(0xE1)
		.field static public literal uint8 VkOemBackTab = uint8(0xF5)
		.field static public literal uint8 VkOemClear = uint8(0xFE)
		.field static public literal uint8 VkOemComma = uint8(0xBC)
		.field static public literal uint8 VkOemCopy = uint8(0xF2)
		.field static public literal uint8 VkOemCuSel = uint8(0xEF)
		.field static public literal uint8 VkOemEnlw = uint8(0xF4)
		.field static public literal uint8 VkOemFinish = uint8(0xF1)
		.field static public literal uint8 VkOemFjJisho = uint8(0x92)
		.field static public literal uint8 VkOemFjLoya = uint8(0x95)
		.field static public literal uint8 VkOemFjMasshou = uint8(0x93)
		.field static public literal uint8 VkOemFjRoya = uint8(0x96)
		.field static public literal uint8 VkOemFjTouroku = uint8(0x94)
		.field static public literal uint8 VkOemJump = uint8(0xEA)
		.field static public literal uint8 VkOemMinus = uint8(0xBD)
		.field static public literal uint8 VkOemNecEqual = uint8(0x92)
		.field static public literal uint8 VkOemPa1 = uint8(0xEB)
		.field static public literal uint8 VkOemPa2 = uint8(0xEC)
		.field static public literal uint8 VkOemPa3 = uint8(0xED)
		.field static public literal uint8 VkOemPeriod = uint8(0xBE)
		.field static public literal uint8 VkOemPlus = uint8(0xBB)
		.field static public literal uint8 VkOemReset = uint8(0xE9)
		.field static public literal uint8 VkOemWsCtrl = uint8(0xEE)
		.field static public literal uint8 VkP = uint8(0x50)
		.field static public literal uint8 VkPa1 = uint8(0xFD)
		.field static public literal uint8 VkPacket = uint8(0xE7)
		.field static public literal uint8 VkPause = uint8(0x13)
		.field static public literal uint8 VkPlay = uint8(0xFA)
		.field static public literal uint8 VkPrint = uint8(0x2A)
		.field static public literal uint8 VkPrior = uint8(0x21)
		.field static public literal uint8 VkProcessKey = uint8(0xE5)
		.field static public literal uint8 VkQ = uint8(0x51)
		.field static public literal uint8 VkR = uint8(0x52)
		.field static public literal uint8 VkRAlt = uint8(0xA5)
		.field static public literal uint8 VkRButton = uint8(0x02)
		.field static public literal uint8 VkRControl = uint8(0xA3)
		.field static public literal uint8 VkRShift = uint8(0xA1)
		.field static public literal uint8 VkRWin = uint8(0x5C)
		.field static public literal uint8 VkReturn = uint8(0x0D)
		.field static public literal uint8 VkRight = uint8(0x27)
		.field static public literal uint8 VkRightAlt = uint8(0xA5)
		.field static public literal uint8 VkS = uint8(0x53)
		.field static public literal uint8 VkScroll = uint8(0x91)
		.field static public literal uint8 VkSelect = uint8(0x29)
		.field static public literal uint8 VkSeparator = uint8(0x6C)
		.field static public literal uint8 VkShift = uint8(0x10)
		.field static public literal uint8 VkSleep = uint8(0x5F)
		.field static public literal uint8 VkSnapshot = uint8(0x2C)
		.field static public literal uint8 VkSpace = uint8(0x20)
		.field static public literal uint8 VkSubtract = uint8(0x6D)
		.field static public literal uint8 VkT = uint8(0x54)
		.field static public literal uint8 VkTab = uint8(0x09)
		.field static public literal uint8 VkU = uint8(0x55)
		.field static public literal uint8 VkUp = uint8(0x26)
		.field static public literal uint8 VkV = uint8(0x56)
		.field static public literal uint8 VkVolumeDown = uint8(0xAE)
		.field static public literal uint8 VkVolumeMute = uint8(0xAD)
		.field static public literal uint8 VkVolumeUp = uint8(0xAF)
		.field static public literal uint8 VkW = uint8(0x57)
		.field static public literal uint8 VkX = uint8(0x58)
		.field static public literal uint8 VkXButton1 = uint8(0x05)
		.field static public literal uint8 VkXButton2 = uint8(0x06)
		.field static public literal uint8 VkY = uint8(0x59)
		.field static public literal uint8 VkZ = uint8(0x5A)
		.field static public literal uint8 VkZoom = uint8(0xFB)
		.field static public literal uint8 VolumeDown = uint8(0xAE)
		.field static public literal uint8 VolumeMute = uint8(0xAD)
		.field static public literal uint8 VolumeUp = uint8(0xAF)
		.field static public literal uint8 XButton1 = uint8(0x05)
		.field static public literal uint8 XButton2 = uint8(0x06)
		.field static public literal uint8 Zoom = uint8(0xFB)
	}
	.class public WindowResizeHelper
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance void .ctor(class Avalon.Test.CoreUI.Trusted.ResizeHandler r)
		{
			ret
		}
		.method public hidebysig 
			instance void Resize(class Avalon.Test.CoreUI.Trusted.Surface surface, valuetype Avalon.Test.CoreUI.Trusted.ResizeMethod 'method', valuetype Avalon.Test.CoreUI.Trusted.ResizeHandle handle, valuetype Avalon.Test.CoreUI.Trusted.ResizeDirection direction)
		{
			ret
		}
		.method public hidebysig 
			instance void MouseResize(class Avalon.Test.CoreUI.Trusted.Surface surface, valuetype Avalon.Test.CoreUI.Trusted.ResizeHandle handle, valuetype Avalon.Test.CoreUI.Trusted.ResizeDirection direction)
		{
			ret
		}
		.method public hidebysig 
			instance void KeyboardResize(valuetype Avalon.Test.CoreUI.Trusted.ResizeHandle handle, valuetype Avalon.Test.CoreUI.Trusted.ResizeDirection direction)
		{
			ret
		}
		.method public hidebysig 
			instance void ProgrammaticResize(class Avalon.Test.CoreUI.Trusted.Surface surface, valuetype Avalon.Test.CoreUI.Trusted.ResizeDirection direction)
		{
			ret
		}
	}
	.class public abstract sealed WinformsApplicationSW
		extends [mscorlib]System.Object
	{
		.method public static hidebysig 
			void Exit()
		{
			ret
		}
	}
}
.namespace Avalon.Test.CoreUI.Trusted.Controls
{
	.class public sequential sealed AccelTest
		extends [mscorlib]System.ValueType
	{
		.method public hidebysig specialname 
			instance void .ctor(uint8 fVirt, int16 key)
		{
			ret
		}
		.field public uint8 fVirt
		.field public int16 key
	}
	.class public AcceleratorEventArgs
		extends [mscorlib]System.EventArgs
	{
		.method public hidebysig specialname 
			instance void .ctor(valuetype [WindowsBase]System.Windows.Input.Key key)
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [WindowsBase]System.Windows.Input.Key get_TextKey()
		{
			ret
		}
		.property instance valuetype [WindowsBase]System.Windows.Input.Key TextKey()
		{
			.get instance valuetype [WindowsBase]System.Windows.Input.Key Avalon.Test.CoreUI.Trusted.Controls.AcceleratorEventArgs::get_TextKey()
		}
	}
	.class public sealed AcceleratorEventHandler
		extends [mscorlib]System.MulticastDelegate
	{
		.method public hidebysig specialname 
			instance void .ctor(object 'object', native int 'method')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void Invoke(object o, class Avalon.Test.CoreUI.Trusted.Controls.AcceleratorEventArgs args)
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance class [mscorlib]System.IAsyncResult BeginInvoke(object o, class Avalon.Test.CoreUI.Trusted.Controls.AcceleratorEventArgs args, class [mscorlib]System.AsyncCallback callback, object 'object')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void EndInvoke(class [mscorlib]System.IAsyncResult result)
			runtime 
		{
		}
	}
	.class public abstract sealed AccessKeyHelper
		extends [mscorlib]System.Object
	{
		.method public static hidebysig 
			string ConvertKeyToStringForAccessKeyManager(valuetype [WindowsBase]System.Windows.Input.Key key, valuetype [WindowsBase]System.Windows.Input.ModifierKeys modifiers)
		{
			ret
		}
	}
	.class public AvalonHostIsolated
		extends [PresentationFramework]System.Windows.Interop.HwndHost
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method family virtual hidebysig 
			instance valuetype [mscorlib]System.Runtime.InteropServices.HandleRef BuildWindowCore(valuetype [mscorlib]System.Runtime.InteropServices.HandleRef parent)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void DestroyWindowCore(valuetype [mscorlib]System.Runtime.InteropServices.HandleRef hwnd)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void Dispose(bool disposing)
		{
			ret
		}
		.method public hidebysig 
			instance void StopControl()
		{
			ret
		}
		.method family static hidebysig 
			native int Helper(native int window, int32 message, native int firstParam, native int secondParam, bool& handled)
		{
			ret
		}
		.field public class [mscorlib]System.Exception InternalException
		.field static public class [mscorlib]System.Threading.AutoResetEvent _ev
		.field public class [mscorlib]System.Threading.AutoResetEvent evStop
	}
	.class public AvalonHostedControl
		extends [PresentationFramework]System.Windows.Interop.HwndHost
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method family virtual hidebysig 
			instance valuetype [mscorlib]System.Runtime.InteropServices.HandleRef BuildWindowCore(valuetype [mscorlib]System.Runtime.InteropServices.HandleRef parent)
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [PresentationCore]System.Windows.UIElement get_RootUIElement()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_RootUIElement(class [PresentationCore]System.Windows.UIElement 'value')
		{
			ret
		}
		.method family virtual hidebysig 
			instance void DestroyWindowCore(valuetype [mscorlib]System.Runtime.InteropServices.HandleRef hwnd)
		{
			ret
		}
		.method family hidebysig 
			instance void Click(object o, class [PresentationCore]System.Windows.RoutedEventArgs args)
		{
			ret
		}
		.method family hidebysig 
			instance native int Helper(native int window, int32 message, native int firstParam, native int secondParam, bool& handled)
		{
			ret
		}
		.field public native int MainWindow
		.property instance class [PresentationCore]System.Windows.UIElement RootUIElement()
		{
			.get instance class [PresentationCore]System.Windows.UIElement Avalon.Test.CoreUI.Trusted.Controls.AvalonHostedControl::get_RootUIElement()
			.set instance void Avalon.Test.CoreUI.Trusted.Controls.AvalonHostedControl::set_RootUIElement(class [PresentationCore]System.Windows.UIElement)
		}
	}
	.class public AvalonHwndControl
		extends [PresentationFramework]System.Windows.Interop.HwndHost
		implements [WindowsBase]System.Windows.Interop.IKeyboardInputSink
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance bool TranslateAccelerator(valuetype [WindowsBase]'System.Windows.Interop.MSG'& msg, valuetype [WindowsBase]System.Windows.Input.ModifierKeys modifiers)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance bool TabInto(class [WindowsBase]System.Windows.Input.TraversalRequest 'request')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [PresentationCore]System.Windows.Media.Visual get_RootVisual()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_RootVisual(class [PresentationCore]System.Windows.Media.Visual 'value')
		{
			ret
		}
		.method family virtual hidebysig 
			instance valuetype [mscorlib]System.Runtime.InteropServices.HandleRef BuildWindowCore(valuetype [mscorlib]System.Runtime.InteropServices.HandleRef parent)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void DestroyWindowCore(valuetype [mscorlib]System.Runtime.InteropServices.HandleRef hwnd)
		{
			ret
		}
		.property instance class [PresentationCore]System.Windows.Media.Visual RootVisual()
		{
			.get instance class [PresentationCore]System.Windows.Media.Visual Avalon.Test.CoreUI.Trusted.Controls.AvalonHwndControl::get_RootVisual()
			.set instance void Avalon.Test.CoreUI.Trusted.Controls.AvalonHwndControl::set_RootVisual(class [PresentationCore]System.Windows.Media.Visual)
		}
	}
	.class public AvalonHwndHostAvalon
		extends [PresentationFramework]System.Windows.Interop.HwndHost
	{
		.method public hidebysig specialname 
			instance void .ctor(float64 width, float64 height)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_RootVisual(class [PresentationCore]System.Windows.Media.Visual 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [PresentationCore]System.Windows.Media.Visual get_RootVisual()
		{
			ret
		}
		.method family virtual hidebysig 
			instance valuetype [mscorlib]System.Runtime.InteropServices.HandleRef BuildWindowCore(valuetype [mscorlib]System.Runtime.InteropServices.HandleRef hwndParent)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void DestroyWindowCore(valuetype [mscorlib]System.Runtime.InteropServices.HandleRef hwnd)
		{
			ret
		}
		.property instance class [PresentationCore]System.Windows.Media.Visual RootVisual()
		{
			.get instance class [PresentationCore]System.Windows.Media.Visual Avalon.Test.CoreUI.Trusted.Controls.AvalonHwndHostAvalon::get_RootVisual()
			.set instance void Avalon.Test.CoreUI.Trusted.Controls.AvalonHwndHostAvalon::set_RootVisual(class [PresentationCore]System.Windows.Media.Visual)
		}
	}
	.class public AvalonHwndHostHWNDAvalon
		extends [PresentationFramework]System.Windows.Interop.HwndHost
	{
		.method public hidebysig specialname 
			instance void .ctor(float64 width, float64 height)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_RootVisual(class [PresentationCore]System.Windows.Media.Visual 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [PresentationCore]System.Windows.Media.Visual get_RootVisual()
		{
			ret
		}
		.method family virtual hidebysig 
			instance valuetype [mscorlib]System.Runtime.InteropServices.HandleRef BuildWindowCore(valuetype [mscorlib]System.Runtime.InteropServices.HandleRef hwndParent)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void DestroyWindowCore(valuetype [mscorlib]System.Runtime.InteropServices.HandleRef hwnd)
		{
			ret
		}
		.method family hidebysig 
			instance native int Helper(native int window, int32 message, native int firstParam, native int secondParam, bool& handled)
		{
			ret
		}
		.property instance class [PresentationCore]System.Windows.Media.Visual RootVisual()
		{
			.get instance class [PresentationCore]System.Windows.Media.Visual Avalon.Test.CoreUI.Trusted.Controls.AvalonHwndHostHWNDAvalon::get_RootVisual()
			.set instance void Avalon.Test.CoreUI.Trusted.Controls.AvalonHwndHostHWNDAvalon::set_RootVisual(class [PresentationCore]System.Windows.Media.Visual)
		}
	}
	.class public AvalonWindow
		extends [mscorlib]System.Object
		implements Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl
	{
		.method public hidebysig specialname 
			instance void .ctor(bool TabStops, bool Accelerators, bool Mnemonics)
		{
			ret
		}
		.method public hidebysig specialname 
			instance int32 get_KeyDownCount()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_KeyDownCount(int32 'value')
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl.SetFocusToFirstChild()
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl::SetFocusToFirstChild
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl.ResetTestState()
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl::ResetTestState
			ret
		}
		.method private final virtual hidebysig newslot 
			instance int32 Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl.LocalTabStops()
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl::LocalTabStops
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance int32 Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl.get_RecordedLocalTabs()
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl::get_RecordedLocalTabs
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance int32 Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl.get_RecordedUniqueAccelerator()
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl::get_RecordedUniqueAccelerator
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance int32 Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl.get_RecordedCommonAccelerator()
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl::get_RecordedCommonAccelerator
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl.AddMnemonic(string letter, valuetype [WindowsBase]System.Windows.Input.ModifierKeys modifier)
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl::AddMnemonic
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance int32 Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl.get_RecordedMnemonic()
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl::get_RecordedMnemonic
			ret
		}
		.method private final virtual hidebysig newslot 
			instance class Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl.AddChild(string childType)
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl::AddChild
			ret
		}
		.property instance int32 Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl.RecordedCommonAccelerator()
		{
			.get instance int32 Avalon.Test.CoreUI.Trusted.Controls.AvalonWindow::Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl.get_RecordedCommonAccelerator()
		}
		.property instance int32 Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl.RecordedLocalTabs()
		{
			.get instance int32 Avalon.Test.CoreUI.Trusted.Controls.AvalonWindow::Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl.get_RecordedLocalTabs()
		}
		.property instance int32 Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl.RecordedMnemonic()
		{
			.get instance int32 Avalon.Test.CoreUI.Trusted.Controls.AvalonWindow::Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl.get_RecordedMnemonic()
		}
		.property instance int32 Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl.RecordedUniqueAccelerator()
		{
			.get instance int32 Avalon.Test.CoreUI.Trusted.Controls.AvalonWindow::Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl.get_RecordedUniqueAccelerator()
		}
		.property instance int32 KeyDownCount()
		{
			.get instance int32 Avalon.Test.CoreUI.Trusted.Controls.AvalonWindow::get_KeyDownCount()
			.set instance void Avalon.Test.CoreUI.Trusted.Controls.AvalonWindow::set_KeyDownCount(int32)
		}
	}
	.class public CrossAppPointer
		extends [mscorlib]System.MarshalByRefObject
	{
		.method public hidebysig specialname 
			instance void .ctor(native int pointer)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(class Avalon.Test.CoreUI.Trusted.Controls.CrossAppPointer data)
		{
			ret
		}
		.field public native int Handler
	}
	.class public EmptyElement
		extends [PresentationFramework]System.Windows.FrameworkElement
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method family virtual hidebysig 
			instance valuetype [WindowsBase]System.Windows.Size MeasureOverride(valuetype [WindowsBase]System.Windows.Size constraint)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void add_Rendered(class [mscorlib]System.EventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public hidebysig specialname 
			instance void remove_Rendered(class [mscorlib]System.EventHandler 'value')
			synchronized 
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnRender(class [PresentationCore]System.Windows.Media.DrawingContext ctx)
		{
			ret
		}
		.method family virtual hidebysig 
			instance class [PresentationCore]System.Windows.Media.HitTestResult HitTestCore(class [PresentationCore]System.Windows.Media.PointHitTestParameters hitTestParams)
		{
			ret
		}
		.event [mscorlib]System.EventHandler Rendered
		{
			.addon instance void Avalon.Test.CoreUI.Trusted.Controls.EmptyElement::add_Rendered(class [mscorlib]System.EventHandler)
			.removeon instance void Avalon.Test.CoreUI.Trusted.Controls.EmptyElement::remove_Rendered(class [mscorlib]System.EventHandler)
		}
	}
	.class public HostedHwndControl
		extends [PresentationFramework]System.Windows.Interop.HwndHost
		implements [WindowsBase]System.Windows.Interop.IKeyboardInputSink, Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl
	{
		.method public hidebysig specialname 
			instance void .ctor(bool TabStops, bool Accelerators, bool Mnemonics)
		{
			ret
		}
		.method family virtual hidebysig 
			instance valuetype [mscorlib]System.Runtime.InteropServices.HandleRef BuildWindowCore(valuetype [mscorlib]System.Runtime.InteropServices.HandleRef parent)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void DestroyWindowCore(valuetype [mscorlib]System.Runtime.InteropServices.HandleRef hwnd)
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance bool System.Windows.Interop.IKeyboardInputSink.HasFocusWithin()
		{
			.override [WindowsBase]System.Windows.Interop.IKeyboardInputSink::HasFocusWithin
			ret
		}
		.method private final virtual hidebysig newslot 
			instance bool System.Windows.Interop.IKeyboardInputSink.OnMnemonic(valuetype [WindowsBase]'System.Windows.Interop.MSG'& msg, valuetype [WindowsBase]System.Windows.Input.ModifierKeys modifiers)
		{
			.override [WindowsBase]System.Windows.Interop.IKeyboardInputSink::OnMnemonic
			ret
		}
		.method private final virtual hidebysig newslot 
			instance class [WindowsBase]System.Windows.Interop.IKeyboardInputSite System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(class [WindowsBase]System.Windows.Interop.IKeyboardInputSink sink)
		{
			.override [WindowsBase]System.Windows.Interop.IKeyboardInputSink::RegisterKeyboardInputSink
			ret
		}
		.method private final virtual hidebysig newslot 
			instance bool System.Windows.Interop.IKeyboardInputSink.TabInto(class [WindowsBase]System.Windows.Input.TraversalRequest 'request')
		{
			.override [WindowsBase]System.Windows.Interop.IKeyboardInputSink::TabInto
			ret
		}
		.method private final virtual hidebysig newslot 
			instance bool System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(valuetype [WindowsBase]'System.Windows.Interop.MSG'& msg, valuetype [WindowsBase]System.Windows.Input.ModifierKeys modifiers)
		{
			.override [WindowsBase]System.Windows.Interop.IKeyboardInputSink::TranslateAccelerator
			ret
		}
		.method private final virtual hidebysig newslot 
			instance bool System.Windows.Interop.IKeyboardInputSink.TranslateChar(valuetype [WindowsBase]'System.Windows.Interop.MSG'& msg, valuetype [WindowsBase]System.Windows.Input.ModifierKeys modifiers)
		{
			.override [WindowsBase]System.Windows.Interop.IKeyboardInputSink::TranslateChar
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance class [WindowsBase]System.Windows.Interop.IKeyboardInputSite System.Windows.Interop.IKeyboardInputSink.get_KeyboardInputSite()
		{
			.override [WindowsBase]System.Windows.Interop.IKeyboardInputSink::get_KeyboardInputSite
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance void System.Windows.Interop.IKeyboardInputSink.set_KeyboardInputSite(class [WindowsBase]System.Windows.Interop.IKeyboardInputSite 'value')
		{
			.override [WindowsBase]System.Windows.Interop.IKeyboardInputSink::set_KeyboardInputSite
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl.SetFocusToFirstChild()
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl::SetFocusToFirstChild
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl.ResetTestState()
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl::ResetTestState
			ret
		}
		.method private final virtual hidebysig newslot 
			instance int32 Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl.LocalTabStops()
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl::LocalTabStops
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance int32 Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl.get_RecordedLocalTabs()
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl::get_RecordedLocalTabs
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance int32 Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl.get_RecordedUniqueAccelerator()
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl::get_RecordedUniqueAccelerator
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance int32 Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl.get_RecordedCommonAccelerator()
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl::get_RecordedCommonAccelerator
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl.AddMnemonic(string letter, valuetype [WindowsBase]System.Windows.Input.ModifierKeys modifier)
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl::AddMnemonic
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance int32 Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl.get_RecordedMnemonic()
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl::get_RecordedMnemonic
			ret
		}
		.method private final virtual hidebysig newslot 
			instance class Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl.AddChild(string childType)
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl::AddChild
			ret
		}
		.property instance int32 Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl.RecordedCommonAccelerator()
		{
			.get instance int32 Avalon.Test.CoreUI.Trusted.Controls.HostedHwndControl::Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl.get_RecordedCommonAccelerator()
		}
		.property instance int32 Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl.RecordedLocalTabs()
		{
			.get instance int32 Avalon.Test.CoreUI.Trusted.Controls.HostedHwndControl::Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl.get_RecordedLocalTabs()
		}
		.property instance int32 Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl.RecordedMnemonic()
		{
			.get instance int32 Avalon.Test.CoreUI.Trusted.Controls.HostedHwndControl::Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl.get_RecordedMnemonic()
		}
		.property instance int32 Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl.RecordedUniqueAccelerator()
		{
			.get instance int32 Avalon.Test.CoreUI.Trusted.Controls.HostedHwndControl::Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl.get_RecordedUniqueAccelerator()
		}
		.property instance class [WindowsBase]System.Windows.Interop.IKeyboardInputSite System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite()
		{
			.get instance class [WindowsBase]System.Windows.Interop.IKeyboardInputSite Avalon.Test.CoreUI.Trusted.Controls.HostedHwndControl::System.Windows.Interop.IKeyboardInputSink.get_KeyboardInputSite()
			.set instance void Avalon.Test.CoreUI.Trusted.Controls.HostedHwndControl::System.Windows.Interop.IKeyboardInputSink.set_KeyboardInputSite(class [WindowsBase]System.Windows.Interop.IKeyboardInputSite)
		}
	}
	.class public HwndHostThreaded
		extends [PresentationFramework]System.Windows.Interop.HwndHost
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method family virtual hidebysig 
			instance valuetype [mscorlib]System.Runtime.InteropServices.HandleRef BuildWindowCore(valuetype [mscorlib]System.Runtime.InteropServices.HandleRef parent)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void DestroyWindowCore(valuetype [mscorlib]System.Runtime.InteropServices.HandleRef hwnd)
		{
			ret
		}
		.method family hidebysig 
			instance void SecondUIThread()
		{
			ret
		}
		.method family virtual hidebysig 
			instance void Dispose(bool disposing)
		{
			ret
		}
		.method public hidebysig 
			instance void StopControl()
		{
			ret
		}
		.method family static hidebysig 
			native int Helper(native int window, int32 message, native int firstParam, native int secondParam, bool& handled)
		{
			ret
		}
		.field public class [mscorlib]System.Exception InternalException
		.field static public class [mscorlib]System.Threading.AutoResetEvent _ev
		.field public class [mscorlib]System.Threading.AutoResetEvent evStop
	}
	.class public interface abstract IDisposedTest
	{
		.method public virtual hidebysig newslot abstract specialname 
			instance bool get_IsControlDestroyed()
		{
		}
		.property instance bool IsControlDestroyed()
		{
			.get instance bool Avalon.Test.CoreUI.Trusted.Controls.IDisposedTest::get_IsControlDestroyed()
		}
	}
	.class public interface abstract IKeyboardInteropTestControl
	{
		.method public virtual hidebysig newslot abstract 
			instance void SetFocusToFirstChild()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void ResetTestState()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance int32 LocalTabStops()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance int32 get_RecordedLocalTabs()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance int32 get_RecordedUniqueAccelerator()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance int32 get_RecordedCommonAccelerator()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void AddMnemonic(string letter, valuetype [WindowsBase]System.Windows.Input.ModifierKeys modifier)
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance int32 get_RecordedMnemonic()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl AddChild(string ChildType)
		{
		}
		.property instance int32 RecordedCommonAccelerator()
		{
			.get instance int32 Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl::get_RecordedCommonAccelerator()
		}
		.property instance int32 RecordedLocalTabs()
		{
			.get instance int32 Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl::get_RecordedLocalTabs()
		}
		.property instance int32 RecordedMnemonic()
		{
			.get instance int32 Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl::get_RecordedMnemonic()
		}
		.property instance int32 RecordedUniqueAccelerator()
		{
			.get instance int32 Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl::get_RecordedUniqueAccelerator()
		}
	}
	.class public interface abstract IMouseEvents
	{
		.method public virtual hidebysig newslot abstract specialname 
			instance void add_MouseMove(class [mscorlib]System.EventHandler 'value')
			synchronized 
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void remove_MouseMove(class [mscorlib]System.EventHandler 'value')
			synchronized 
		{
		}
		.event [mscorlib]System.EventHandler MouseMove
		{
			.addon instance void Avalon.Test.CoreUI.Trusted.Controls.IMouseEvents::add_MouseMove(class [mscorlib]System.EventHandler)
			.removeon instance void Avalon.Test.CoreUI.Trusted.Controls.IMouseEvents::remove_MouseMove(class [mscorlib]System.EventHandler)
		}
	}
	.class public MnemonicEventArgs
		extends [mscorlib]System.EventArgs
	{
		.method public hidebysig specialname 
			instance void .ctor(valuetype [WindowsBase]System.Windows.Input.Key key)
		{
			ret
		}
		.method public hidebysig specialname 
			instance valuetype [WindowsBase]System.Windows.Input.Key get_TextKey()
		{
			ret
		}
		.property instance valuetype [WindowsBase]System.Windows.Input.Key TextKey()
		{
			.get instance valuetype [WindowsBase]System.Windows.Input.Key Avalon.Test.CoreUI.Trusted.Controls.MnemonicEventArgs::get_TextKey()
		}
	}
	.class public sealed MnemonicEventHandler
		extends [mscorlib]System.MulticastDelegate
	{
		.method public hidebysig specialname 
			instance void .ctor(object 'object', native int 'method')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void Invoke(object o, class Avalon.Test.CoreUI.Trusted.Controls.MnemonicEventArgs args)
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance class [mscorlib]System.IAsyncResult BeginInvoke(object o, class Avalon.Test.CoreUI.Trusted.Controls.MnemonicEventArgs args, class [mscorlib]System.AsyncCallback callback, object 'object')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void EndInvoke(class [mscorlib]System.IAsyncResult result)
			runtime 
		{
		}
	}
	.class public MnemonicsEventArgs
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance void .ctor(int32 letter)
		{
			ret
		}
		.field public int32 Letter
	}
	.class public sealed MnemonicsEventHandler
		extends [mscorlib]System.MulticastDelegate
	{
		.method public hidebysig specialname 
			instance void .ctor(object 'object', native int 'method')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void Invoke(object o, class Avalon.Test.CoreUI.Trusted.Controls.MnemonicsEventArgs args)
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance class [mscorlib]System.IAsyncResult BeginInvoke(object o, class Avalon.Test.CoreUI.Trusted.Controls.MnemonicsEventArgs args, class [mscorlib]System.AsyncCallback callback, object 'object')
			runtime 
		{
		}
		.method public virtual hidebysig newslot 
			instance void EndInvoke(class [mscorlib]System.IAsyncResult result)
			runtime 
		{
		}
	}
	.class public MnemonicsTable
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig 
			instance void Add(int32 letter, valuetype [WindowsBase]System.Windows.Input.ModifierKeys modifiers, class Avalon.Test.CoreUI.Trusted.Controls.MnemonicsEventHandler 'method')
		{
			ret
		}
		.method public hidebysig 
			instance bool Execute(int32 letter, valuetype [WindowsBase]System.Windows.Input.ModifierKeys modifiers, class [PresentationFramework]System.Windows.Interop.HwndHost host)
		{
			ret
		}
	}
	.class public MultipleHwndControl
		extends [PresentationFramework]System.Windows.Interop.HwndHost
		implements [WindowsBase]System.Windows.Interop.IKeyboardInputSink
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance bool TranslateAccelerator(valuetype [WindowsBase]'System.Windows.Interop.MSG'& msg, valuetype [WindowsBase]System.Windows.Input.ModifierKeys modifiers)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance bool TabInto(class [WindowsBase]System.Windows.Input.TraversalRequest 'request')
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance class [WindowsBase]System.Windows.Interop.IKeyboardInputSite RegisterKeyboardInputSink(class [WindowsBase]System.Windows.Interop.IKeyboardInputSink sink)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void Dispose(bool disposing)
		{
			ret
		}
		.method family virtual hidebysig 
			instance valuetype [mscorlib]System.Runtime.InteropServices.HandleRef BuildWindowCore(valuetype [mscorlib]System.Runtime.InteropServices.HandleRef parent)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void DestroyWindowCore(valuetype [mscorlib]System.Runtime.InteropServices.HandleRef hwnd)
		{
			ret
		}
	}
	.class public NoTabAllowControl
		extends [PresentationFramework]System.Windows.Interop.HwndHost
		implements [WindowsBase]System.Windows.Interop.IKeyboardInputSink
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance bool TranslateAccelerator(valuetype [WindowsBase]'System.Windows.Interop.MSG'& msg, valuetype [WindowsBase]System.Windows.Input.ModifierKeys modifiers)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance bool TabInto(class [WindowsBase]System.Windows.Input.TraversalRequest 'request')
		{
			ret
		}
		.method public hidebysig specialname 
			instance class [PresentationCore]System.Windows.Media.Visual get_RootVisual()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_RootVisual(class [PresentationCore]System.Windows.Media.Visual 'value')
		{
			ret
		}
		.method family virtual hidebysig 
			instance valuetype [mscorlib]System.Runtime.InteropServices.HandleRef BuildWindowCore(valuetype [mscorlib]System.Runtime.InteropServices.HandleRef parent)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void DestroyWindowCore(valuetype [mscorlib]System.Runtime.InteropServices.HandleRef hwnd)
		{
			ret
		}
		.property instance class [PresentationCore]System.Windows.Media.Visual RootVisual()
		{
			.get instance class [PresentationCore]System.Windows.Media.Visual Avalon.Test.CoreUI.Trusted.Controls.NoTabAllowControl::get_RootVisual()
			.set instance void Avalon.Test.CoreUI.Trusted.Controls.NoTabAllowControl::set_RootVisual(class [PresentationCore]System.Windows.Media.Visual)
		}
	}
	.class public SimpleHostControl
		extends [PresentationFramework]System.Windows.Interop.HwndHost
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method family virtual hidebysig 
			instance valuetype [mscorlib]System.Runtime.InteropServices.HandleRef BuildWindowCore(valuetype [mscorlib]System.Runtime.InteropServices.HandleRef hwndParent)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void DestroyWindowCore(valuetype [mscorlib]System.Runtime.InteropServices.HandleRef hwnd)
		{
			ret
		}
	}
	.class public SingleHwndControl
		extends [PresentationFramework]System.Windows.Interop.HwndHost
		implements [WindowsBase]System.Windows.Interop.IKeyboardInputSink
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig 
			instance void RegisterMnemonics(class Avalon.Test.CoreUI.Trusted.Controls.MnemonicsTable table)
		{
			ret
		}
		.method public hidebysig 
			instance void RegisterAccelerators(class [mscorlib]'System.Collections.Generic.List`1'<valuetype Avalon.Test.CoreUI.Trusted.Controls.AccelTest> list)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void add_Mnemonic(class Avalon.Test.CoreUI.Trusted.Controls.MnemonicEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public hidebysig specialname 
			instance void remove_Mnemonic(class Avalon.Test.CoreUI.Trusted.Controls.MnemonicEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public hidebysig specialname 
			instance void add_Accelerator(class Avalon.Test.CoreUI.Trusted.Controls.AcceleratorEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public hidebysig specialname 
			instance void remove_Accelerator(class Avalon.Test.CoreUI.Trusted.Controls.AcceleratorEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance bool TranslateAccelerator(valuetype [WindowsBase]'System.Windows.Interop.MSG'& msg, valuetype [WindowsBase]System.Windows.Input.ModifierKeys modifiers)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance bool OnMnemonic(valuetype [WindowsBase]'System.Windows.Interop.MSG'& msg, valuetype [WindowsBase]System.Windows.Input.ModifierKeys modifiers)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance bool TabInto(class [WindowsBase]System.Windows.Input.TraversalRequest 'request')
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance class [WindowsBase]System.Windows.Interop.IKeyboardInputSite RegisterKeyboardInputSink(class [WindowsBase]System.Windows.Interop.IKeyboardInputSink sink)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void Dispose(bool disposing)
		{
			ret
		}
		.method family virtual hidebysig 
			instance valuetype [mscorlib]System.Runtime.InteropServices.HandleRef BuildWindowCore(valuetype [mscorlib]System.Runtime.InteropServices.HandleRef parent)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void DestroyWindowCore(valuetype [mscorlib]System.Runtime.InteropServices.HandleRef hwnd)
		{
			ret
		}
		.event Avalon.Test.CoreUI.Trusted.Controls.AcceleratorEventHandler Accelerator
		{
			.addon instance void Avalon.Test.CoreUI.Trusted.Controls.SingleHwndControl::add_Accelerator(class Avalon.Test.CoreUI.Trusted.Controls.AcceleratorEventHandler)
			.removeon instance void Avalon.Test.CoreUI.Trusted.Controls.SingleHwndControl::remove_Accelerator(class Avalon.Test.CoreUI.Trusted.Controls.AcceleratorEventHandler)
		}
		.event Avalon.Test.CoreUI.Trusted.Controls.MnemonicEventHandler Mnemonic
		{
			.addon instance void Avalon.Test.CoreUI.Trusted.Controls.SingleHwndControl::add_Mnemonic(class Avalon.Test.CoreUI.Trusted.Controls.MnemonicEventHandler)
			.removeon instance void Avalon.Test.CoreUI.Trusted.Controls.SingleHwndControl::remove_Mnemonic(class Avalon.Test.CoreUI.Trusted.Controls.MnemonicEventHandler)
		}
	}
	.class public SingleHwndDiffThreadControl
		extends [PresentationFramework]System.Windows.Interop.HwndHost
		implements [WindowsBase]System.Windows.Interop.IKeyboardInputSink
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig 
			instance void RegisterMnemonics(class [mscorlib]'System.Collections.Generic.List`1'<valuetype Avalon.Test.CoreUI.Trusted.Controls.AccelTest> list)
		{
			ret
		}
		.method public hidebysig 
			instance void RegisterAccelerators(class [mscorlib]'System.Collections.Generic.List`1'<valuetype Avalon.Test.CoreUI.Trusted.Controls.AccelTest> list)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void add_Mnemonic(class Avalon.Test.CoreUI.Trusted.Controls.MnemonicEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public hidebysig specialname 
			instance void remove_Mnemonic(class Avalon.Test.CoreUI.Trusted.Controls.MnemonicEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public hidebysig specialname 
			instance void add_Accelerator(class Avalon.Test.CoreUI.Trusted.Controls.AcceleratorEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public hidebysig specialname 
			instance void remove_Accelerator(class Avalon.Test.CoreUI.Trusted.Controls.AcceleratorEventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance bool TranslateAccelerator(valuetype [WindowsBase]'System.Windows.Interop.MSG'& msg, valuetype [WindowsBase]System.Windows.Input.ModifierKeys modifiers)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance bool OnMnemonic(valuetype [WindowsBase]'System.Windows.Interop.MSG'& msg, valuetype [WindowsBase]System.Windows.Input.ModifierKeys modifiers)
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance bool TabInto(class [WindowsBase]System.Windows.Input.TraversalRequest 'request')
		{
			ret
		}
		.method public final virtual hidebysig newslot 
			instance class [WindowsBase]System.Windows.Interop.IKeyboardInputSite RegisterKeyboardInputSink(class [WindowsBase]System.Windows.Interop.IKeyboardInputSink sink)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void Dispose(bool disposing)
		{
			ret
		}
		.method family virtual hidebysig 
			instance valuetype [mscorlib]System.Runtime.InteropServices.HandleRef BuildWindowCore(valuetype [mscorlib]System.Runtime.InteropServices.HandleRef parent)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void DestroyWindowCore(valuetype [mscorlib]System.Runtime.InteropServices.HandleRef hwnd)
		{
			ret
		}
		.event Avalon.Test.CoreUI.Trusted.Controls.AcceleratorEventHandler Accelerator
		{
			.addon instance void Avalon.Test.CoreUI.Trusted.Controls.SingleHwndDiffThreadControl::add_Accelerator(class Avalon.Test.CoreUI.Trusted.Controls.AcceleratorEventHandler)
			.removeon instance void Avalon.Test.CoreUI.Trusted.Controls.SingleHwndDiffThreadControl::remove_Accelerator(class Avalon.Test.CoreUI.Trusted.Controls.AcceleratorEventHandler)
		}
		.event Avalon.Test.CoreUI.Trusted.Controls.MnemonicEventHandler Mnemonic
		{
			.addon instance void Avalon.Test.CoreUI.Trusted.Controls.SingleHwndDiffThreadControl::add_Mnemonic(class Avalon.Test.CoreUI.Trusted.Controls.MnemonicEventHandler)
			.removeon instance void Avalon.Test.CoreUI.Trusted.Controls.SingleHwndDiffThreadControl::remove_Mnemonic(class Avalon.Test.CoreUI.Trusted.Controls.MnemonicEventHandler)
		}
	}
	.class public SourcedAvalonControl
		extends [PresentationCore]System.Windows.Interop.HwndSource
		implements [WindowsBase]System.Windows.Interop.IKeyboardInputSink, Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl
	{
		.method public hidebysig specialname 
			instance void .ctor(valuetype [PresentationCore]System.Windows.Interop.HwndSourceParameters p, bool tabStops, bool Accelerators, bool Mnemonics)
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl.SetFocusToFirstChild()
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl::SetFocusToFirstChild
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl.ResetTestState()
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl::ResetTestState
			ret
		}
		.method private final virtual hidebysig newslot 
			instance int32 Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl.LocalTabStops()
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl::LocalTabStops
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance int32 Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl.get_RecordedLocalTabs()
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl::get_RecordedLocalTabs
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance int32 Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl.get_RecordedUniqueAccelerator()
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl::get_RecordedUniqueAccelerator
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance int32 Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl.get_RecordedCommonAccelerator()
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl::get_RecordedCommonAccelerator
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl.AddMnemonic(string letter, valuetype [WindowsBase]System.Windows.Input.ModifierKeys modifier)
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl::AddMnemonic
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance int32 Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl.get_RecordedMnemonic()
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl::get_RecordedMnemonic
			ret
		}
		.method private final virtual hidebysig newslot 
			instance class Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl.AddChild(string childType)
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl::AddChild
			ret
		}
		.property instance int32 Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl.RecordedCommonAccelerator()
		{
			.get instance int32 Avalon.Test.CoreUI.Trusted.Controls.SourcedAvalonControl::Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl.get_RecordedCommonAccelerator()
		}
		.property instance int32 Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl.RecordedLocalTabs()
		{
			.get instance int32 Avalon.Test.CoreUI.Trusted.Controls.SourcedAvalonControl::Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl.get_RecordedLocalTabs()
		}
		.property instance int32 Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl.RecordedMnemonic()
		{
			.get instance int32 Avalon.Test.CoreUI.Trusted.Controls.SourcedAvalonControl::Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl.get_RecordedMnemonic()
		}
		.property instance int32 Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl.RecordedUniqueAccelerator()
		{
			.get instance int32 Avalon.Test.CoreUI.Trusted.Controls.SourcedAvalonControl::Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl.get_RecordedUniqueAccelerator()
		}
	}
	.class public Win32ButtonControl
		extends [PresentationFramework]System.Windows.Interop.HwndHost
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig 
			instance void PostMessageToWindow()
		{
			ret
		}
		.method family virtual hidebysig 
			instance valuetype [mscorlib]System.Runtime.InteropServices.HandleRef BuildWindowCore(valuetype [mscorlib]System.Runtime.InteropServices.HandleRef hwndParent)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void DestroyWindowCore(valuetype [mscorlib]System.Runtime.InteropServices.HandleRef hwnd)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void add_HwndHostHook(class [PresentationCore]System.Windows.Interop.HwndSourceHook 'value')
			synchronized 
		{
			ret
		}
		.method public hidebysig specialname 
			instance void remove_HwndHostHook(class [PresentationCore]System.Windows.Interop.HwndSourceHook 'value')
			synchronized 
		{
			ret
		}
		.method public hidebysig specialname 
			instance void add_Click(class [mscorlib]System.EventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public hidebysig specialname 
			instance void remove_Click(class [mscorlib]System.EventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public hidebysig specialname 
			instance void add_Listen(class [mscorlib]System.EventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public hidebysig specialname 
			instance void remove_Listen(class [mscorlib]System.EventHandler 'value')
			synchronized 
		{
			ret
		}
		.event [mscorlib]System.EventHandler Click
		{
			.addon instance void Avalon.Test.CoreUI.Trusted.Controls.Win32ButtonControl::add_Click(class [mscorlib]System.EventHandler)
			.removeon instance void Avalon.Test.CoreUI.Trusted.Controls.Win32ButtonControl::remove_Click(class [mscorlib]System.EventHandler)
		}
		.event [PresentationCore]System.Windows.Interop.HwndSourceHook HwndHostHook
		{
			.addon instance void Avalon.Test.CoreUI.Trusted.Controls.Win32ButtonControl::add_HwndHostHook(class [PresentationCore]System.Windows.Interop.HwndSourceHook)
			.removeon instance void Avalon.Test.CoreUI.Trusted.Controls.Win32ButtonControl::remove_HwndHostHook(class [PresentationCore]System.Windows.Interop.HwndSourceHook)
		}
		.event [mscorlib]System.EventHandler Listen
		{
			.addon instance void Avalon.Test.CoreUI.Trusted.Controls.Win32ButtonControl::add_Listen(class [mscorlib]System.EventHandler)
			.removeon instance void Avalon.Test.CoreUI.Trusted.Controls.Win32ButtonControl::remove_Listen(class [mscorlib]System.EventHandler)
		}
	}
	.class public Win32ButtonCtrl
		extends [PresentationFramework]System.Windows.Interop.HwndHost
		implements Avalon.Test.CoreUI.Trusted.Controls.IMouseEvents, Avalon.Test.CoreUI.Trusted.Controls.IDisposedTest
	{
		.permissionset assert = (2E 01 7F 53 79 73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E 50 65 72 6D 69 73 73 69 6F 6E 53 65 74 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 32 2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36 31 39 33 34 65 30 38 39 12 01 54 0E 04 4E 61 6D 65 09 46 75 6C 6C 54 72 75 73 74)
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void add_MouseMove(class [mscorlib]System.EventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance void remove_MouseMove(class [mscorlib]System.EventHandler 'value')
			synchronized 
		{
			ret
		}
		.method family virtual hidebysig 
			instance valuetype [mscorlib]System.Runtime.InteropServices.HandleRef BuildWindowCore(valuetype [mscorlib]System.Runtime.InteropServices.HandleRef hwndParent)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void DestroyWindowCore(valuetype [mscorlib]System.Runtime.InteropServices.HandleRef hwnd)
		{
			ret
		}
		.method public final virtual hidebysig newslot specialname 
			instance bool get_IsControlDestroyed()
		{
			ret
		}
		.field static public literal float64 ConstHeight = float64(0x4059000000000000)
		.field static public literal float64 ConstWidth = float64(0x4059000000000000)
		.event [mscorlib]System.EventHandler MouseMove
		{
			.addon instance void Avalon.Test.CoreUI.Trusted.Controls.Win32ButtonCtrl::add_MouseMove(class [mscorlib]System.EventHandler)
			.removeon instance void Avalon.Test.CoreUI.Trusted.Controls.Win32ButtonCtrl::remove_MouseMove(class [mscorlib]System.EventHandler)
		}
		.property instance bool IsControlDestroyed()
		{
			.get instance bool Avalon.Test.CoreUI.Trusted.Controls.Win32ButtonCtrl::get_IsControlDestroyed()
		}
	}
	.class public Win32ButtonElement
		extends [PresentationFramework]System.Windows.Interop.HwndHost
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance native int get_Win32Handle()
		{
			ret
		}
		.method public hidebysig specialname 
			instance native int get_ContainerWindowHandle()
		{
			ret
		}
		.method family virtual hidebysig 
			instance valuetype [mscorlib]System.Runtime.InteropServices.HandleRef BuildWindowCore(valuetype [mscorlib]System.Runtime.InteropServices.HandleRef hwndParent)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void DestroyWindowCore(valuetype [mscorlib]System.Runtime.InteropServices.HandleRef hwnd)
		{
			ret
		}
		.method public hidebysig 
			instance void ValidateHandle()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void add_ContainerWindowHook(class [PresentationCore]System.Windows.Interop.HwndSourceHook 'value')
			synchronized 
		{
			ret
		}
		.method public hidebysig specialname 
			instance void remove_ContainerWindowHook(class [PresentationCore]System.Windows.Interop.HwndSourceHook 'value')
			synchronized 
		{
			ret
		}
		.method public hidebysig specialname 
			instance void add_ControlWindowHook(class [PresentationCore]System.Windows.Interop.HwndSourceHook 'value')
			synchronized 
		{
			ret
		}
		.method public hidebysig specialname 
			instance void remove_ControlWindowHook(class [PresentationCore]System.Windows.Interop.HwndSourceHook 'value')
			synchronized 
		{
			ret
		}
		.method public hidebysig specialname 
			instance void add_Painted(class [mscorlib]System.EventHandler 'value')
			synchronized 
		{
			ret
		}
		.method public hidebysig specialname 
			instance void remove_Painted(class [mscorlib]System.EventHandler 'value')
			synchronized 
		{
			ret
		}
		.method family virtual hidebysig 
			instance valuetype [WindowsBase]System.Windows.Size ArrangeOverride(valuetype [WindowsBase]System.Windows.Size arrangeBounds)
		{
			ret
		}
		.method family virtual hidebysig 
			instance valuetype [WindowsBase]System.Windows.Size MeasureOverride(valuetype [WindowsBase]System.Windows.Size constraint)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void OnRender(class [PresentationCore]System.Windows.Media.DrawingContext dc)
		{
			ret
		}
		.event [PresentationCore]System.Windows.Interop.HwndSourceHook ContainerWindowHook
		{
			.addon instance void Avalon.Test.CoreUI.Trusted.Controls.Win32ButtonElement::add_ContainerWindowHook(class [PresentationCore]System.Windows.Interop.HwndSourceHook)
			.removeon instance void Avalon.Test.CoreUI.Trusted.Controls.Win32ButtonElement::remove_ContainerWindowHook(class [PresentationCore]System.Windows.Interop.HwndSourceHook)
		}
		.event [PresentationCore]System.Windows.Interop.HwndSourceHook ControlWindowHook
		{
			.addon instance void Avalon.Test.CoreUI.Trusted.Controls.Win32ButtonElement::add_ControlWindowHook(class [PresentationCore]System.Windows.Interop.HwndSourceHook)
			.removeon instance void Avalon.Test.CoreUI.Trusted.Controls.Win32ButtonElement::remove_ControlWindowHook(class [PresentationCore]System.Windows.Interop.HwndSourceHook)
		}
		.event [mscorlib]System.EventHandler Painted
		{
			.addon instance void Avalon.Test.CoreUI.Trusted.Controls.Win32ButtonElement::add_Painted(class [mscorlib]System.EventHandler)
			.removeon instance void Avalon.Test.CoreUI.Trusted.Controls.Win32ButtonElement::remove_Painted(class [mscorlib]System.EventHandler)
		}
		.property instance native int ContainerWindowHandle()
		{
			.get instance native int Avalon.Test.CoreUI.Trusted.Controls.Win32ButtonElement::get_ContainerWindowHandle()
		}
		.property instance native int Win32Handle()
		{
			.get instance native int Avalon.Test.CoreUI.Trusted.Controls.Win32ButtonElement::get_Win32Handle()
		}
	}
	.class public Win32KeyboardInputSite
		extends [mscorlib]System.Object
		implements [WindowsBase]System.Windows.Interop.IKeyboardInputSite
	{
		.method public hidebysig specialname 
			instance void .ctor(native int prevHwnd, class [WindowsBase]System.Windows.Interop.IKeyboardInputSink sink, native int nextHwnd)
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Windows.Interop.IKeyboardInputSite.Unregister()
		{
			.override [WindowsBase]System.Windows.Interop.IKeyboardInputSite::Unregister
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance class [WindowsBase]System.Windows.Interop.IKeyboardInputSink System.Windows.Interop.IKeyboardInputSite.get_Sink()
		{
			.override [WindowsBase]System.Windows.Interop.IKeyboardInputSite::get_Sink
			ret
		}
		.method private final virtual hidebysig newslot 
			instance bool System.Windows.Interop.IKeyboardInputSite.OnNoMoreTabStops(class [WindowsBase]System.Windows.Input.TraversalRequest 'request')
		{
			.override [WindowsBase]System.Windows.Interop.IKeyboardInputSite::OnNoMoreTabStops
			ret
		}
		.field public int32 tabCount
		.property instance class [WindowsBase]System.Windows.Interop.IKeyboardInputSink System.Windows.Interop.IKeyboardInputSite.Sink()
		{
			.get instance class [WindowsBase]System.Windows.Interop.IKeyboardInputSink Avalon.Test.CoreUI.Trusted.Controls.Win32KeyboardInputSite::System.Windows.Interop.IKeyboardInputSite.get_Sink()
		}
	}
	.class public Win32Window
		extends [mscorlib]System.Object
		implements Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl
	{
		.method public hidebysig specialname 
			instance void .ctor(bool TabStops, bool Accelerators, bool Mnemonics)
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl.SetFocusToFirstChild()
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl::SetFocusToFirstChild
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl.ResetTestState()
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl::ResetTestState
			ret
		}
		.method private final virtual hidebysig newslot 
			instance int32 Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl.LocalTabStops()
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl::LocalTabStops
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance int32 Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl.get_RecordedLocalTabs()
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl::get_RecordedLocalTabs
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance int32 Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl.get_RecordedUniqueAccelerator()
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl::get_RecordedUniqueAccelerator
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance int32 Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl.get_RecordedCommonAccelerator()
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl::get_RecordedCommonAccelerator
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl.AddMnemonic(string letter, valuetype [WindowsBase]System.Windows.Input.ModifierKeys modifier)
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl::AddMnemonic
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance int32 Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl.get_RecordedMnemonic()
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl::get_RecordedMnemonic
			ret
		}
		.method private final virtual hidebysig newslot 
			instance class Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl.AddChild(string childType)
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl::AddChild
			ret
		}
		.property instance int32 Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl.RecordedCommonAccelerator()
		{
			.get instance int32 Avalon.Test.CoreUI.Trusted.Controls.Win32Window::Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl.get_RecordedCommonAccelerator()
		}
		.property instance int32 Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl.RecordedLocalTabs()
		{
			.get instance int32 Avalon.Test.CoreUI.Trusted.Controls.Win32Window::Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl.get_RecordedLocalTabs()
		}
		.property instance int32 Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl.RecordedMnemonic()
		{
			.get instance int32 Avalon.Test.CoreUI.Trusted.Controls.Win32Window::Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl.get_RecordedMnemonic()
		}
		.property instance int32 Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl.RecordedUniqueAccelerator()
		{
			.get instance int32 Avalon.Test.CoreUI.Trusted.Controls.Win32Window::Avalon.Test.CoreUI.Trusted.Controls.IKeyboardInteropTestControl.get_RecordedUniqueAccelerator()
		}
	}
}
.namespace Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls
{
	.class public sealed AccelTestType
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.AccelTestType COverride = int32(0x00000004)
		.field static public literal valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.AccelTestType Common = int32(0x00000000)
		.field static public literal valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.AccelTestType Default = int32(0x00000006)
		.field static public literal valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.AccelTestType Global = int32(0x00000002)
		.field static public literal valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.AccelTestType PFirst = int32(0x00000005)
		.field static public literal valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.AccelTestType POverride = int32(0x00000003)
		.field static public literal valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.AccelTestType Unique = int32(0x00000001)
	}
	.class public sequential sealed AcceleratorTestState
		extends [mscorlib]System.ValueType
	{
		.method public hidebysig 
			instance void ResetTestState()
		{
			ret
		}
		.field public bool ControlState
		.field public bool KeyState
		.field public class [PresentationCore]System.Windows.Input.RoutedCommand RecordedCommand
		.field public int32 SumCommand
		.field public class [PresentationCore]System.Windows.Media.Brush BackColor
		.field public string Owner
	}
	.class public AvPanel
		extends [PresentationFramework]System.Windows.Controls.StackPanel
		implements Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl
	{
		.method private final virtual hidebysig newslot specialname 
			instance valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.AcceleratorTestState Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.get_RecordedAcceleratorTestState()
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl::get_RecordedAcceleratorTestState
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance void Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.set_ExpectedAcceleratorTestState(valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.ExpectedAccelTestState 'value')
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl::set_ExpectedAcceleratorTestState
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.TabTestState Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.get_ExpectedTabTestState()
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl::get_ExpectedTabTestState
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance void Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.set_ExpectedTabTestState(valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.TabTestState 'value')
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl::set_ExpectedTabTestState
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.TabTestState Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.get_RecordedTabTestState()
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl::get_RecordedTabTestState
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(int32 width, int32 height)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig 
			instance void OnGotFocus(object sender, class [PresentationCore]System.Windows.RoutedEventArgs e)
		{
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance void Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.set_NeedRecord(bool 'value')
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl::set_NeedRecord
			ret
		}
		.method family hidebysig 
			instance void OnLostFocus(object sender, class [PresentationCore]System.Windows.RoutedEventArgs e)
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.ResetTestState()
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl::ResetTestState
			ret
		}
		.method private final virtual hidebysig newslot 
			instance class Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.AddChild(string childType)
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl::AddChild
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.AddMnemonic(string letter, valuetype [WindowsBase]System.Windows.Input.ModifierKeys modifier)
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl::AddMnemonic
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance int32 Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.get_RecordedMnemonics()
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl::get_RecordedMnemonics
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.SetFocusToFirstChild(bool first)
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl::SetFocusToFirstChild
			ret
		}
		.field family class [mscorlib]'System.Collections.Generic.List`1'<class [PresentationFramework]System.Windows.Controls.Button> _buttons
		.property instance valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.ExpectedAccelTestState Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.ExpectedAcceleratorTestState()
		{
			.set instance void Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.AvPanel::Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.set_ExpectedAcceleratorTestState(valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.ExpectedAccelTestState)
		}
		.property instance valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.TabTestState Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.ExpectedTabTestState()
		{
			.get instance valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.TabTestState Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.AvPanel::Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.get_ExpectedTabTestState()
			.set instance void Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.AvPanel::Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.set_ExpectedTabTestState(valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.TabTestState)
		}
		.property instance bool Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.NeedRecord()
		{
			.set instance void Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.AvPanel::Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.set_NeedRecord(bool)
		}
		.property instance valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.AcceleratorTestState Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.RecordedAcceleratorTestState()
		{
			.get instance valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.AcceleratorTestState Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.AvPanel::Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.get_RecordedAcceleratorTestState()
		}
		.property instance int32 Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.RecordedMnemonics()
		{
			.get instance int32 Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.AvPanel::Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.get_RecordedMnemonics()
		}
		.property instance valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.TabTestState Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.RecordedTabTestState()
		{
			.get instance valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.TabTestState Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.AvPanel::Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.get_RecordedTabTestState()
		}
	}
	.class public AvalonWindow
		extends [mscorlib]System.Object
		implements Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl
	{
		.method private final virtual hidebysig newslot specialname 
			instance valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.AcceleratorTestState Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.get_RecordedAcceleratorTestState()
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl::get_RecordedAcceleratorTestState
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance void Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.set_ExpectedAcceleratorTestState(valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.ExpectedAccelTestState 'value')
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl::set_ExpectedAcceleratorTestState
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.TabTestState Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.get_ExpectedTabTestState()
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl::get_ExpectedTabTestState
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance void Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.set_ExpectedTabTestState(valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.TabTestState 'value')
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl::set_ExpectedTabTestState
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.TabTestState Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.get_RecordedTabTestState()
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl::get_RecordedTabTestState
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig 
			instance void OnGotFocus(object sender, class [PresentationCore]System.Windows.RoutedEventArgs e)
		{
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance void Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.set_NeedRecord(bool 'value')
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl::set_NeedRecord
			ret
		}
		.method public hidebysig 
			instance void onClickButton(object o, class [PresentationCore]System.Windows.RoutedEventArgs args)
		{
			ret
		}
		.method public hidebysig 
			instance void LoadUniqueAccelerators()
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.ResetTestState()
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl::ResetTestState
			ret
		}
		.method private final virtual hidebysig newslot 
			instance class Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.AddChild(string childType)
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl::AddChild
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.AddMnemonic(string letter, valuetype [WindowsBase]System.Windows.Input.ModifierKeys modifier)
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl::AddMnemonic
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance int32 Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.get_RecordedMnemonics()
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl::get_RecordedMnemonics
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.SetFocusToFirstChild(bool first)
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl::SetFocusToFirstChild
			ret
		}
		.property instance valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.ExpectedAccelTestState Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.ExpectedAcceleratorTestState()
		{
			.set instance void Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.AvalonWindow::Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.set_ExpectedAcceleratorTestState(valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.ExpectedAccelTestState)
		}
		.property instance valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.TabTestState Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.ExpectedTabTestState()
		{
			.get instance valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.TabTestState Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.AvalonWindow::Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.get_ExpectedTabTestState()
			.set instance void Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.AvalonWindow::Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.set_ExpectedTabTestState(valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.TabTestState)
		}
		.property instance bool Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.NeedRecord()
		{
			.set instance void Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.AvalonWindow::Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.set_NeedRecord(bool)
		}
		.property instance valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.AcceleratorTestState Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.RecordedAcceleratorTestState()
		{
			.get instance valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.AcceleratorTestState Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.AvalonWindow::Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.get_RecordedAcceleratorTestState()
		}
		.property instance int32 Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.RecordedMnemonics()
		{
			.get instance int32 Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.AvalonWindow::Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.get_RecordedMnemonics()
		}
		.property instance valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.TabTestState Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.RecordedTabTestState()
		{
			.get instance valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.TabTestState Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.AvalonWindow::Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.get_RecordedTabTestState()
		}
	}
	.class public sequential sealed ExpectedAccelTestState
		extends [mscorlib]System.ValueType
	{
		.method public hidebysig 
			instance void ResetTestState()
		{
			ret
		}
		.field public class [PresentationCore]System.Windows.Media.Brush BackColor
		.field public valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.AccelTestType TestType
	}
	.class public HostedHwndControl
		extends [PresentationFramework]System.Windows.Interop.HwndHost
		implements [WindowsBase]System.Windows.Interop.IKeyboardInputSink, Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl
	{
		.method private final virtual hidebysig newslot specialname 
			instance valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.AcceleratorTestState Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.get_RecordedAcceleratorTestState()
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl::get_RecordedAcceleratorTestState
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance void Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.set_ExpectedAcceleratorTestState(valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.ExpectedAccelTestState 'value')
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl::set_ExpectedAcceleratorTestState
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.TabTestState Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.get_ExpectedTabTestState()
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl::get_ExpectedTabTestState
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance void Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.set_ExpectedTabTestState(valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.TabTestState 'value')
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl::set_ExpectedTabTestState
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.TabTestState Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.get_RecordedTabTestState()
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl::get_RecordedTabTestState
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method family virtual hidebysig 
			instance valuetype [mscorlib]System.Runtime.InteropServices.HandleRef BuildWindowCore(valuetype [mscorlib]System.Runtime.InteropServices.HandleRef parent)
		{
			ret
		}
		.method family virtual hidebysig 
			instance void DestroyWindowCore(valuetype [mscorlib]System.Runtime.InteropServices.HandleRef hwnd)
		{
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance void Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.set_NeedRecord(bool 'value')
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl::set_NeedRecord
			ret
		}
		.method private final virtual hidebysig newslot 
			instance bool System.Windows.Interop.IKeyboardInputSink.HasFocusWithin()
		{
			.override [WindowsBase]System.Windows.Interop.IKeyboardInputSink::HasFocusWithin
			ret
		}
		.method private final virtual hidebysig newslot 
			instance bool System.Windows.Interop.IKeyboardInputSink.TabInto(class [WindowsBase]System.Windows.Input.TraversalRequest 'request')
		{
			.override [WindowsBase]System.Windows.Interop.IKeyboardInputSink::TabInto
			ret
		}
		.method private final virtual hidebysig newslot 
			instance bool System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(valuetype [WindowsBase]'System.Windows.Interop.MSG'& msg, valuetype [WindowsBase]System.Windows.Input.ModifierKeys modifiers)
		{
			.override [WindowsBase]System.Windows.Interop.IKeyboardInputSink::TranslateAccelerator
			ret
		}
		.method private final virtual hidebysig newslot 
			instance bool System.Windows.Interop.IKeyboardInputSink.TranslateChar(valuetype [WindowsBase]'System.Windows.Interop.MSG'& msg, valuetype [WindowsBase]System.Windows.Input.ModifierKeys modifiers)
		{
			.override [WindowsBase]System.Windows.Interop.IKeyboardInputSink::TranslateChar
			ret
		}
		.method private final virtual hidebysig newslot 
			instance bool System.Windows.Interop.IKeyboardInputSink.OnMnemonic(valuetype [WindowsBase]'System.Windows.Interop.MSG'& msg, valuetype [WindowsBase]System.Windows.Input.ModifierKeys modifiers)
		{
			.override [WindowsBase]System.Windows.Interop.IKeyboardInputSink::OnMnemonic
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.ResetTestState()
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl::ResetTestState
			ret
		}
		.method private final virtual hidebysig newslot 
			instance class Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.AddChild(string childType)
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl::AddChild
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.SetFocusToFirstChild(bool first)
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl::SetFocusToFirstChild
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.AddMnemonic(string letter, valuetype [WindowsBase]System.Windows.Input.ModifierKeys modifier)
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl::AddMnemonic
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance int32 Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.get_RecordedMnemonics()
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl::get_RecordedMnemonics
			ret
		}
		.property instance valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.ExpectedAccelTestState Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.ExpectedAcceleratorTestState()
		{
			.set instance void Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.HostedHwndControl::Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.set_ExpectedAcceleratorTestState(valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.ExpectedAccelTestState)
		}
		.property instance valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.TabTestState Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.ExpectedTabTestState()
		{
			.get instance valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.TabTestState Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.HostedHwndControl::Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.get_ExpectedTabTestState()
			.set instance void Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.HostedHwndControl::Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.set_ExpectedTabTestState(valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.TabTestState)
		}
		.property instance bool Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.NeedRecord()
		{
			.set instance void Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.HostedHwndControl::Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.set_NeedRecord(bool)
		}
		.property instance valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.AcceleratorTestState Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.RecordedAcceleratorTestState()
		{
			.get instance valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.AcceleratorTestState Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.HostedHwndControl::Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.get_RecordedAcceleratorTestState()
		}
		.property instance int32 Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.RecordedMnemonics()
		{
			.get instance int32 Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.HostedHwndControl::Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.get_RecordedMnemonics()
		}
		.property instance valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.TabTestState Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.RecordedTabTestState()
		{
			.get instance valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.TabTestState Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.HostedHwndControl::Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.get_RecordedTabTestState()
		}
	}
	.class public HostedWinFormsControl
		extends [System.Windows.Forms]System.Windows.Forms.UserControl
		implements Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl
	{
		.class nested public AcceleratorKey
			extends [mscorlib]System.Object
		{
			.method public hidebysig specialname 
				instance void .ctor()
			{
				ret
			}
			.method public hidebysig specialname 
				instance void .ctor(valuetype [System.Windows.Forms]System.Windows.Forms.Keys key)
			{
				ret
			}
			.method public hidebysig specialname 
				instance valuetype [System.Windows.Forms]System.Windows.Forms.Keys get_Key()
			{
				ret
			}
			.method public hidebysig specialname 
				instance void set_Key(valuetype [System.Windows.Forms]System.Windows.Forms.Keys 'value')
			{
				ret
			}
			.method public virtual hidebysig 
				instance int32 GetHashCode()
			{
				ret
			}
			.method public virtual hidebysig 
				instance bool Equals(object obj)
			{
				ret
			}
			.property instance valuetype [System.Windows.Forms]System.Windows.Forms.Keys Key()
			{
				.get instance valuetype [System.Windows.Forms]System.Windows.Forms.Keys Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.HostedWinFormsControl/AcceleratorKey::get_Key()
				.set instance void Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.HostedWinFormsControl/AcceleratorKey::set_Key(valuetype [System.Windows.Forms]System.Windows.Forms.Keys)
			}
		}
		.method public hidebysig specialname 
			instance void .ctor(int32 width, int32 height)
		{
			ret
		}
		.method family hidebysig 
			instance void InitializeAccelerators()
		{
			ret
		}
		.method family virtual hidebysig 
			instance void Dispose(bool disposing)
		{
			ret
		}
		.method family virtual hidebysig 
			instance bool ProcessCmdKey(valuetype [System.Windows.Forms]System.Windows.Forms.Message& msg, valuetype [System.Windows.Forms]System.Windows.Forms.Keys keyData)
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance class Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.AddChild(string childType)
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl::AddChild
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.AcceleratorTestState Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.get_RecordedAcceleratorTestState()
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl::get_RecordedAcceleratorTestState
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance void Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.set_ExpectedAcceleratorTestState(valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.ExpectedAccelTestState 'value')
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl::set_ExpectedAcceleratorTestState
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.AddMnemonic(string letter, valuetype [WindowsBase]System.Windows.Input.ModifierKeys modifier)
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl::AddMnemonic
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance int32 Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.get_RecordedMnemonics()
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl::get_RecordedMnemonics
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.SetFocusToFirstChild(bool bFirst)
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl::SetFocusToFirstChild
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance void Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.set_NeedRecord(bool 'value')
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl::set_NeedRecord
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.TabTestState Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.get_ExpectedTabTestState()
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl::get_ExpectedTabTestState
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance void Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.set_ExpectedTabTestState(valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.TabTestState 'value')
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl::set_ExpectedTabTestState
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.TabTestState Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.get_RecordedTabTestState()
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl::get_RecordedTabTestState
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.ResetTestState()
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl::ResetTestState
			ret
		}
		.property instance valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.ExpectedAccelTestState Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.ExpectedAcceleratorTestState()
		{
			.set instance void Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.HostedWinFormsControl::Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.set_ExpectedAcceleratorTestState(valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.ExpectedAccelTestState)
		}
		.property instance valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.TabTestState Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.ExpectedTabTestState()
		{
			.get instance valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.TabTestState Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.HostedWinFormsControl::Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.get_ExpectedTabTestState()
			.set instance void Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.HostedWinFormsControl::Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.set_ExpectedTabTestState(valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.TabTestState)
		}
		.property instance bool Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.NeedRecord()
		{
			.set instance void Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.HostedWinFormsControl::Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.set_NeedRecord(bool)
		}
		.property instance valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.AcceleratorTestState Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.RecordedAcceleratorTestState()
		{
			.get instance valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.AcceleratorTestState Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.HostedWinFormsControl::Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.get_RecordedAcceleratorTestState()
		}
		.property instance int32 Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.RecordedMnemonics()
		{
			.get instance int32 Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.HostedWinFormsControl::Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.get_RecordedMnemonics()
		}
		.property instance valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.TabTestState Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.RecordedTabTestState()
		{
			.get instance valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.TabTestState Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.HostedWinFormsControl::Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.get_RecordedTabTestState()
		}
	}
	.class public interface abstract IKeyboardInteropTestControl
	{
		.method public virtual hidebysig newslot abstract specialname 
			instance void set_NeedRecord(bool 'value')
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.AcceleratorTestState get_RecordedAcceleratorTestState()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void set_ExpectedAcceleratorTestState(valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.ExpectedAccelTestState 'value')
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.TabTestState get_ExpectedTabTestState()
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance void set_ExpectedTabTestState(valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.TabTestState 'value')
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.TabTestState get_RecordedTabTestState()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void AddMnemonic(string letter, valuetype [WindowsBase]System.Windows.Input.ModifierKeys modifier)
		{
		}
		.method public virtual hidebysig newslot abstract specialname 
			instance int32 get_RecordedMnemonics()
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance class Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl AddChild(string childType)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void SetFocusToFirstChild(bool first)
		{
		}
		.method public virtual hidebysig newslot abstract 
			instance void ResetTestState()
		{
		}
		.property instance valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.ExpectedAccelTestState ExpectedAcceleratorTestState()
		{
			.set instance void Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl::set_ExpectedAcceleratorTestState(valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.ExpectedAccelTestState)
		}
		.property instance valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.TabTestState ExpectedTabTestState()
		{
			.get instance valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.TabTestState Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl::get_ExpectedTabTestState()
			.set instance void Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl::set_ExpectedTabTestState(valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.TabTestState)
		}
		.property instance bool NeedRecord()
		{
			.set instance void Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl::set_NeedRecord(bool)
		}
		.property instance valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.AcceleratorTestState RecordedAcceleratorTestState()
		{
			.get instance valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.AcceleratorTestState Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl::get_RecordedAcceleratorTestState()
		}
		.property instance int32 RecordedMnemonics()
		{
			.get instance int32 Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl::get_RecordedMnemonics()
		}
		.property instance valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.TabTestState RecordedTabTestState()
		{
			.get instance valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.TabTestState Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl::get_RecordedTabTestState()
		}
	}
	.class public SourcedAvalon
		extends [PresentationCore]System.Windows.Interop.HwndSource
		implements Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl
	{
		.method private final virtual hidebysig newslot specialname 
			instance valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.AcceleratorTestState Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.get_RecordedAcceleratorTestState()
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl::get_RecordedAcceleratorTestState
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance void Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.set_ExpectedAcceleratorTestState(valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.ExpectedAccelTestState 'value')
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl::set_ExpectedAcceleratorTestState
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.TabTestState Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.get_ExpectedTabTestState()
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl::get_ExpectedTabTestState
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance void Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.set_ExpectedTabTestState(valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.TabTestState 'value')
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl::set_ExpectedTabTestState
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.TabTestState Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.get_RecordedTabTestState()
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl::get_RecordedTabTestState
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(valuetype [PresentationCore]System.Windows.Interop.HwndSourceParameters p)
		{
			ret
		}
		.method public hidebysig 
			instance void OnGotFocus(object sender, class [PresentationCore]System.Windows.RoutedEventArgs e)
		{
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance void Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.set_NeedRecord(bool 'value')
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl::set_NeedRecord
			ret
		}
		.method family hidebysig 
			instance void OnLostFocus(object sender, class [PresentationCore]System.Windows.RoutedEventArgs e)
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.ResetTestState()
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl::ResetTestState
			ret
		}
		.method private final virtual hidebysig newslot 
			instance class Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.AddChild(string childType)
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl::AddChild
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.AddMnemonic(string letter, valuetype [WindowsBase]System.Windows.Input.ModifierKeys modifier)
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl::AddMnemonic
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance int32 Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.get_RecordedMnemonics()
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl::get_RecordedMnemonics
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.SetFocusToFirstChild(bool first)
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl::SetFocusToFirstChild
			ret
		}
		.field family class [mscorlib]'System.Collections.Generic.List`1'<class [PresentationFramework]System.Windows.Controls.Button> _buttons
		.field public class [PresentationFramework]System.Windows.Controls.StackPanel _stackPanel
		.property instance valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.ExpectedAccelTestState Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.ExpectedAcceleratorTestState()
		{
			.set instance void Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.SourcedAvalon::Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.set_ExpectedAcceleratorTestState(valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.ExpectedAccelTestState)
		}
		.property instance valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.TabTestState Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.ExpectedTabTestState()
		{
			.get instance valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.TabTestState Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.SourcedAvalon::Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.get_ExpectedTabTestState()
			.set instance void Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.SourcedAvalon::Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.set_ExpectedTabTestState(valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.TabTestState)
		}
		.property instance bool Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.NeedRecord()
		{
			.set instance void Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.SourcedAvalon::Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.set_NeedRecord(bool)
		}
		.property instance valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.AcceleratorTestState Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.RecordedAcceleratorTestState()
		{
			.get instance valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.AcceleratorTestState Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.SourcedAvalon::Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.get_RecordedAcceleratorTestState()
		}
		.property instance int32 Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.RecordedMnemonics()
		{
			.get instance int32 Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.SourcedAvalon::Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.get_RecordedMnemonics()
		}
		.property instance valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.TabTestState Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.RecordedTabTestState()
		{
			.get instance valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.TabTestState Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.SourcedAvalon::Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.get_RecordedTabTestState()
		}
	}
	.class public sequential sealed TabTestState
		extends [mscorlib]System.ValueType
	{
		.method public hidebysig 
			instance void ResetTestState()
		{
			ret
		}
		.field public int32 RecordedTabStops
		.field public native int RecordedFirstTab
		.field public native int RecordedLastTab
		.field public class [PresentationCore]System.Windows.UIElement RecordedFirstTabElement
		.field public class [PresentationCore]System.Windows.UIElement RecordedLastTabElement
		.field public valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.TabTestType TestType
	}
	.class public sealed TabTestType
		extends [mscorlib]System.Enum
	{
		.field public rtspecialname specialname int32 value__
		.field static public literal valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.TabTestType Default = int32(0x00000000)
		.field static public literal valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.TabTestType Loop = int32(0x00000002)
		.field static public literal valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.TabTestType Normal = int32(0x00000001)
	}
	.class public Win32KeyboardInputSite
		extends [mscorlib]System.Object
		implements [WindowsBase]System.Windows.Interop.IKeyboardInputSite
	{
		.method public hidebysig specialname 
			instance void .ctor(native int prevHwnd, class [WindowsBase]System.Windows.Interop.IKeyboardInputSink sink, native int nextHwnd, class Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl parent)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_FirstHwnd(native int 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_LastHwnd(native int 'value')
		{
			ret
		}
		.method public hidebysig specialname 
			instance void set_TabType(valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.TabTestType 'value')
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void System.Windows.Interop.IKeyboardInputSite.Unregister()
		{
			.override [WindowsBase]System.Windows.Interop.IKeyboardInputSite::Unregister
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance class [WindowsBase]System.Windows.Interop.IKeyboardInputSink System.Windows.Interop.IKeyboardInputSite.get_Sink()
		{
			.override [WindowsBase]System.Windows.Interop.IKeyboardInputSite::get_Sink
			ret
		}
		.method private final virtual hidebysig newslot 
			instance bool System.Windows.Interop.IKeyboardInputSite.OnNoMoreTabStops(class [WindowsBase]System.Windows.Input.TraversalRequest 'request')
		{
			.override [WindowsBase]System.Windows.Interop.IKeyboardInputSite::OnNoMoreTabStops
			ret
		}
		.field public int32 tabCount
		.property instance native int FirstHwnd()
		{
			.set instance void Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.Win32KeyboardInputSite::set_FirstHwnd(native int)
		}
		.property instance native int LastHwnd()
		{
			.set instance void Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.Win32KeyboardInputSite::set_LastHwnd(native int)
		}
		.property instance class [WindowsBase]System.Windows.Interop.IKeyboardInputSink System.Windows.Interop.IKeyboardInputSite.Sink()
		{
			.get instance class [WindowsBase]System.Windows.Interop.IKeyboardInputSink Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.Win32KeyboardInputSite::System.Windows.Interop.IKeyboardInputSite.get_Sink()
		}
		.property instance valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.TabTestType TabType()
		{
			.set instance void Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.Win32KeyboardInputSite::set_TabType(valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.TabTestType)
		}
	}
	.class public Win32Window
		extends [mscorlib]System.Object
		implements Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl
	{
		.method private final virtual hidebysig newslot specialname 
			instance valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.AcceleratorTestState Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.get_RecordedAcceleratorTestState()
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl::get_RecordedAcceleratorTestState
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance void Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.set_ExpectedAcceleratorTestState(valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.ExpectedAccelTestState 'value')
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl::set_ExpectedAcceleratorTestState
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.TabTestState Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.get_ExpectedTabTestState()
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl::get_ExpectedTabTestState
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance void Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.set_ExpectedTabTestState(valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.TabTestState 'value')
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl::set_ExpectedTabTestState
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.TabTestState Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.get_RecordedTabTestState()
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl::get_RecordedTabTestState
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig 
			instance void SetTabTrace(native int hwnd)
		{
			ret
		}
		.method public hidebysig 
			instance void ResetRecordToken()
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.SetFocusToFirstChild(bool first)
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl::SetFocusToFirstChild
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance void Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.set_NeedRecord(bool 'value')
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl::set_NeedRecord
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.ResetTestState()
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl::ResetTestState
			ret
		}
		.method private final virtual hidebysig newslot 
			instance class Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.AddChild(string childType)
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl::AddChild
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.AddMnemonic(string letter, valuetype [WindowsBase]System.Windows.Input.ModifierKeys modifier)
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl::AddMnemonic
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance int32 Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.get_RecordedMnemonics()
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl::get_RecordedMnemonics
			ret
		}
		.property instance valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.ExpectedAccelTestState Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.ExpectedAcceleratorTestState()
		{
			.set instance void Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.Win32Window::Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.set_ExpectedAcceleratorTestState(valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.ExpectedAccelTestState)
		}
		.property instance valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.TabTestState Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.ExpectedTabTestState()
		{
			.get instance valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.TabTestState Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.Win32Window::Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.get_ExpectedTabTestState()
			.set instance void Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.Win32Window::Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.set_ExpectedTabTestState(valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.TabTestState)
		}
		.property instance bool Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.NeedRecord()
		{
			.set instance void Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.Win32Window::Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.set_NeedRecord(bool)
		}
		.property instance valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.AcceleratorTestState Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.RecordedAcceleratorTestState()
		{
			.get instance valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.AcceleratorTestState Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.Win32Window::Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.get_RecordedAcceleratorTestState()
		}
		.property instance int32 Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.RecordedMnemonics()
		{
			.get instance int32 Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.Win32Window::Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.get_RecordedMnemonics()
		}
		.property instance valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.TabTestState Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.RecordedTabTestState()
		{
			.get instance valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.TabTestState Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.Win32Window::Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.get_RecordedTabTestState()
		}
	}
	.class public WinForm
		extends [System.Windows.Forms]System.Windows.Forms.Form
		implements Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl
	{
		.class nested public AcceleratorKey
			extends [mscorlib]System.Object
		{
			.method public hidebysig specialname 
				instance void .ctor()
			{
				ret
			}
			.method public hidebysig specialname 
				instance void .ctor(valuetype [System.Windows.Forms]System.Windows.Forms.Keys key)
			{
				ret
			}
			.method public hidebysig specialname 
				instance valuetype [System.Windows.Forms]System.Windows.Forms.Keys get_Key()
			{
				ret
			}
			.method public hidebysig specialname 
				instance void set_Key(valuetype [System.Windows.Forms]System.Windows.Forms.Keys 'value')
			{
				ret
			}
			.method public virtual hidebysig 
				instance int32 GetHashCode()
			{
				ret
			}
			.method public virtual hidebysig 
				instance bool Equals(object obj)
			{
				ret
			}
			.property instance valuetype [System.Windows.Forms]System.Windows.Forms.Keys Key()
			{
				.get instance valuetype [System.Windows.Forms]System.Windows.Forms.Keys Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.WinForm/AcceleratorKey::get_Key()
				.set instance void Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.WinForm/AcceleratorKey::set_Key(valuetype [System.Windows.Forms]System.Windows.Forms.Keys)
			}
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig specialname 
			instance class Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl get_Child()
		{
			ret
		}
		.method public hidebysig 
			instance void AddChild(object sender, class [mscorlib]System.EventArgs e)
		{
			ret
		}
		.method family hidebysig 
			instance void InitializeAccelerators()
		{
			ret
		}
		.method family virtual hidebysig 
			instance bool ProcessCmdKey(valuetype [System.Windows.Forms]System.Windows.Forms.Message& msg, valuetype [System.Windows.Forms]System.Windows.Forms.Keys keyData)
		{
			ret
		}
		.method private final virtual hidebysig newslot 
			instance class Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.AddChild(string childType)
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl::AddChild
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.AcceleratorTestState Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.get_RecordedAcceleratorTestState()
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl::get_RecordedAcceleratorTestState
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance void Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.set_ExpectedAcceleratorTestState(valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.ExpectedAccelTestState 'value')
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl::set_ExpectedAcceleratorTestState
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.AddMnemonic(string letter, valuetype [WindowsBase]System.Windows.Input.ModifierKeys modifier)
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl::AddMnemonic
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance int32 Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.get_RecordedMnemonics()
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl::get_RecordedMnemonics
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.SetFocusToFirstChild(bool bFirst)
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl::SetFocusToFirstChild
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance void Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.set_NeedRecord(bool 'value')
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl::set_NeedRecord
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.TabTestState Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.get_ExpectedTabTestState()
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl::get_ExpectedTabTestState
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance void Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.set_ExpectedTabTestState(valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.TabTestState 'value')
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl::set_ExpectedTabTestState
			ret
		}
		.method private final virtual hidebysig newslot specialname 
			instance valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.TabTestState Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.get_RecordedTabTestState()
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl::get_RecordedTabTestState
			ret
		}
		.method private final virtual hidebysig newslot 
			instance void Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.ResetTestState()
		{
			.override Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl::ResetTestState
			ret
		}
		.property instance valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.ExpectedAccelTestState Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.ExpectedAcceleratorTestState()
		{
			.set instance void Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.WinForm::Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.set_ExpectedAcceleratorTestState(valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.ExpectedAccelTestState)
		}
		.property instance valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.TabTestState Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.ExpectedTabTestState()
		{
			.get instance valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.TabTestState Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.WinForm::Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.get_ExpectedTabTestState()
			.set instance void Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.WinForm::Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.set_ExpectedTabTestState(valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.TabTestState)
		}
		.property instance bool Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.NeedRecord()
		{
			.set instance void Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.WinForm::Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.set_NeedRecord(bool)
		}
		.property instance valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.AcceleratorTestState Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.RecordedAcceleratorTestState()
		{
			.get instance valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.AcceleratorTestState Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.WinForm::Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.get_RecordedAcceleratorTestState()
		}
		.property instance int32 Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.RecordedMnemonics()
		{
			.get instance int32 Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.WinForm::Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.get_RecordedMnemonics()
		}
		.property instance valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.TabTestState Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.RecordedTabTestState()
		{
			.get instance valuetype Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.TabTestState Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.WinForm::Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl.get_RecordedTabTestState()
		}
		.property instance class Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl Child()
		{
			.get instance class Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.IKeyboardInteropTestControl Avalon.Test.CoreUI.Trusted.Controls.KeyboardInteropModelControls.WinForm::get_Child()
		}
	}
}
.namespace Avalon.Test.CoreUI.Trusted.Helper
{
	.class public PEWindow
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			.permissionset assert = (2E 01 7E 53 79 73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E 55 49 50 65 72 6D 69 73 73 69 6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 32 2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36 31 39 33 34 65 30 38 39 80 8A 01 54 55 7B 53 79 73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E 55 49 50 65 72 6D 69 73 73 69 6F 6E 57 69 6E 64 6F 77 2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 32 2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36 31 39 33 34 65 30 38 39 06 57 69 6E 64 6F 77 03 00 00 00)
			ret
		}
		.method family virtual hidebysig newslot 
			instance void TestSetupUI(class [PresentationFramework]System.Windows.Window testWindow)
		{
			ret
		}
		.method public hidebysig 
			instance valuetype [mscorlib]'System.Nullable`1'<bool> ShowDialog()
		{
			ret
		}
		.method family hidebysig 
			instance void SetResultAbort()
		{
			ret
		}
		.method family hidebysig 
			instance void SetResultOK()
		{
			ret
		}
		.method family hidebysig specialname 
			instance bool get_IsResultSetAbort()
		{
			ret
		}
		.method family virtual hidebysig newslot 
			instance bool PulseEvery100Ms(int32 pulseCount)
		{
			.permissionset assert = (2E 02 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69 6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 32 2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36 31 39 33 34 65 30 38 39 80 8D 01 54 55 7F 53 79 73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67 2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 32 2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C 61 67 73 02 00 00 00 7E 53 79 73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E 55 49 50 65 72 6D 69 73 73 69 6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 32 2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36 31 39 33 34 65 30 38 39 80 8A 01 54 55 7B 53 79 73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E 55 49 50 65 72 6D 69 73 73 69 6F 6E 57 69 6E 64 6F 77 2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 32 2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36 31 39 33 34 65 30 38 39 06 57 69 6E 64 6F 77 03 00 00 00)
			ret
		}
		.method family hidebysig 
			instance void WindowAssert(bool condition, string message)
		{
			ret
		}
		.property instance bool IsResultSetAbort()
		{
			.get instance bool Avalon.Test.CoreUI.Trusted.Helper.PEWindow::get_IsResultSetAbort()
		}
	}
	.class public abstract sealed Utility
		extends [mscorlib]System.Object
	{
		.method public static hidebysig 
			valuetype [mscorlib]'System.Nullable`1'<bool> ShowWindowDialog(class Avalon.Test.CoreUI.Trusted.Helper.PEWindow window)
		{
			.permissionset assert = (2E 02 80 84 53 79 73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69 6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 32 2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36 31 39 33 34 65 30 38 39 80 8D 01 54 55 7F 53 79 73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E 53 65 63 75 72 69 74 79 50 65 72 6D 69 73 73 69 6F 6E 46 6C 61 67 2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 32 2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36 31 39 33 34 65 30 38 39 05 46 6C 61 67 73 02 00 00 00 7E 53 79 73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E 55 49 50 65 72 6D 69 73 73 69 6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 32 2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36 31 39 33 34 65 30 38 39 80 8A 01 54 55 7B 53 79 73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E 55 49 50 65 72 6D 69 73 73 69 6F 6E 57 69 6E 64 6F 77 2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 32 2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36 31 39 33 34 65 30 38 39 06 57 69 6E 64 6F 77 03 00 00 00)
			ret
		}
		.method public static hidebysig 
			void RaiseMouseEnterEventOnElement(class [PresentationFramework]System.Windows.FrameworkElement element)
		{
			.permissionset assert = (2E 01 7E 53 79 73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E 55 49 50 65 72 6D 69 73 73 69 6F 6E 41 74 74 72 69 62 75 74 65 2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 32 2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36 31 39 33 34 65 30 38 39 80 8A 01 54 55 7B 53 79 73 74 65 6D 2E 53 65 63 75 72 69 74 79 2E 50 65 72 6D 69 73 73 69 6F 6E 73 2E 55 49 50 65 72 6D 69 73 73 69 6F 6E 57 69 6E 64 6F 77 2C 20 6D 73 63 6F 72 6C 69 62 2C 20 56 65 72 73 69 6F 6E 3D 32 2E 30 2E 30 2E 30 2C 20 43 75 6C 74 75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75 62 6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 62 37 37 61 35 63 35 36 31 39 33 34 65 30 38 39 06 57 69 6E 64 6F 77 03 00 00 00)
			ret
		}
	}
}
.namespace Avalon.Test.CoreUI.Trusted.Security
{
	.class public TestBeginInvokeSecurity
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method public hidebysig 
			instance void PostingFromUnTrustedDLL()
		{
			ret
		}
		.method public static hidebysig 
			object ReadDirectory(object o)
		{
			ret
		}
		.field static public class [WindowsBase]System.Windows.Threading.Dispatcher DDispatcher
	}
}
.namespace Avalon.Test.CoreUI.Trusted.Threading
{
	.class public SecurityTestDispatcherHooks
		extends [mscorlib]System.Object
	{
		.method public hidebysig 
			instance void TestOperationCompleted()
		{
			ret
		}
		.method public static hidebysig 
			void GetCurrentDirectory(object sender, class [WindowsBase]System.Windows.Threading.DispatcherHookEventArgs e)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
}
.namespace Avalon.Test.CoreUI.Trusted.Utilities
{
	.class public InternalObject
		extends [mscorlib]System.Object
	{
		.method public hidebysig specialname 
			instance object get_Target()
		{
			ret
		}
		.method public hidebysig 
			instance class [mscorlib]System.Type GetRealType()
		{
			ret
		}
		.method public static hidebysig 
			class Avalon.Test.CoreUI.Trusted.Utilities.InternalObject CreateInstance(string assemblyName, string typeName, object[] args)
		{
			ret
		}
		.method public static hidebysig 
			class [mscorlib]System.Delegate CreateDelegate(string assemblyName, string typeName, string methodName, object 'instance')
		{
			ret
		}
		.method public static hidebysig 
			class [mscorlib]System.Type GetType(string assemblyName, string typeName)
		{
			ret
		}
		.method public static hidebysig 
			class Avalon.Test.CoreUI.Trusted.Utilities.InternalObject CreateGenericInstance(string assemblyName, string typeName, object[] args, class [mscorlib]System.Type[] typeArguments)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(object obj)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor(string assemblyName, string typeName)
		{
			ret
		}
		.method public hidebysig 
			instance object AccessMember(string name, valuetype [mscorlib]System.Reflection.BindingFlags bindingFlags, object[] parameters)
		{
			ret
		}
		.method public hidebysig 
			instance object InvokeMethod(string name)
		{
			ret
		}
		.method public hidebysig 
			instance object InvokeMethod(string name, object[] parameters)
		{
			.param [2]
			.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = { }
			ret
		}
		.method public hidebysig 
			instance object InvokeMethod(string name, valuetype [mscorlib]System.Reflection.BindingFlags bindingFlags, object[] parameters)
		{
			ret
		}
		.method public hidebysig 
			instance object GetIndexer(object key)
		{
			ret
		}
		.method public hidebysig 
			instance object GetIndexer(object key, valuetype [mscorlib]System.Reflection.BindingFlags bindingFlags)
		{
			ret
		}
		.method public hidebysig 
			instance void SetIndexer(object key, object val)
		{
			ret
		}
		.method public hidebysig 
			instance void SetIndexer(object key, object val, valuetype [mscorlib]System.Reflection.BindingFlags bindingFlags)
		{
			ret
		}
		.method public hidebysig 
			instance object GetField(string name)
		{
			ret
		}
		.method public hidebysig 
			instance object GetField(string name, valuetype [mscorlib]System.Reflection.BindingFlags bindingFlags)
		{
			ret
		}
		.method public hidebysig 
			instance void SetField(string name, object val)
		{
			ret
		}
		.method public hidebysig 
			instance void SetField(string name, valuetype [mscorlib]System.Reflection.BindingFlags bindingFlags, object val)
		{
			ret
		}
		.method public hidebysig 
			instance object GetProperty(string name)
		{
			ret
		}
		.method public hidebysig 
			instance object GetProperty(string name, valuetype [mscorlib]System.Reflection.BindingFlags bindingFlags)
		{
			ret
		}
		.method public hidebysig 
			instance void SetProperty(string name, object val)
		{
			ret
		}
		.method public hidebysig 
			instance void SetProperty(string name, valuetype [mscorlib]System.Reflection.BindingFlags bindingFlags, object val)
		{
			ret
		}
		.property instance object Target()
		{
			.get instance object Avalon.Test.CoreUI.Trusted.Utilities.InternalObject::get_Target()
		}
	}
}
