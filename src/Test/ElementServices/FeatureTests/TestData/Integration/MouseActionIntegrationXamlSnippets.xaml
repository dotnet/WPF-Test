<!--
/*******************************************************************
 * Purpose: Xaml snippets used for tree construction in Style integration action.  
 *
 * Contributors: 
 *
 
  
 * Revision:         $Revision: 2 $
 
 * Filename:         $Source: //depot/devdiv/Orcas/SP/feature/WPF/wpf/Test/ElementServices/FeatureTests/TestData/testcases/Integration/MouseActionIntegrationXamlSnippets.xaml $
********************************************************************/
-->

<Canvas
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:cc="clr-namespace:Avalon.Test.CoreUI.Parser;assembly=ElementServicesTest"
      xmlns:cmn="clr-namespace:Microsoft.Test.Serialization.CustomElements;assembly=TestRuntime"
      xmlns:sys="clr-namespace:System;assembly=mscorlib"
>
  <!-- 
  ****************************************
  **** Property Values *******************
  ****************************************
  -->
  <PropertyTestValue ValueFormat="Simple" ValueType="Boolean" PropertyName="AllowDrop">
    <Value>
      false
    </Value>
    <Value>
      true
    </Value>
  </PropertyTestValue>
  <PropertyTestValue ValueFormat="Simple" ValueType="Boolean" PropertyName="Focusable">
    <Value>
      true
    </Value>
    <Value>
      false
    </Value>
  </PropertyTestValue>
  <PropertyTestValue ValueFormat="Simple" ValueType="Boolean" PropertyName="IsEnabled">
    <Value>
      false
    </Value>
    <Value>
      true
    </Value>
  </PropertyTestValue>
  <PropertyTestValue ValueFormat="Simple" ValueType="Boolean" PropertyName="OverridesDefaultStyle">
    <Value>
      true
    </Value>
    <Value>
      false
    </Value>
  </PropertyTestValue>
  <PropertyTestValue ValueFormat="Simple" ValueType="XmlLanguage">
    <Value>
      en-US
    </Value>
    <Value>
      de-DE
    </Value>
  </PropertyTestValue>
  <PropertyTestValue ValueFormat="Simple" ValueType="FlowDirection">
    <Value>
      RightToLeft
    </Value>
    <Value>
      LeftToRight
    </Value>
  </PropertyTestValue>
  <PropertyTestValue ValueFormat="Simple" ValueType="Cursor">
    <Value>
      Hand
    </Value>
    <Value>
      Arrow
    </Value>
  </PropertyTestValue>
  <PropertyTestValue ValueFormat="Simple" ValueType="FontFamily">
    <Value>
      Arial
    </Value>
    <Value>
      Tahoma
    </Value>
  </PropertyTestValue>
  <PropertyTestValue ValueFormat="Simple" ValueType="TextAlignment">
    <Value>
      Right
    </Value>
    <Value>
      Left
    </Value>
  </PropertyTestValue>
  <PropertyTestValue ValueFormat="Simple" ValueType="FontStretch">
    <Value>
      2
    </Value>
    <Value>
      5
    </Value>
  </PropertyTestValue>
  <PropertyTestValue ValueFormat="Simple" ValueType="FontWeight">
    <Value>
      20
    </Value>
    <Value>
      25
    </Value>
  </PropertyTestValue>
  <PropertyTestValue ValueFormat="Simple" ValueType="FontStyle">
    <Value>
      Italic
    </Value>
    <Value>
      Normal
    </Value>
  </PropertyTestValue>
  <PropertyTestValue ValueFormat="Simple" ValueType="Double">
    <Value>
      100.0
    </Value>
    <Value>
      80.0
    </Value>
  </PropertyTestValue>
  <PropertyTestValue ValueFormat="Simple" ValueType="Thickness">
    <Value>
      2, 5, 2, 5
    </Value>
    <Value>
      5, 2, 5, 2
    </Value>
  </PropertyTestValue>
  <PropertyTestValue ValueFormat="Simple" ValueType="Object" PropertyName="Tag">
    <Value>
      TagValue
    </Value>
    <Value>
      AnotherTagValue
    </Value>
  </PropertyTestValue>
  <PropertyTestValue ValueFormat="Simple" ValueType="Boolean" PropertyName="ForceCursor">
    <Value>
      true
    </Value>
    <Value>
      false
    </Value>
  </PropertyTestValue>
  <PropertyTestValue ValueFormat="Simple" ValueType="Double" PropertyName="Zoom" ValueOwnerType="DocumentViewer">
    <Value>
      100
    </Value>
    <Value>
      80
    </Value>
  </PropertyTestValue>
  <PropertyTestValue ValueFormat="Simple" ValueType="Brush" PropertyName="BorderBrush">
    <Value>
      Blue
    </Value>
    <Value>
      Pink
    </Value>
  </PropertyTestValue>
  <PropertyTestValue ValueFormat="Simple" ValueType="Brush" ValueOwnerType="Button">
    <Value>
      Pink
    </Value>
    <Value>
      Yellow
    </Value>
  </PropertyTestValue>
  <PropertyTestValue ValueFormat="Complex" ValueType="Brush">
    <Value>
      <SolidColorBrush Color="Green" />
    </Value>
    <Value>
      <SolidColorBrush Color="White" />
    </Value>
  </PropertyTestValue>
  <PropertyTestValue ValueFormat="Complex" ValueType="Transform">
    <Value>
      <TransformGroup>
        <ScaleTransform ScaleX=".5" ScaleY=".5" />
        <SkewTransform AngleX="10" AngleY="10" />
      </TransformGroup>
    </Value>
    <Value>
      <TransformGroup>
        <ScaleTransform ScaleX=".2" ScaleY=".5" />
        <SkewTransform AngleX="8" AngleY="10" />
      </TransformGroup>
    </Value>
  </PropertyTestValue>
  <PropertyTestValue ValueFormat="Complex" ValueType="BitmapEffect">
    <Value>
      <BitmapEffectGroup>
        <BlurBitmapEffect Radius="3" />
        <OuterGlowBitmapEffect GlowColor="blue" />
      </BitmapEffectGroup>
    </Value>
    <Value>
      <BitmapEffectGroup>
        <BlurBitmapEffect Radius="3" />
        <OuterGlowBitmapEffect GlowColor="blue" />
      </BitmapEffectGroup>
    </Value>
  </PropertyTestValue>
  <PropertyTestValue ValueFormat="Complex" ValueType="ControlTemplate" ValueOwnerType="DocumentViewer">
    <Value>
      <ControlTemplate TargetType="{x:Type DocumentViewer}">
        <ScrollViewer Name="PART_ContentHost">
          <ContentPresenter />
        </ScrollViewer>
      </ControlTemplate>
    </Value>
    <Value>
      <ControlTemplate TargetType="{x:Type DocumentViewer}">
        <ScrollViewer Name="PART_ContentHost">
          <ContentPresenter />
        </ScrollViewer>
      </ControlTemplate>
    </Value>
  </PropertyTestValue>
  <PropertyTestValue ValueFormat="Complex" ValueType="ControlTemplate">
    <Value>
      <ControlTemplate TargetType="{x:Type Control}">
        <ContentPresenter />
      </ControlTemplate>
    </Value>
    <Value>
      <ControlTemplate TargetType="{x:Type Control}">
        <Border />
      </ControlTemplate>
    </Value>
  </PropertyTestValue>
  <PropertyTestValue ValueFormat="Complex" ValueType="Style" PropertyName="ItemContainerStyle">
    <Value>
      <Style TargetType="{x:Type FrameworkElement}">
        <Setter Property="Width" Value="100.0" />
      </Style>
    </Value>
    <Value>
      <Style TargetType="{x:Type FrameworkElement}">
        <Setter Property="Height" Value="100.0" />
      </Style>
    </Value>
  </PropertyTestValue>
  <PropertyTestValue ValueFormat="Complex" ValueType="Style" PropertyName="FocusVisualStyle">
    <Value>
      <Style TargetType="{x:Type FrameworkElement}">
        <Setter Property="Width" Value="100.0" />
      </Style>
    </Value>
    <Value>
      <Style TargetType="{x:Type FrameworkElement}">
        <Setter Property="Height" Value="100.0" />
      </Style>
    </Value>
  </PropertyTestValue>
  <PropertyTestValue ValueFormat="Complex" ValueType="StrokeCollection">
    <Value>
      <StrokeCollection xmlns="clr-namespace:System.Windows.Ink;assembly=PresentationCore" />
    </Value>
  </PropertyTestValue>
  <PropertyTestValue ValueFormat="Simple" ValueType="HorizontalAlignment">
    <Value>
      Right
    </Value>
    <Value>
      Left
    </Value>
  </PropertyTestValue>
  <PropertyTestValue ValueFormat="Simple" ValueType="VerticalAlignment">
    <Value>
      Bottom
    </Value>
    <Value>
      Top
    </Value>
  </PropertyTestValue>
  <PropertyTestValue ValueFormat="Simple" ValueType="ClickMode">
    <Value>Hover</Value>
    <Value>Press</Value>
  </PropertyTestValue>
  <PropertyTestValue ValueFormat="Simple" ValueType="InputScope">
    <Value>RegularExpression</Value>
    <Value>DateDay</Value>
  </PropertyTestValue>
  <PropertyTestValue ValueFormat="Simple" ValueType="Int">
    <Value>2</Value>
    <Value>5</Value>
  </PropertyTestValue>
  <PropertyTestValue ValueFormat="Simple" ValueType="Boolean">
    <Value>true</Value>
    <Value>false</Value>
  </PropertyTestValue>
  <PropertyTestValue ValueFormat="Simple" ValueType="Boolean" PropertyName="IsItemsHost">
    <Value>false</Value>
    <Value>true</Value>
  </PropertyTestValue>
  <!-- The following two properties may need little time to change to true. I cannot repro it with xamlview. -->
  <PropertyTestValue ValueFormat="Simple" ValueType="Boolean" PropertyName="IsOpen" >
    <Value>false</Value>
    <Value>true</Value>
  </PropertyTestValue>
  <PropertyTestValue ValueFormat="Simple" ValueType="Boolean" PropertyName="HasDropShadow" >
    <Value>false</Value>
    <Value>true</Value>
  </PropertyTestValue>
  <PropertyTestValue ValueFormat="Simple" ValueType="Double" PropertyName="Value" >
    <Value>0.5</Value>
    <Value>0.8</Value>
  </PropertyTestValue>
  <PropertyTestValue ValueFormat="Simple" ValueType="Double" PropertyName="Minimum" >
    <Value>0</Value>
    <Value>0.3</Value>
  </PropertyTestValue>

  <!-- 
  ****************************************
  **** Containers ************************
  ****************************************
  -->

  <TypeContainer Type="FrameworkElement">
    <StackPanel Name="ContainerElement" />
  </TypeContainer>
    
  <TypeContainer Type="ContextMenu">
    <Button Height="100" Width="100">
      <Button.ContextMenu Name="ContainerElement" >
      </Button.ContextMenu>
    </Button>
  </TypeContainer>

  <Element Type="ContextMenu">
    <ContextMenu StaysOpen="true" Name="elementWithInitialValues" Width="100" Height="100">
      <MenuItem Header="File"/>
      <MenuItem Header="Save"/>
      <MenuItem Header="SaveAs"/>
      <MenuItem Header="Recent Files">
      </MenuItem>
    </ContextMenu>
  </Element>

  <Element Type="ToolTip">
    <ToolTip StaysOpen="true" Name="elementWithInitialValues" Width="100" Height="100">
      ToolTip
    </ToolTip>
  </Element>

  <Element Type="Popup">
    <Popup IsOpen="true" Name="elementWithInitialValues" Height="95" Width="95" >
      <Border Height="50" Width="90" BorderThickness="50" BorderBrush="Green"/>
    </Popup>
  </Element>
  
  <TypeContainer Type="ToolTip">
    <Button>
      <Button.ToolTip Name="ContainerElement">
      </Button.ToolTip>
    </Button>
  </TypeContainer>

  <TypeContainer Type="FrameworkContentElement">
    <ListBox Name="ContainerElement" />
  </TypeContainer>

  <TypeContainer Type="AnchoredBlock">
    <FlowDocumentScrollViewer Height="100" Width="100">
      <FlowDocument>
        <Paragraph Name="ContainerElement">
        </Paragraph>
      </FlowDocument>
    </FlowDocumentScrollViewer>
    <TestElement Name="Content">
      <Paragraph FontSize="60" >
          Text Text
      </Paragraph>
    </TestElement>
  </TypeContainer>
  
  <TypeContainer Type="Inline">
    <TextBlock Name="ContainerElement"/>
    <TestElement Name="Content">
      Text Text
    </TestElement>    
  </TypeContainer>

  <TypeContainer Type="LineBreak">
    <TextBlock  Height="100" Width="100" Background="Blue" Name="ContainerElement" />
  </TypeContainer>

  <TypeContainer Type="InlineUIContainer">
    <TextBlock Name="ContainerElement"/>
    <TestElement Name="Content">
      <Button/>
    </TestElement>
  </TypeContainer>
    
  <TypeContainer Type="Block">
    <FlowDocumentScrollViewer>
      <FlowDocument Name="ContainerElement" />
    </FlowDocumentScrollViewer>
    <TestElement Name="Content">
      Text Text
    </TestElement>
  </TypeContainer>

  <TypeContainer Type="BlockUIContainer">
    <FlowDocumentScrollViewer>
      <FlowDocument Name="ContainerElement" />
    </FlowDocumentScrollViewer>
    <TestElement Name="Content">
      <Button/>
    </TestElement>
  </TypeContainer>  

  <TypeContainer Type="Table">
    <FlowDocumentScrollViewer>
      <FlowDocument Name="ContainerElement" />
    </FlowDocumentScrollViewer>
    <TestElement Name="Content">
      <TableRowGroup>
        <TableRow>
          <TableCell>
            <Paragraph FontSize="10" FontWeight="Bold">The Inner Planets</Paragraph>
          </TableCell>
        </TableRow>
      </TableRowGroup>
    </TestElement>
  </TypeContainer>  

  <TypeContainer Type="Block">
    <FlowDocumentScrollViewer>
      <FlowDocument Name="ContainerElement" />
    </FlowDocumentScrollViewer>
    <TestElement Name="Content">
      Text Text
    </TestElement>
  </TypeContainer>

  <TypeContainer Type="Section">
    <FlowDocumentScrollViewer>
      <FlowDocument Name="ContainerElement" />
    </FlowDocumentScrollViewer>
    <TestElement Name="Content">
      <Paragraph>Another block section of text</Paragraph>
    </TestElement>
  </TypeContainer>  

  <TypeContainer Type="TableColumn">
    <FlowDocumentScrollViewer Height="100" Width="100">
      <FlowDocument LineHeight="8" ColumnWidth ="100" Background="Blue">
        <Table>
          <TableRowGroup>
            <TableRow>
              <TableCell>
                <Paragraph FontSize="20" FontWeight="Bold">The Inner Planets</Paragraph>
              </TableCell>
            </TableRow>
          </TableRowGroup>
      <Table.Columns Name="ContainerElement" />
      </Table>
    </FlowDocument>
    </FlowDocumentScrollViewer>
  </TypeContainer>

  <TypeContainer Type="TableRowGroup">
    <FlowDocumentScrollViewer Height="100" Width="100">
      <FlowDocument LineHeight="8" ColumnWidth ="100" Background="Blue">
        <Table Name="ContainerElement" />
      </FlowDocument>
    </FlowDocumentScrollViewer>
    <TestElement Name="Content">
      <TableRow Background="SkyBlue">
        <TableCell ColumnSpan="4" TextAlignment="Center">
          <Paragraph FontSize="24pt" FontWeight="Bold">Planetary Information</Paragraph>
        </TableCell>
      </TableRow>
      <TableRow Background="SkyBlue">
        <TableCell ColumnSpan="4" TextAlignment="Center">
          <Paragraph FontSize="24pt" FontWeight="Bold">Planetary Information</Paragraph>
        </TableCell>
      </TableRow>
    </TestElement>
  </TypeContainer>

  <TypeContainer Type="TableRow">
    <FlowDocumentScrollViewer Height="100" Width="100">
      <FlowDocument LineHeight="8" ColumnWidth ="100" Background="Blue">
        <Table>
          <TableRowGroup Name="ContainerElement" />
        </Table>
      </FlowDocument>
    </FlowDocumentScrollViewer >
    <TestElement Name="Content">
      <TableCell ColumnSpan="4" TextAlignment="Center">
        <Paragraph FontSize="24pt" FontWeight="Bold">Planetary Information</Paragraph>
        <Paragraph FontSize="24pt" FontWeight="Bold">Planetary Information</Paragraph>
        <Paragraph FontSize="24pt" FontWeight="Bold">Planetary Information</Paragraph>        
      </TableCell>
    </TestElement> 
  </TypeContainer>

  <TypeContainer Type="TableCell">
    <FlowDocumentScrollViewer>
      <FlowDocument>
        <Table>
        <TableRowGroup>
        <TableRow Name="ContainerElement" />
        </TableRowGroup>
        </Table>
      </FlowDocument>
    </FlowDocumentScrollViewer>
  </TypeContainer>

  <TypeContainer Type="ListItem">
    <FlowDocumentScrollViewer Height="100" Width="100">
      <FlowDocument ColumnWidth ="100" LineHeight="8"  Background="Blue">
        <List Name="ContainerElement" />
      </FlowDocument>       
    </FlowDocumentScrollViewer>
    <TestElement Name="Content">
      <Paragraph>hello</Paragraph>
      <Paragraph>hello</Paragraph>
      <Paragraph>hello</Paragraph>
      <Paragraph>hello</Paragraph>
      <Paragraph>hello</Paragraph>
      <Paragraph>hello</Paragraph>
      <Paragraph>hello</Paragraph>
      <Paragraph>hello</Paragraph>
      <Paragraph>hello</Paragraph>
      <BlockUIContainer>
      <Button ></Button>
      </BlockUIContainer>
    </TestElement>    
  </TypeContainer>

  <TypeContainer Type="List">
    <FlowDocumentScrollViewer>
      <FlowDocument Name="ContainerElement">
      </FlowDocument>
    </FlowDocumentScrollViewer>
    <TestElement Name="Content">
      <ListItem>
          <Paragraph>Boron</Paragraph>
      </ListItem>
    </TestElement>
  </TypeContainer>  

  <TypeContainer Type="ColumnDefinition">
    <Grid>
      <Grid.ColumnDefinitions Name="ContainerElement" />
      <Canvas Width="100" Height="100" />
    </Grid>
  </TypeContainer>

  <TypeContainer Type="RowDefinition">
    <Grid>
      <Grid.RowDefinitions Name="ContainerElement" />
      <Canvas Width="100" Height="100" />
    </Grid>
  </TypeContainer>

  <TypeContainer Type="FlowDocument">
    <FlowDocumentScrollViewer Name="ContainerElement" />
  </TypeContainer>

  <TypeContainer Type="FixedDocument">
  <DocumentViewer Name="ContainerElement" Height="100" Width="100"/>
    <TestElement Name="Content">
      <PageContent Source="FixedPage_1.xaml"/>
      <PageContent Source="FixedPage_2.xaml"/>
    </TestElement>    
  </TypeContainer>

  <TypeContainer Type="FixedDocumentSequence">
    <DocumentViewer Name="ContainerElement" />
    <TestElement Name="Content">
      <DocumentReference  Source="FixedPage_1.xaml"/>
    </TestElement>
  </TypeContainer>
  
  <Element Type="DocumentReference">
    <DocumentViewer>
      <FixedDocumentSequence>
        <DocumentReference Name="elementWithInitialValues" Source="FixedDocument_01.xaml" />
      </FixedDocumentSequence>
    </DocumentViewer>
  </Element>

  <Element Type="Line">
    <Line
      Name="elementWithInitialValues"
      Height="100" 
      Width="100" 
      X1="10" Y1="10"
      X2="80" Y2="80"
      Stroke="Black"
      StrokeThickness="60" />
  </Element>
    
  <Element Type="Polygon">
    <Polygon Name="elementWithInitialValues" Points="0,50 100,0 100,100" Fill="Blue" />
  </Element>

  <Element Type="Path">
    <Path Height="100" Width="100" Stroke="Black" StrokeThickness="10" Fill="Blue" Name="elementWithInitialValues">
      <Path.Data>
        <PathGeometry>
          <PathGeometry.Figures>
            <PathFigureCollection>
              <PathFigure IsClosed="True" StartPoint="0,50">
                <PathFigure.Segments>
                  <PathSegmentCollection>
                    <LineSegment Point="100,0" />
                    <LineSegment Point="100,100" />
                    <LineSegment Point="0,100" />
                    <LineSegment Point="0,50" />
                  </PathSegmentCollection>
                </PathFigure.Segments>
              </PathFigure>
            </PathFigureCollection>
          </PathGeometry.Figures>
        </PathGeometry>
      </Path.Data>
    </Path>
  </Element>

  <Element Type="Polyline">
    <Polyline
      Name="elementWithInitialValues"
      Points="0,0 100,0 100,100 0,100 0,0"
      Fill ="Blue"
      Stroke="Black"
      StrokeThickness="4" />
  </Element>

  <Element Type="FlowDocumentPageViewer">
    <FlowDocumentPageViewer
      Name="elementWithInitialValues"
      Height="100" Width="100">
      <FlowDocument LineHeight="8" ColumnWidth ="100" Background="Blue">
        <Paragraph>
          a b c d e f g h i j k l m n o p q r t u a b c d e f g h i j k l m n o p q r t u
        </Paragraph>
        <BlockUIContainer>
          <Button/>
        </BlockUIContainer>
      </FlowDocument>
    </FlowDocumentPageViewer>
  </Element>

  <Element Type="Image">
    <Image
      Name="elementWithInitialValues"
      Height="100" Width="100"
      Source="bmp.bmp"/>
  </Element>

  <Element Type="PageContent">
  <DocumentViewer >
    <FixedDocument>
      <PageContent Name="elementWithInitialValues">
      <PageContent.Source>
        FixedPage_1.xaml
      </PageContent.Source>
      </PageContent>
    </FixedDocument>
  </DocumentViewer>
  </Element>
  
  <Element Type="Glyphs">
    <Glyphs 
      Name="elementWithInitialValues"
       Height              = "100" 
       Width               = "100" 
       FontUri             = "C:\Windows\Fonts\times.ttf"
       FontRenderingEmSize = "40"
       StyleSimulations    = "ItalicSimulation"
       UnicodeString       = "[MW]"
       Fill                = "Black"
       OriginX             = "0"
       OriginY             = "60">
    </Glyphs>
  </Element>

  <Element Type="Viewport3D">
  <Viewport3D Name="elementWithInitialValues" Height="100" Width="100">

    <!-- Add a camera. -->
    <Viewport3D.Camera>
      <PerspectiveCamera 
        FarPlaneDistance="20" 
        LookDirection="0,0,1" 
        UpDirection="0,1,0" 
        NearPlaneDistance="1" 
        Position="0,0,-3" 
        FieldOfView="45" />
    </Viewport3D.Camera>

    <!-- Add models. -->
    <Viewport3D.Children>

      <ModelVisual3D>
        <ModelVisual3D.Content>

          <Model3DGroup >
            <Model3DGroup.Children>

              <!-- Lights, MeshGeometry3D and DiffuseMaterial objects are added to the ModelVisual3D. -->
              <DirectionalLight Color="#FFFFFFFF" Direction="3,-4,5" />

              <!-- Define a red cone. -->
              <GeometryModel3D>

                <GeometryModel3D.Geometry>
                  <MeshGeometry3D 
Positions="0.293893 -0.5 0.404509  0.475528 -0.5 0.154509  0 0.5 0  0.475528 -0.5 0.154509  0 0.5 0  0 0.5 0  0.475528 -0.5 0.154509  0.475528 -0.5 -0.154509  0 0.5 0  0.475528 -0.5 -0.154509  0 0.5 0  0 0.5 0  0.475528 -0.5 -0.154509  0.293893 -0.5 -0.404509  0 0.5 0  0.293893 -0.5 -0.404509  0 0.5 0  0 0.5 0  0.293893 -0.5 -0.404509  0 -0.5 -0.5  0 0.5 0  0 -0.5 -0.5  0 0.5 0  0 0.5 0  0 -0.5 -0.5  -0.293893 -0.5 -0.404509  0 0.5 0  -0.293893 -0.5 -0.404509  0 0.5 0  0 0.5 0  -0.293893 -0.5 -0.404509  -0.475528 -0.5 -0.154509  0 0.5 0  -0.475528 -0.5 -0.154509  0 0.5 0  0 0.5 0  -0.475528 -0.5 -0.154509  -0.475528 -0.5 0.154509  0 0.5 0  -0.475528 -0.5 0.154509  0 0.5 0  0 0.5 0  -0.475528 -0.5 0.154509  -0.293892 -0.5 0.404509  0 0.5 0  -0.293892 -0.5 0.404509  0 0.5 0  0 0.5 0  -0.293892 -0.5 0.404509  0 -0.5 0.5  0 0.5 0  0 -0.5 0.5  0 0.5 0  0 0.5 0  0 -0.5 0.5  0.293893 -0.5 0.404509  0 0.5 0  0.293893 -0.5 0.404509  0 0.5 0  0 0.5 0  " 
Normals="0.7236065,0.4472139,0.5257313  0.2763934,0.4472138,0.8506507  0.5308242,0.4294462,0.7306172  0.2763934,0.4472138,0.8506507  0,0.4294458,0.9030925  0.5308242,0.4294462,0.7306172  0.2763934,0.4472138,0.8506507  -0.2763934,0.4472138,0.8506507  0,0.4294458,0.9030925  -0.2763934,0.4472138,0.8506507  -0.5308242,0.4294462,0.7306172  0,0.4294458,0.9030925  -0.2763934,0.4472138,0.8506507  -0.7236065,0.4472139,0.5257313  -0.5308242,0.4294462,0.7306172  -0.7236065,0.4472139,0.5257313  -0.858892,0.429446,0.279071  -0.5308242,0.4294462,0.7306172  -0.7236065,0.4472139,0.5257313  -0.8944269,0.4472139,0  -0.858892,0.429446,0.279071  -0.8944269,0.4472139,0  -0.858892,0.429446,-0.279071  -0.858892,0.429446,0.279071  -0.8944269,0.4472139,0  -0.7236065,0.4472139,-0.5257313  -0.858892,0.429446,-0.279071  -0.7236065,0.4472139,-0.5257313  -0.5308242,0.4294462,-0.7306172  -0.858892,0.429446,-0.279071  -0.7236065,0.4472139,-0.5257313  -0.2763934,0.4472138,-0.8506507  -0.5308242,0.4294462,-0.7306172  -0.2763934,0.4472138,-0.8506507  0,0.4294458,-0.9030925  -0.5308242,0.4294462,-0.7306172  -0.2763934,0.4472138,-0.8506507  0.2763934,0.4472138,-0.8506507  0,0.4294458,-0.9030925  0.2763934,0.4472138,-0.8506507  0.5308249,0.4294459,-0.7306169  0,0.4294458,-0.9030925  0.2763934,0.4472138,-0.8506507  0.7236068,0.4472141,-0.5257306  0.5308249,0.4294459,-0.7306169  0.7236068,0.4472141,-0.5257306  0.8588922,0.4294461,-0.27907  0.5308249,0.4294459,-0.7306169  0.7236068,0.4472141,-0.5257306  0.8944269,0.4472139,0  0.8588922,0.4294461,-0.27907  0.8944269,0.4472139,0  0.858892,0.429446,0.279071  0.8588922,0.4294461,-0.27907  0.8944269,0.4472139,0  0.7236065,0.4472139,0.5257313  0.858892,0.429446,0.279071  0.7236065,0.4472139,0.5257313  0.5308242,0.4294462,0.7306172  0.858892,0.429446,0.279071  "                   TriangleIndices="0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 " />
                </GeometryModel3D.Geometry>

                <GeometryModel3D.Material>
                  <DiffuseMaterial>
                    <DiffuseMaterial.Brush>
                      <SolidColorBrush 
                        Color="Red" 
                        Opacity="1.0"/>
                    </DiffuseMaterial.Brush>
                  </DiffuseMaterial>
                </GeometryModel3D.Material>

              </GeometryModel3D>

            </Model3DGroup.Children>
          </Model3DGroup>

        </ModelVisual3D.Content>

      </ModelVisual3D>

    </Viewport3D.Children>

  </Viewport3D>
  </Element>

  <Element Type="TreeViewItem">
    <TreeViewItem Height="100" Width="100" IsExpanded="true" Name="elementWithInitialValues">
      <Button Height="100" Width="100" />
    </TreeViewItem>
  </Element>

  <Element Type="ToolBarTray">
    <ToolBarTray Name="elementWithInitialValues" Background="Green" Height="100" Width="100">
      <ToolBar Band="1" BandIndex="1">
        <Button></Button>
        <Button></Button>
        <Button></Button>
        <Button></Button>
      </ToolBar>
    </ToolBarTray>
  </Element>

  <Element Type="TickBar">
    <TickBar Name="elementWithInitialValues" Height="100" Width="100" Fill="Red" ></TickBar>
  </Element>

  <Element Type="MediaElement">
    <MediaElement Source="ball.wmv"  Name="elementWithInitialValues" Height="100" Width="100" ></MediaElement>
  </Element>

  <Element Type="InkCanvas">
    <InkCanvas Name="elementWithInitialValues" Width="100" Height="100" Background="Green">
      <Label Name="label1" Background="Black"  Foreground="White" InkCanvas.Left="0" InkCanvas.Right="100" 
        InkCanvas.Top="0" InkCanvas.Bottom="100">my label</Label>
    </InkCanvas>
  </Element>

  <Element Type="Separator">
    <Separator Name="elementWithInitialValues" Width="100" Height="100" Background="Green">
    </Separator>
  </Element>

  <Element Type="ItemsPresenter">
    <ItemsControl>
      <ItemsControl.Resources>
        <Style x:Key="{x:Type ItemsControl}"
          TargetType="{x:Type ItemsControl}">
            <Setter Property="Template">
            <Setter.Value>
              <ControlTemplate TargetType="{x:Type ItemsControl}">
                  <Border Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}"
                  Padding="{TemplateBinding Padding}">
                    <ItemsPresenter Name="elementWithInitialValues"/>
                </Border>
              </ControlTemplate>
          </Setter.Value>
          </Setter>
        </Style>
      </ItemsControl.Resources>
      <Button/>
      <Button/>
      <Button/>
      <Button/>
    </ItemsControl>
  </Element>

  <Element Type="GridViewHeaderRowPresenter">
  <StackPanel xmlns:sys="clr-namespace:System;assembly=mscorlib">
  <StackPanel.Resources>

    <Style x:Key="MyHeaderStyle" TargetType="{x:Type GridViewColumnHeader}">
      <Setter Property="Background" Value="BurlyWood"/>
    </Style>

    <GridViewColumnCollection x:Key="gvcc">
      <GridViewColumn Header="Year" 
        DisplayMemberBinding="{Binding Year}" 
        Width="80"/>
      <GridViewColumn Header="Day"  
        DisplayMemberBinding="{Binding DayOfWeek}" 
        Width="80" />
    </GridViewColumnCollection>

    </StackPanel.Resources>

    <GridViewHeaderRowPresenter Name="elementWithInitialValues" Columns="{StaticResource gvcc}"  
      ColumnHeaderContainerStyle="{StaticResource MyHeaderStyle}" />

    <GridViewRowPresenter Columns="{StaticResource gvcc}" >
    <GridViewRowPresenter.Content>
    <sys:DateTime>2005/2/1</sys:DateTime>
    </GridViewRowPresenter.Content>
    </GridViewRowPresenter>
  </StackPanel>
  </Element>

  <Element Type="GridViewRowPresenter">
  <StackPanel xmlns:sys="clr-namespace:System;assembly=mscorlib" >
    <StackPanel.Resources>
      <DataTemplate x:Key="myCellTemplateMonth">
        <DockPanel>
          <Rectangle Fill="Red" Height="100" Width="100"/>
        </DockPanel>
      </DataTemplate>
      <GridViewColumnCollection x:Key="gvcc" >
        <GridViewColumn 
          CellTemplate ="{StaticResource myCellTemplateMonth }"/>
      </GridViewColumnCollection>
    </StackPanel.Resources>
    <GridViewRowPresenter ClipToBounds="true"   Name="elementWithInitialValues" Columns="{StaticResource gvcc}" >
    </GridViewRowPresenter>
  </StackPanel>
  </Element>

  <Element Type="AdornedElementPlaceholder">
    <Control>
      <Control.Resources>
        <Style TargetType="{x:Type Control}">
          <Setter Property="Template">
            <Setter.Value>
              <ControlTemplate>
                <DockPanel Height="100" Width="100" Background="Blue">
                  <AdornedElementPlaceholder  Name="elementWithInitialValues">
                    <Rectangle Fill="Red" Height="50" Width="50"/>
                  </AdornedElementPlaceholder>
                </DockPanel>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
        </Style>
      </Control.Resources>
    </Control>
  </Element>

  <Element Type="TabControl">
    <TabControl Name="elementWithInitialValues" Height="100" Width="100" >
      <TabItem Header="FontWeight" Height="100" Width="100">
      </TabItem>
    </TabControl>
  </Element>

</Canvas>
