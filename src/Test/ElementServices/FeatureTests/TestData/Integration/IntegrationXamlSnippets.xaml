<!--
/*******************************************************************
 * Purpose: Xaml snippets used for tree construction in Style integration action.  
 *
 * Contributors: 
 *
 
  
 * Revision:         $Revision: 2 $
 
 * Filename:         $Source: //depot/devdiv/Orcas/SP/feature/WPF/wpf/Test/ElementServices/FeatureTests/TestData/testcases/Integration/IntegrationXamlSnippets.xaml $
********************************************************************/
-->

<Canvas
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:cmn="clr-namespace:Microsoft.Test.Serialization.CustomElements;assembly=TestRuntime"
      xmlns:sys="clr-namespace:System;assembly=mscorlib"
>
  <!-- 
  ****************************************
  **** Property Values *******************
  ****************************************
  -->
  <PropertyTestValue ValueFormat="Simple" ValueType="Boolean" PropertyName="AllowDrop">
    <Value>
      false
    </Value>
    <Value>
      true
    </Value>
  </PropertyTestValue>
  <PropertyTestValue ValueFormat="Simple" ValueType="Boolean" PropertyName="Focusable">
    <Value>
      true
    </Value>
    <Value>
      false
    </Value>
  </PropertyTestValue>
  <PropertyTestValue ValueFormat="Simple" ValueType="Boolean" PropertyName="IsEnabled">
    <Value>
      false
    </Value>
    <Value>
      true
    </Value>
  </PropertyTestValue>
  <!--PropertyTestValue ValueFormat="Simple" ValueType="VerticalAlignment" PropertyName="VerticalContentAlignment">
    <Value>
      Top
    </Value>
    <Value>
      Bottom
    </Value>
  </PropertyTestValue>
  <PropertyTestValue ValueFormat="Simple" ValueType="HorizontalAlignment" PropertyName="HorizontalContentAlignment">
    <Value>
      Right
    </Value>
    <Value>
      Left
    </Value>
  </PropertyTestValue-->
  <PropertyTestValue ValueFormat="Complex" ValueType="CornerRadius" PropertyName="CornerRadius">
    <Value>
      <CornerRadius>1,1,1,1</CornerRadius>
    </Value>
    <Value>
      <CornerRadius>2,2,2,2</CornerRadius>
    </Value>
  </PropertyTestValue>
  <PropertyTestValue ValueFormat="Complex" ValueType="Boolean" PropertyName="IsChecked">
    <Value>
      <sys:Boolean>true</sys:Boolean>
    </Value>
    <Value>
      <sys:Boolean>false</sys:Boolean>
    </Value>
  </PropertyTestValue>
  <PropertyTestValue ValueFormat="Simple" ValueType="Boolean" PropertyName="OverridesDefaultStyle">
    <Value>
      true
    </Value>
    <Value>
      false
    </Value>
  </PropertyTestValue>
  <PropertyTestValue ValueFormat="Simple" ValueType="XmlLanguage">
    <Value>
      en-US
    </Value>
    <Value>
      de-DE
    </Value>
  </PropertyTestValue>
  <PropertyTestValue ValueFormat="Simple" ValueType="FlowDirection">
    <Value>
      RightToLeft
    </Value>
    <Value>
      LeftToRight
    </Value>
  </PropertyTestValue>
  <PropertyTestValue ValueFormat="Complex" ValueType="Cursor">
    <Value>
      <Cursor>Hand</Cursor>
    </Value>
    <Value>
      <Cursor>Arrow</Cursor>
    </Value>
  </PropertyTestValue>
  <PropertyTestValue ValueFormat="Complex" ValueType="FontFamily">
    <Value>
      <FontFamily>Arial</FontFamily>
    </Value>
    <Value>
      <FontFamily>Tahoma</FontFamily>
    </Value>
  </PropertyTestValue>
  <PropertyTestValue ValueFormat="Simple" ValueType="TextAlignment">
    <Value>
      Right
    </Value>
    <Value>
      Left
    </Value>
  </PropertyTestValue>
  <PropertyTestValue ValueFormat="Complex" ValueType="FontStretch">
    <Value>
      <FontStretch>UltraCondensed</FontStretch>
    </Value>
    <Value>
      <FontStretch>ExtraCondensed</FontStretch>
    </Value>
  </PropertyTestValue>
  <PropertyTestValue ValueFormat="Complex" ValueType="FontWeight">
    <Value>
      <FontWeight>Bold</FontWeight>
    </Value>
    <Value>
      <FontWeight>Thin</FontWeight>
    </Value>
  </PropertyTestValue>
  <PropertyTestValue ValueFormat="Complex" ValueType="FontStyle">
    <Value>
      <FontStyle>Italic</FontStyle>
    </Value>
    <Value>
      <FontStyle>Normal</FontStyle>
    </Value>
  </PropertyTestValue>
  <PropertyTestValue ValueFormat="Simple" ValueType="Double">
    <Value>
      100.0
    </Value>
    <Value>
      80.0
    </Value>
  </PropertyTestValue>
  <PropertyTestValue ValueFormat="Simple" ValueType="Thickness">
    <Value>
      2, 5, 2, 5
    </Value>
    <Value>
      5, 2, 5, 2
    </Value>
  </PropertyTestValue>
  <PropertyTestValue ValueFormat="Complex" ValueType="Object" PropertyName="Tag">
    <Value>
      <sys:Object>TagValue</sys:Object>
    </Value>
    <Value>
      <sys:Object>AnotherTagValue</sys:Object>
    </Value>
  </PropertyTestValue>
  <PropertyTestValue ValueFormat="Simple" ValueType="Double" PropertyName="Opacity">
    <Value>
      0.5
    </Value>
    <Value>
      0.2
    </Value>
  </PropertyTestValue>

  <PropertyTestValue ValueFormat="Simple" ValueType="Boolean" PropertyName="ForceCursor">
    <Value>
      true
    </Value>
    <Value>
      false
    </Value>
  </PropertyTestValue>
  <PropertyTestValue ValueFormat="Simple" ValueType="Double" PropertyName="Zoom" ValueOwnerType="DocumentViewer">
    <Value>
      100
    </Value>
    <Value>
      80
    </Value>
  </PropertyTestValue>
  <PropertyTestValue ValueFormat="Complex" ValueType="Brush" PropertyName="BorderBrush">
    <Value>
      <SolidColorBrush>Blue</SolidColorBrush>
    </Value>
    <Value>
      <SolidColorBrush>Pink</SolidColorBrush>
    </Value>
  </PropertyTestValue>
  <PropertyTestValue ValueFormat="Simple" ValueType="Brush" ValueOwnerType="Button">
    <Value>
      Pink
    </Value>
    <Value>
      Yellow
    </Value>
  </PropertyTestValue>
  <PropertyTestValue ValueFormat="Complex" ValueType="Brush">
    <Value>
      <SolidColorBrush Color="Green" />
    </Value>
    <Value>
      <SolidColorBrush Color="White" />
    </Value>
  </PropertyTestValue>
  <PropertyTestValue ValueFormat="Complex" ValueType="FigureLength">
    <Value>
      <FigureLength>Column</FigureLength>
    </Value>
    <Value>
      <FigureLength>Content</FigureLength>
    </Value>
  </PropertyTestValue>
  <PropertyTestValue ValueFormat="Complex" ValueType="Transform">
    <Value>
      <TransformGroup>
        <ScaleTransform ScaleX=".5" ScaleY=".5" />
        <SkewTransform AngleX="10" AngleY="10" />
      </TransformGroup>
    </Value>
    <Value>
      <TransformGroup>
        <ScaleTransform ScaleX=".2" ScaleY=".5" />
        <SkewTransform AngleX="8" AngleY="10" />
      </TransformGroup>
    </Value>
  </PropertyTestValue>
  <PropertyTestValue ValueFormat="Complex" ValueType="BitmapEffect">
    <Value>
      <BitmapEffectGroup>
        <BlurBitmapEffect Radius="3" />
        <OuterGlowBitmapEffect GlowColor="blue" />
      </BitmapEffectGroup>
    </Value>
    <Value>
      <BitmapEffectGroup>
        <BlurBitmapEffect Radius="3" />
        <OuterGlowBitmapEffect GlowColor="blue" />
      </BitmapEffectGroup>
    </Value>
  </PropertyTestValue>
  <PropertyTestValue ValueFormat="Complex" ValueType="ControlTemplate" ValueOwnerType="DocumentViewer">
    <Value>
      <ControlTemplate TargetType="{x:Type DocumentViewer}">
        <ScrollViewer Name="PART_ContentHost">
          <ContentPresenter />
        </ScrollViewer>
      </ControlTemplate>
    </Value>
    <Value>
      <ControlTemplate TargetType="{x:Type DocumentViewer}">
        <ScrollViewer Name="PART_ContentHost">
          <ContentPresenter />
        </ScrollViewer>
      </ControlTemplate>
    </Value>
  </PropertyTestValue>
  <PropertyTestValue ValueFormat="Complex" ValueType="ControlTemplate">
    <Value>
      <ControlTemplate TargetType="{x:Type Control}">
        <ContentPresenter />
      </ControlTemplate>
    </Value>
    <Value>
      <ControlTemplate TargetType="{x:Type Control}">
        <Border />
      </ControlTemplate>
    </Value>
  </PropertyTestValue>
  <PropertyTestValue ValueFormat="Complex" ValueType="Style" PropertyName="ItemContainerStyle">
    <Value>
      <Style TargetType="{x:Type FrameworkElement}">
        <Setter Property="Width" Value="100.0" />
      </Style>
    </Value>
    <Value>
      <Style TargetType="{x:Type FrameworkElement}">
        <Setter Property="Height" Value="100.0" />
      </Style>
    </Value>
  </PropertyTestValue>
  <PropertyTestValue ValueFormat="Complex" ValueType="Style" PropertyName="FocusVisualStyle">
    <Value>
      <Style TargetType="{x:Type FrameworkElement}">
        <Setter Property="Width" Value="100.0" />
      </Style>
    </Value>
    <Value>
      <Style TargetType="{x:Type FrameworkElement}">
        <Setter Property="Height" Value="100.0" />
      </Style>
    </Value>
  </PropertyTestValue>
  <PropertyTestValue ValueFormat="Complex" ValueType="Style">
    <Value>
      <Style TargetType="{x:Type FrameworkElement}">
        <Setter Property="Width" Value="100.0" />
      </Style>
    </Value>
    <Value>
      <Style TargetType="{x:Type FrameworkElement}">
        <Setter Property="Height" Value="100.0" />
      </Style>
    </Value>
  </PropertyTestValue>
  <PropertyTestValue ValueFormat="Complex" ValueType="StrokeCollection">
    <Value>
      <StrokeCollection xmlns="clr-namespace:System.Windows.Ink;assembly=PresentationCore" />
    </Value>
  </PropertyTestValue>
  <PropertyTestValue ValueFormat="Simple" ValueType="HorizontalAlignment">
    <Value>
      Right
    </Value>
    <Value>
      Left
    </Value>
  </PropertyTestValue>
  <PropertyTestValue ValueFormat="Simple" ValueType="VerticalAlignment">
    <Value>
      Bottom
    </Value>
    <Value>
      Top
    </Value>
  </PropertyTestValue>
  <PropertyTestValue ValueFormat="Simple" ValueType="ClickMode">
    <Value>Hover</Value>
    <Value>Press</Value>
  </PropertyTestValue>
  <PropertyTestValue ValueFormat="Simple" ValueType="InputScope">
    <Value>RegularExpression</Value>
    <Value>DateDay</Value>
  </PropertyTestValue>
  <PropertyTestValue ValueFormat="Simple" ValueType="Int">
    <Value>2</Value>
    <Value>5</Value>
  </PropertyTestValue>
  <PropertyTestValue ValueFormat="Simple" ValueType="Boolean">
    <Value>true</Value>
    <Value>false</Value>
  </PropertyTestValue>
  <PropertyTestValue ValueFormat="Simple" ValueType="Boolean" PropertyName="IsItemsHost">
    <Value>false</Value>
    <Value>true</Value>
  </PropertyTestValue>
  <!-- The following two properties may need little time to change to true. I cannot repro it with xamlview. -->
  <PropertyTestValue ValueFormat="Simple" ValueType="Boolean" PropertyName="IsOpen" >
    <Value>false</Value>
    <Value>true</Value>
  </PropertyTestValue>
  <PropertyTestValue ValueFormat="Simple" ValueType="Boolean" PropertyName="HasDropShadow" >
    <Value>false</Value>
    <Value>true</Value>
  </PropertyTestValue>
  <PropertyTestValue ValueFormat="Simple" ValueType="Double" PropertyName="Value" >
    <Value>0.5</Value>
    <Value>0.8</Value>
  </PropertyTestValue>
  <PropertyTestValue ValueFormat="Simple" ValueType="Double" PropertyName="Minimum" >
    <Value>0</Value>
    <Value>0.3</Value>
  </PropertyTestValue>

  <!-- 
  ****************************************
  **** Containers ************************
  ****************************************
  -->

  <TypeContainer Type="FrameworkElement">
    <StackPanel Name="ContainerElement" />
  </TypeContainer>
  
  <TypeContainer Type="ContextMenu">
    <StackPanel>
      <StackPanel.ContextMenu Name="ContainerElement">
      </StackPanel.ContextMenu>
    </StackPanel>
  </TypeContainer>
  
  <TypeContainer Type="ToolTip">
    <StackPanel>
      <StackPanel.ToolTip Name="ContainerElement">
      </StackPanel.ToolTip>
    </StackPanel>
  </TypeContainer>

  <TypeContainer Type="FrameworkContentElement">
    <ListBox Name="ContainerElement" />
  </TypeContainer>

  <TypeContainer Type="AnchoredBlock">
    <RichTextBox>
      <FlowDocument>
        <Paragraph Name="ContainerElement" />
      </FlowDocument>
    </RichTextBox>
  </TypeContainer>
  
  <TypeContainer Type="Inline">
    <TextBlock Name="ContainerElement" />
  </TypeContainer>

  <TypeContainer Type="Block">
    <FlowDocumentScrollViewer>
      <FlowDocument Name="ContainerElement" />
    </FlowDocumentScrollViewer>
  </TypeContainer>

  <TypeContainer Type="Block">
    <FlowDocumentScrollViewer>
      <FlowDocument Name="ContainerElement" />
    </FlowDocumentScrollViewer>
  </TypeContainer>

  <TypeContainer Type="TableColumn">
    <FlowDocumentScrollViewer>
      <FlowDocument>
        <Table>
          <Table.Columns Name="ContainerElement" />
        </Table>
      </FlowDocument>
    </FlowDocumentScrollViewer>
  </TypeContainer>

  <TypeContainer Type="TableRowGroup">
    <FlowDocumentScrollViewer>
      <FlowDocument>
        <Table Name="ContainerElement" />
      </FlowDocument>
    </FlowDocumentScrollViewer>
  </TypeContainer>

  <TypeContainer Type="TableRow">
    <FlowDocumentScrollViewer>
      <FlowDocument>
        <Table>
          <TableRowGroup Name="ContainerElement" />
        </Table>
      </FlowDocument>
    </FlowDocumentScrollViewer>
  </TypeContainer>

  <TypeContainer Type="TableCell">
    <FlowDocumentScrollViewer>
      <FlowDocument>
        <Table>
          <TableRowGroup>
            <TableRow Name="ContainerElement" />
          </TableRowGroup>
        </Table>
      </FlowDocument>
    </FlowDocumentScrollViewer>
  </TypeContainer>

  <TypeContainer Type="ListItem">
    <FlowDocumentScrollViewer>
      <FlowDocument>
        <List Name="ContainerElement" />
      </FlowDocument>
    </FlowDocumentScrollViewer>
  </TypeContainer>

  <TypeContainer Type="ColumnDefinition">
    <Grid>
      <Grid.ColumnDefinitions Name="ContainerElement" />
      <Canvas Width="100" Height="100" />
    </Grid>
  </TypeContainer>

  <TypeContainer Type="RowDefinition">
    <Grid>
      <Grid.RowDefinitions Name="ContainerElement" />
      <Canvas Width="100" Height="100" />
    </Grid>
  </TypeContainer>

  <TypeContainer Type="FlowDocument">
    <FlowDocumentScrollViewer Name="ContainerElement" />
  </TypeContainer>

  <TypeContainer Type="FixedDocument">
    <DocumentViewer Name="ContainerElement" />
  </TypeContainer>

  <TypeContainer Type="FixedDocumentSequence">
    <DocumentViewer Name="ContainerElement" />
  </TypeContainer>
  <!-- 
  ****************************************
  **** KeyFrames syntax for certain types *
  ****************************************
  -->
  <KeyFrames Type="String">
    <StringAnimationUsingKeyFrames>
      <DiscreteStringKeyFrame KeyTime="0:0:0" />
    </StringAnimationUsingKeyFrames >
  </KeyFrames>
  
  <KeyFrames Type="object">
    <ObjectAnimationUsingKeyFrames>
      <DiscreteObjectKeyFrame KeyTime="0:0:0" />
    </ObjectAnimationUsingKeyFrames >
  </KeyFrames>
  
  <KeyFrames Type="Byte">
    <ByteAnimationUsingKeyFrames>
      <DiscreteByteKeyFrame KeyTime="0:0:0" />
    </ByteAnimationUsingKeyFrames >
  </KeyFrames>
  
  <KeyFrames Type="Char">
    <CharAnimationUsingKeyFrames>
      <DiscreteCharKeyFrame KeyTime="0:0:0" />
    </CharAnimationUsingKeyFrames >
  </KeyFrames>

  <KeyFrames Type="Color">
    <ColorAnimationUsingKeyFrames>
      <DiscreteColorKeyFrame KeyTime="0:0:0" />
    </ColorAnimationUsingKeyFrames >
  </KeyFrames>

  <KeyFrames Type="Decimal">
    <DecimalAnimationUsingKeyFrames>
      <DiscreteDecimalKeyFrame KeyTime="0:0:0" />
    </DecimalAnimationUsingKeyFrames >
  </KeyFrames>

  <KeyFrames Type="Double">
    <DoubleAnimationUsingKeyFrames>
      <DiscreteDoubleKeyFrame KeyTime="0:0:0" />
    </DoubleAnimationUsingKeyFrames >
  </KeyFrames>

  <KeyFrames Type="Int16">
    <Int16AnimationUsingKeyFrames>
      <DiscreteInt16KeyFrame KeyTime="0:0:0" />
    </Int16AnimationUsingKeyFrames >
  </KeyFrames>

  <KeyFrames Type="Int32">
    <Int32AnimationUsingKeyFrames>
      <DiscreteInt32KeyFrame KeyTime="0:0:0" />
    </Int32AnimationUsingKeyFrames >
  </KeyFrames>

  <KeyFrames Type="Int64">
    <Int64AnimationUsingKeyFrames>
      <DiscreteInt64KeyFrame KeyTime="0:0:0" />
    </Int64AnimationUsingKeyFrames >
  </KeyFrames>

  <KeyFrames Type="Marix">
    <MarixAnimationUsingKeyFrames>
      <DiscreteMarixKeyFrame KeyTime="0:0:0" />
    </MarixAnimationUsingKeyFrames >
  </KeyFrames>

  <KeyFrames Type="Point3D">
    <Point3DAnimationUsingKeyFrames>
      <DiscretePoint3DKeyFrame KeyTime="0:0:0" />
    </Point3DAnimationUsingKeyFrames >
  </KeyFrames>
  <KeyFrames Type="Point">
    <PointAnimationUsingKeyFrames>
      <DiscretePointKeyFrame KeyTime="0:0:0" />
    </PointAnimationUsingKeyFrames >
  </KeyFrames>

  <KeyFrames Type="Quaternion">
    <QuaternionAnimationUsingKeyFrames>
      <DiscreteQuaternionKeyFrame KeyTime="0:0:0" />
    </QuaternionAnimationUsingKeyFrames >
  </KeyFrames>

  <KeyFrames Type="Rect">
    <RectAnimationUsingKeyFrames>
      <DiscreteRectKeyFrame KeyTime="0:0:0" />
    </RectAnimationUsingKeyFrames >
  </KeyFrames>

  <KeyFrames Type="Rotation3D">
    <Rotation3DAnimationUsingKeyFrames>
      <DiscreteRotation3DKeyFrame KeyTime="0:0:0" />
    </Rotation3DAnimationUsingKeyFrames >
  </KeyFrames>
  <KeyFrames Type="Single">
    <SingleAnimationUsingKeyFrames>
      <DiscreteSingleKeyFrame KeyTime="0:0:0" />
    </SingleAnimationUsingKeyFrames >
  </KeyFrames>

  <KeyFrames Type="Size">
    <SizeAnimationUsingKeyFrames>
      <DiscreteSizeKeyFrame KeyTime="0:0:0" />
    </SizeAnimationUsingKeyFrames >
  </KeyFrames>

  <KeyFrames Type="Vector">
    <VectorAnimationUsingKeyFrames>
      <DiscreteVectorKeyFrame KeyTime="0:0:0" />
    </VectorAnimationUsingKeyFrames >
  </KeyFrames>

  <KeyFrames Type="Vector3D">
    <Vector3DAnimationUsingKeyFrames>
      <DiscreteVector3DKeyFrame KeyTime="0:0:0" />
    </Vector3DAnimationUsingKeyFrames >
  </KeyFrames>
  
  <KeyFrames Type="Boolean">
    <BooleanAnimationUsingKeyFrames>
      <DiscreteBooleanKeyFrame KeyTime="0:0:0" />
    </BooleanAnimationUsingKeyFrames >
  </KeyFrames>

  <KeyFrames Type="Thickness">
    <ThicknessAnimationUsingKeyFrames>
      <DiscreteThicknessKeyFrame KeyTime="0:0:0" />
    </ThicknessAnimationUsingKeyFrames >
  </KeyFrames>
</Canvas>
