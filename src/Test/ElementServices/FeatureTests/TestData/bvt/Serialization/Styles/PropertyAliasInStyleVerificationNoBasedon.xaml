


<cmn:CustomDockPanel
 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
 xmlns:cc="clr-namespace:Avalon.Test.CoreUI.Parser;assembly=CoreTestsUntrusted" xmlns:cmn="clr-namespace:Microsoft.Test.Serialization.CustomElements;assembly=TestRuntime" xmlns:MappingPIGen1="clr-namespace:Avalon.Test.CoreUI.Parser;assembly=CoreTestsUntrusted" xmlns:MappingPIGen2="clr-namespace:Microsoft.Test.Serialization.CustomElements;assembly=TestRuntime">    
    <!-- First StackPanel -->
    <StackPanel>
        <StackPanel.Resources>
            <Style x:Key="Style1" TargetType="{x:Type Button}">
                <Setter Property="Background" Value="Red" />
                <Setter Property="Width" Value="200" />
                <Setter Property="Template">
                <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <StackPanel Height="{TemplateBinding Width}" Width="{TemplateBinding  Width }"> 
                            <ContentPresenter Content="{TemplateBinding Content}" />
                        </StackPanel>
                    </Border>
                </ControlTemplate>
                </Setter.Value>
                </Setter>
                <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="Blue" />
                </Trigger>
                </Style.Triggers>
            </Style>    
        </StackPanel.Resources>
        
        <!-- 
        Things to verify:
        1. Background is a simple alias. Should be "Red" in the initial state.
        2. When mouse is moved over the button, Button's background changes to blue, and hence
           border's background should change to Blue, too.
        3. StackPanel's Height is an alias whose target is a different property (Width). Should be 200.
        4. StackPanel's Width should be 200, inspite of all the whitespaces.
        -->
        <Button Name="Button0" Style="{DynamicResource Style1}"> Hi there  </Button>
    </StackPanel>

    <!-- Second StackPanel -->
    <StackPanel>
        <StackPanel.Resources>
            <Style x:Key="OriginalStyle" TargetType="{x:Type Button}">
                <Setter Property="Background" Value="Red" />
                <Setter Property="BorderBrush" Value="Yellow" />
            </Style>   
            
            <Style x:Key="NewStyle" TargetType="{x:Type Button}">
                <Setter Property="BorderThickness" Value="5" />
                <Setter Property="Template">
                <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="DarkRed" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Margin="{TemplateBinding BorderThickness}">
                        <StackPanel> 
                            <ContentPresenter Content="{TemplateBinding Content}" />
                        </StackPanel>
                    </Border>
                </ControlTemplate>
                </Setter.Value>
                </Setter>
            </Style>
               
        </StackPanel.Resources>

        <!-- 
        Things to verify:
        1. Background is aliased to a property derived from the original style, but 
        overridden in the new style. Should be "DarkRed"
        2. BorderBrush is aliased to a property derived as is from the original style. Should be "Yellow"
        3. BorderThickness is absent in the original style. It's an example of simple alias. Should be 5.
        4. Height is aliased to a property of different type. This works because Height is not used on
           the border. But if they decide to "early validation", then this would fail. Keep an eye.
        -->
        <Button Name="Button1" Style="{DynamicResource NewStyle}"> Hello world </Button>
    </StackPanel>
    
    <!-- Third StackPanel -->
    <!--
    <StackPanel>
        <StackPanel.Resources>
            <Style x:Key="Style2" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="Red"/> 
            <Setter Property="Template">
            <Setter.Value>
            <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" />
            </ControlTemplate>
            </Setter.Value>
            </Setter>
            </Style>    
        </StackPanel.Resources>
        
        <Button />
    </StackPanel>
    -->     
</cmn:CustomDockPanel>
