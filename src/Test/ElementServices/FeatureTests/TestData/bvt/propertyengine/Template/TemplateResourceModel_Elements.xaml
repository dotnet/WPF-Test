
<!--
/*******************************************************************
 * Purpose: Snippets of xaml used for tree construction in the
 *          template resource model.
 * Contributors: Microsoft
 *
 
  
 * Revision:         $Revision: 2 $
 
 * Filename:         $Source: //depot/devdiv/Orcas/SP/feature/WPF/wpf/Test/ElementServices/FeatureTests/TestData/bvt/propertyengine/Template/TemplateResourceModel_Elements.xaml $
********************************************************************/
-->
<StackPanel
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:cmn="cmn"
      xmlns:sys="mscorlib_System" >
 
      <!-- ***************************************************
           ControlTemplate
           *************************************************** -->
      <ControlTemplate x:Key="FOO" TargetType="{x:Type FOO}" />

      <!-- ***************************************************
              Style for setting a template.
           *************************************************** -->
      <Style x:Key="styleForSettingTemplate" TargetType="{x:Type FOO}">
          <Setter Property="FOO" TestId="TemplateSetter">
              <Setter.Value TestId="TemplateSetterValue">
              </Setter.Value>
          </Setter>
      </Style>
      
      <!-- ***************************************************
           TemplatedControl
           *************************************************** -->
      <Button Name="TemplatedControlType_Button" Style="{DynamicResource styleForSettingTemplate}">ButtonLogicalChildThingy</Button>

    <!-- ***************************************************
             TemplateRootType
         *************************************************** -->
    <!-- Only template with a button for now. -->
    <!--Button Background="Yellow" TextBlock.Foreground="Black" x:Name="TemplateRootType_Control"/-->
    <StackPanel Background="Gray" TextBlock.Foreground="White" x:Name="TemplateRootType_Panel" />
    <!--Border Background="Pink" TextBlock.Foreground="Red" x:Name="TemplateRootType_Decorator" />
        <Bold Panel.Background="Pink" Foreground="Red" x:Name="TemplateRootType_FrameworkContentElement" />
        <cmn:CustomStackPanel Background="Pink" TextBlock.Foreground="Red" x:Name="TemplateRootType_CustomElement"/-->

    <!-- Brush items -->
    <Button
        x:Name="TemplateTreeItem_Brush"
        Foreground="{FOO}"
        Background="{FOO}">Brush button</Button>

    <SolidColorBrush x:Key="TemplateResourceItem_Brush_Foreground" Color="Crimson" />
    <SolidColorBrush x:Key="TemplateResourceItem_Brush_Background" Color="Gray" />
    <!-- end: Brush items -->

    <!-- Visual brush items -->
    <Button
        x:Name="TemplateTreeItem_VisualBrush"
        Background="{FOO}">Visual brush button</Button>

    <VisualBrush x:Key="TemplateResourceItem_VisualBrush">
        <VisualBrush.Visual>
            <Button Background="Purple" />
        </VisualBrush.Visual>
    </VisualBrush>

    <!--SolidColorBrush x:Key="TemplateResourceItem_VisualBrush_Background" Colore="Purple"/-->
    <!-- end: Visual brush items -->


    <!-- Storyboard items -->
    <Button x:Name="TemplateTreeItem_Storyboard" Background="Yellow">Animation button</Button>

    <!-- TODO: Add brush resources for the animation to use. -->
    <Storyboard x:Key="TemplateResourceItem_Storyboard">
        <ColorAnimation From="Red" To="Red" Duration="0:0:0.5" Storyboard.TargetName="TemplateTreeItem_Storyboard" Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" FillBehavior="HoldEnd" />
    </Storyboard>

    <EventTrigger TestId="TemplateTriggerItem_Storyboard" SourceName="FOO" RoutedEvent="Mouse.PreviewMouseDown">
        <EventTrigger.Actions>
            <BeginStoryboard Storyboard="{StaticResource TemplateResourceItem_Storyboard}" />
        </EventTrigger.Actions>
    </EventTrigger>
    <!-- end: Storyboard items -->

    <!-- Style items -->
    <Button
        x:Name="TemplateTreeItem_Style"
        Style="{FOO}">Styled button</Button>

    <Style x:Key="TemplateResourceItem_Style" TargetType="{x:Type Button}">
        <Style.Resources>
            <SolidColorBrush x:Key="StyleBackground" Color="Black" />
            <SolidColorBrush x:Key="StyleForeground" Color="White" />
        </Style.Resources>
        <Setter Property="Background" Value="{StaticResource StyleBackground}" />
        <Setter Property="Foreground" Value="{StaticResource StyleForeground}" />
    </Style>
    <!-- end: Style items -->

    <!-- Viewport3D items -->
    <Viewport3D Width="100" Height="100" x:Name="TemplateTreeItem_Viewport3D">
        <ModelVisual3D Content="{FOO}" />
        <Viewport3D.Camera>
            <PerspectiveCamera FieldOfView="45" NearPlaneDistance="1" FarPlaneDistance="10" Position="-2,2,4" LookAtPoint="0,0,0" Up="0,1,0" />
        </Viewport3D.Camera>
    </Viewport3D>

    <Model3DGroup x:Key="TemplateResourceItem_Viewport3D">
        <AmbientLight Color="LightGray" />
        <DirectionalLight Direction="0,-1,-1" Color="#FF7F7F7F" />
        <Model3DGroup>
            <GeometryModel3D>
                <GeometryModel3D.Geometry>
                    <MeshGeometry3D Positions="-1,1,1 1,1,1 1,-1,1 -1,-1,1" Normals="0,0,1 0,0,1 0,0,1 0,0,1" TextureCoordinates="0,0 1,0 1,1 0,1" TriangleIndices="1 0 3 2 1 3" />
                </GeometryModel3D.Geometry>
                <GeometryModel3D.Material>
                    <DiffuseMaterial>
                        <DiffuseMaterial.Brush>
                            <SolidColorBrush Color="White" />
                        </DiffuseMaterial.Brush>
                    </DiffuseMaterial>
                </GeometryModel3D.Material>
            </GeometryModel3D>
        </Model3DGroup>
    </Model3DGroup>
    <!-- end: Viewport3D items -->

    <!-- XmlDataSource items -->
    <Button x:Name="TemplateTreeItem_XmlDataSource" Background="{FOO}">XmlDataSource button</Button>

    <XmlDataProvider XPath="Colors" x:Key="TemplateResourceItem_XmlDataSource">
      <x:XData>
        <Colors xmlns="">
            <Color>Green</Color>
        </Colors>
      </x:XData>
    </XmlDataProvider>
    <!-- end: XmlDataSource items -->

    <!-- PropertyTrigger items -->
    <Button x:Name="TemplateTreeItem_PropertyTrigger" Background="Orange" Foreground="Black">PropertyTrigger button</Button>

    <SolidColorBrush x:Key="TemplateResourceItem_PropertyTrigger_Orange" Color="Orange" />
    <SolidColorBrush x:Key="TemplateResourceItem_PropertyTrigger_Black" Color="Black" />

    <Trigger TestId="TemplateTriggerItem_PropertyTrigger" SourceName="TemplateTreeItem_PropertyTrigger" Property="IsMouseOver" Value="true">
        <Setter TargetName="TemplateTreeItem_PropertyTrigger" Property="Background" Value="{FOO TemplateResourceItem_PropertyTrigger_Black}" />
        <Setter TargetName="TemplateTreeItem_PropertyTrigger" Property="Foreground" Value="{FOO TemplateResourceItem_PropertyTrigger_Orange}" />
    </Trigger>

    <!-- end: PropertyTrigger items -->

    <!-- ConflictingResourceName items -->
    <Button x:Name="TemplateTreeItem_ConflictingResourceName" Background="{FOO TemplateResourceItem_ConflictingResourceName}">Conflicting resource name button</Button>

    <SolidColorBrush x:Key="TemplateResourceItem_ConflictingResourceName" Color="Pink" />
    <SolidColorBrush x:Key="ResourceItem_ConflictingResourceName" Color="White" />
    <!-- end: ConflictingResourceName items -->

    <!-- Template items -->
    <Button
        x:Name="TemplateTreeItem_Template"
        Template="{FOO}">Templated button.</Button>

    <ControlTemplate x:Key="TemplateResourceItem_Template">
        <Button Background="Cyan" x:Name="TemplateResourceTemplateTreeItem">Template.Resources template Button</Button>
    </ControlTemplate>
    <!-- end: Template items -->

    <!-- BasedOn style -->
    <Button x:Name="TemplateTreeItem_BasedOnStyle" Style="{FOO TemplateResourceItem_BasedOnStyle}">BasedOn Styled button</Button>
    
    <Style x:Key="TemplateResourceItem_BasedOnStyleBase" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Brown" />
    </Style>
    
    <Style x:Key="TemplateResourceItem_BasedOnStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource TemplateResourceItem_BasedOnStyleBase}">
        <Setter Property="Foreground" Value="White" />
    </Style>
    <!-- end: BasedOn style -->

  <!-- ContentHasResources -->
  <SolidColorBrush x:Key="TemplateResourceItem_TemplateContentResource" Color="Orange"/>

  <StackPanel x:Name="TemplateTreeItem_ContentHasResources">
    <StackPanel.Resources>
      <!-- This name intentionally conflicts with template resource item -->
      <SolidColorBrush x:Key="TemplateResourceItem_TemplateContentResource" Color="Cyan"/>
    </StackPanel.Resources>
    <Button x:Name="TemplateTreeItem_ContentHasResourcesButton" Background="{DynamicResource TemplateResourceItem_TemplateContentResource}">Template content with resources section</Button>
  </StackPanel>


  <!-- end: ContentHasResources -->
  
    <!-- ***************************************************
         TemplateType.Triggers
         *************************************************** -->  
    <ControlTemplate.Triggers />

    
    <!-- ***************************************************
            Trigger
            *************************************************** -->  
    <Trigger Property="IsMouseOver" SourceName="BAR" Value="true" TestId="PropertyTrigger_Control">
        <Setter TargetName="FOO" Property="Background" Value="Yellow" />
        <Setter TargetName="FOO" Property="TextBlock.Foreground" Value="Green" /> 
    </Trigger>
        
</StackPanel>
