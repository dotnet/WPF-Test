<!-- With the RenderedEvent, we are testing events declared by custom objects -->
<cmn:CustomPage
 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
 xmlns:cc="clr-namespace:Avalon.Test.CoreUI.Parser;assembly=CoreTestsUntrusted" 
 xmlns:cmn="clr-namespace:Microsoft.Test.Serialization.CustomElements;assembly=TestRuntime"
 xmlns:sys="clr-namespace:System.Collections;assembly=mscorlib" 
 xmlns:input="clr-namespace:System.Windows.Input;assembly=PresentationCore"
 RenderedEvent="OnMyDockPanelRender"
 Verifier="CoreTestsUntrusted.dll#Avalon.Test.CoreUI.Parser.ParserVerifier.CustomPropEventsVerify" >
    <Canvas>
        <!-- MyClass.MyTransparency is of type String -->
		<Button Name="Button0" cc:MyClass.MyTransparency="1.0">
		    <cc:MyClass.MyColor>
		        <!-- MyClass.MyColor is of type MyColor. --> 
		        <cc:MyColor />
		    </cc:MyClass.MyColor>
	        Hi there 
	    </Button>
	    
	    <Button Name="Button1">
		    <cc:MyClass.MyColor>
		        <cc:MyColor Color="Blue" />
		    </cc:MyClass.MyColor>
	    </Button>
	    
	    <!-- Testing the type converter for MyColor -->
	    <Button Name="Button2" cc:MyClass.MyColor="Yellow" />

        <!-- The MyColor property for this button will be set in the event handler -->
        <Button Name="Button3" />
        
        <!-- Testing an array property with just one element -->
        <Button Name="Button4">
            <cc:MyClass.MyBrushes>
                <SolidColorBrush Color="Red" />
            </cc:MyClass.MyBrushes>
        </Button>
        
        
        <!-- Testing an array property with multiple elements -->
        <Button Name="Button5">
            <cc:MyClass.MyBrushes>
                <SolidColorBrush Color="Red" />
                <SolidColorBrush Color="Green" />
            </cc:MyClass.MyBrushes>
        </Button>
        
        <!-- TODO: Enable this. Testing an indexer property with multiple elements 
        <Button Name="Button6">
            <cc:MyClass.MyColorSet>
                <cc:MyColor Color="Blue"/>
                <cc:MyColor Color="Yellow"/>
            </cc:MyClass.MyColorSet>
        </Button>
        -->
        
        <!-- Testing an IDictionary property with multiple elements -->
        <Button Name="Button7">
			<cc:MyClass.MyIDict>
				<sys:Hashtable>
					<SolidColorBrush x:Key="" Color="Red" />
					<SolidColorBrush x:Key="{x:Type Button}" Color="Green" />
					<SolidColorBrush x:Key="MyColor" Color="Blue" />
				</sys:Hashtable>
			</cc:MyClass.MyIDict> 
        </Button>
    </Canvas>
        
        <x:Code>
        <![CDATA[
            void OnMyDockPanelRender(object sender, System.EventArgs args)
        	{
        	    MyColor m = new MyColor();
        	    m.Color = "Green";
        	    Button3.SetValue(MyClass.MyColorProperty, m);
        	}
        ]]>
        </x:Code>
</cmn:CustomPage>
