
	<!-- We are trying to verify that <Setter>s inside a style work fine.
We have both variants: <Setter>s directly under Style, 
and <Setter>s under the <Style.Setters> property. -->

	
	

	<cmn:CustomDockPanel
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:ctrl="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:cc="clr-namespace:Avalon.Test.CoreUI.Parser;assembly=CoreTestsUntrusted" xmlns:cmn="clr-namespace:Microsoft.Test.Serialization.CustomElements;assembly=TestRuntime"
        Verifier="CoreTestsUntrusted.dll#Avalon.Test.CoreUI.Parser.ParserVerifier.StyleSetterVerify" xmlns:MappingPIGen1="clr-namespace:Avalon.Test.CoreUI.Parser;assembly=CoreTestsUntrusted" xmlns:MappingPIGen2="clr-namespace:Microsoft.Test.Serialization.CustomElements;assembly=TestRuntime">
		<cmn:CustomDockPanel.Resources>
			<Style TargetType="{x:Type ListBox}">
				<Style.Setters>

					<!-- TODO: Move a couple Setters below to on top of <Style.Setters>,
					     once 1077379 is fixed -->
					<Setter Property="SelectionMode" Value="Extended" />

					<!-- A DP declared on an ancestor -->
					<Setter Property="Control.Background" Value="Yellow" />

					<Setter Property="ListBox.FontSize" Value="48" />

					<!-- An attached property -->
					<Setter Property="DockPanel.Dock" Value="Bottom" />

					<!-- A property in the format "namespace:Type.Property" -->
					<Setter Property="cc:MyClass.MyColor" Value="Yellow" />

					<!-- A property in the format "namespace:Property" -->
					<Setter Property="ctrl:FontStyle" Value="Italic" />

				</Style.Setters>
			</Style>

			<!-- Following style has both x:Key and TargetType. We will verify that the
                     x:Key is used as the style's name, i.e. the style's name is NOT derived 
                     from the TargetType
                -->
			<Style x:Key="ButtonStyle" TargetType="{x:Type TypeName=Button}">
				<Setter Property="Background" Value="Red" />

				<!-- TODO: Enable this. <EventSetter Event="Click" Handler="OnClick" /> -->
			</Style>

			<!-- Testing styles without a TargetType ("open-ended" styles is what I call them)
            -->
			<Style x:Key="OpenEndedStyle">
				<Style.Setters>
					<!-- TODO: Move the Setter below to on top of <Style.Setters>,
					     once 1077379 is fixed -->                    
					<Setter Property="Control.Background" Value="Yellow" />                        
					                                
					<Setter Property="Button.FontSize" Value="48" />
					<!-- Try this after 1110462 is fixed.
					// An attached property
					-->
					<Setter Property="DockPanel.Dock" Value="Bottom" />
				</Style.Setters>
			</Style>

		</cmn:CustomDockPanel.Resources>

		<!-- ListBox0 should get all the above properties, since the above 
        style is applied to it. -->
		<ListBox Name="ListBox0">
			<ListBox.Items>
				<ListBoxItem> 1 </ListBoxItem>
				<ListBoxItem> 2 </ListBoxItem>
				<ListBoxItem> 3 </ListBoxItem>
				<ListBoxItem> 4 </ListBoxItem>
			</ListBox.Items>
		</ListBox>

		<!-- ListBox1 references the same style, but using its name. -->
		<ListBox Name="ListBox1" Style="{StaticResource ResourceKey={x:Type TypeName=ListBox}}" />

		<Button Name="Button0" Style="{StaticResource ResourceKey=ButtonStyle}" />

		<!-- Applying the Open-ended style to the button. -->
		<Button Name="Button1" Style="{StaticResource ResourceKey=OpenEndedStyle}" />

	</cmn:CustomDockPanel>
