<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:l="clr-namespace:XamlPadEdit">
  <Style x:Key="{x:Type l:ListTreeViewItemRow}" TargetType="{x:Type l:ListTreeViewItemRow}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type l:ListTreeViewItemRow}">
          <Border Name='border' Background="{Binding Background,ElementName=Bd}">
            <!--Border.Margin only gets changed when the length of the first column has been indented to be less than 0-->
            <Border.Margin>
              <MultiBinding>
                <MultiBinding.Converter>
                  <l:ForwardConverter IndentPerLevel="19"/>
                </MultiBinding.Converter>
                <Binding Path="Level" RelativeSource="{RelativeSource AncestorType={x:Type TreeViewItem}}"/>
                <Binding Path="Columns[0].ActualWidth" RelativeSource="{RelativeSource AncestorType={x:Type TreeView}}"/>
              </MultiBinding>
            </Border.Margin>
            <l:IndentedRowPresenter Columns="{Binding Columns,RelativeSource={RelativeSource AncestorType={x:Type l:ListTreeView}}}"
                                    Level="{Binding Level,RelativeSource={RelativeSource AncestorType={x:Type l:ListTreeViewItem}}}"
                                    IndentPerLevel="19">
              <!--The margin here is to make it indented according to its owner's indent and the first column's actual width-->
              <!--The margin will be the minimum value of the two.-->
              <!--If the actual indent is greater than 1st column's actual width, its outer border will be indented.-->
              <GridViewRowPresenter.Margin>
                <MultiBinding>
                  <MultiBinding.Converter>
                    <l:MarginConverter IndentPerLevel="19"/>
                  </MultiBinding.Converter>
                  <Binding Path="Level" RelativeSource="{RelativeSource AncestorType={x:Type TreeViewItem}}"/>
                  <Binding Path="Columns[0].ActualWidth" RelativeSource="{RelativeSource AncestorType={x:Type TreeView}}"/>
                </MultiBinding>
              </GridViewRowPresenter.Margin>
            </l:IndentedRowPresenter>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="{x:Type l:ListTreeView}" TargetType="{x:Type l:ListTreeView}" BasedOn="{StaticResource {x:Type TreeView}}">
    <Setter Property="BorderBrush" Value="Black"/>
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="Padding" Value="0"/>
    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
    <Setter Property="VerticalContentAlignment" Value="Center"/>
    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type l:ListTreeView}">
          <ControlTemplate.Resources>
            <Style x:Key="sv" TargetType="{x:Type ScrollViewer}">
              <Setter Property="Focusable" Value="false" />
              <Setter Property="Template">
                <Setter.Value>
                  <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid Background="{TemplateBinding Background}">
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                      </Grid.ColumnDefinitions>
                      <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                      </Grid.RowDefinitions>

                      <!-- Grid.Column="0" Grid.Row="0" -->
                      <DockPanel Margin="{TemplateBinding Padding}">
                        <!-- Column Headers Scroll Viewer -->
                        <!-- The border here because ScrollContentPresenter has a border around -->
                        <Border BorderThickness="1" DockPanel.Dock="Top">
                          <ScrollViewer HorizontalScrollBarVisibility="Hidden"
                                        VerticalScrollBarVisibility="Hidden">
                            <GridViewHeaderRowPresenter
                              Columns="{Binding Columns,RelativeSource={RelativeSource AncestorType={x:Type l:ListTreeView}}}"
                              AllowsColumnReorder="False"/>
                          </ScrollViewer>
                        </Border>

                        <!-- Items Scroll Viewer -->
                        <!-- The border is important here to make VSP work correctly #Regression_Bug892 -->
                        <Border BorderThickness="1">
                          <ScrollContentPresenter Name="PART_ScrollContentPresenter"
                                              Content="{TemplateBinding Content}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              CanContentScroll="{TemplateBinding CanContentScroll}" />
                        </Border>
                      </DockPanel>

                      <!-- Horizontal Scroll Bar -->
                      <ScrollBar  Name="PART_HorizontalScrollBar"
                                  Orientation="Horizontal"
                                  Grid.Column="0" Grid.Row="1"
                                  Minimum="0.0"
                                  Maximum="{TemplateBinding ScrollableWidth}"
                                  ViewportSize="{TemplateBinding ViewportWidth}"
                                  Value="{Binding Path=HorizontalOffset,RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"
                                  Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                  Cursor="Arrow">
                      </ScrollBar>

                      <!-- Vertical Scroll Bar -->
                      <ScrollBar  Name="PART_VerticalScrollBar"
                                  Orientation="Vertical"
                                  Grid.Column="1" Grid.Row="0"
                                  Minimum="0.0"
                                  Maximum="{TemplateBinding ScrollableHeight}"
                                  ViewportSize="{TemplateBinding ViewportHeight}"
                                  Value="{Binding Path=VerticalOffset,RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"
                                  Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                  Cursor="Arrow" />
                    </Grid>
                  </ControlTemplate>
                </Setter.Value>
              </Setter>
            </Style>
          </ControlTemplate.Resources>
          <Border BorderThickness="{TemplateBinding BorderThickness}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  Background="{TemplateBinding Background}">
            <ScrollViewer Padding="{TemplateBinding Padding}" Style="{DynamicResource sv}">
              <ItemsPresenter />
            </ScrollViewer>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="{x:Type l:ListTreeViewItem}" TargetType="{x:Type l:ListTreeViewItem}"
         BasedOn="{StaticResource {x:Type TreeViewItem}}">
    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
    <Setter Property="HeaderTemplate">
      <Setter.Value>
        <DataTemplate>
          <l:ListTreeViewItemRow Content="{Binding}"/>
        </DataTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="{x:Type l:VisualTreeView}" TargetType="{x:Type l:VisualTreeView}">
    <Style.Resources>
      <ContextMenu x:Key="contextMenu">
        <!--Setting CommandTarget is a workaround for Regression_Bug271-->
        <MenuItem Header="Refresh" Command="l:VisualTreeView.RefreshCommand"
                  CommandTarget='{Binding PlacementTarget,RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}}'/>
      </ContextMenu>
    </Style.Resources>
    <Setter Property="BorderBrush" Value="Blue" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Background" Value="White"/>
    <Setter Property="ContextMenu" Value="{DynamicResource contextMenu}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type l:VisualTreeView}">
          <ControlTemplate.Resources>
            <HierarchicalDataTemplate x:Key="hdt1" ItemsSource="{Binding Items}">
              <StackPanel Orientation="Horizontal">
                <TextBlock Text="{Binding Header.Name}" />
                <TextBlock Text=":" />
                <TextBlock Text="{Binding Type.Name}" />
              </StackPanel>
            </HierarchicalDataTemplate>
          </ControlTemplate.Resources>
          <TreeView Name="PART_Tree" BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}"
                    Margin="{TemplateBinding FrameworkElement.Margin}"
                    Padding="{TemplateBinding Control.Padding}"
                    Background="{TemplateBinding Control.Background}"
                    Foreground="{TemplateBinding Control.Foreground}"
                    ItemsSource="{TemplateBinding l:VisualTreeView.ViewTree}"
                    ItemTemplate="{DynamicResource hdt1}"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="{x:Type l:PropertyTreeView}" TargetType="{x:Type l:PropertyTreeView}">
    <Style.Resources>
      <ContextMenu x:Key="contextMenu">
        <!--Setting CommandTarget is a workaround for Regression_Bug271-->
        <MenuItem Header="Refresh" Command="l:PropertyTreeView.RefreshCommand"
                  CommandTarget='{Binding PlacementTarget,RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}}'/>
      </ContextMenu>
    </Style.Resources>
    <Setter Property="BorderBrush" Value="Blue" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
    <Setter Property="ShowsRoot" Value="false" />
    <Setter Property="ContextMenu" Value="{DynamicResource contextMenu}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type l:PropertyTreeView}">
          <l:ListTreeView Name="PART_Tree" 
                          BorderBrush="{TemplateBinding Control.BorderBrush}"
                          BorderThickness="{TemplateBinding Control.BorderThickness}"
                          Margin="{TemplateBinding Control.Margin}"
                          Padding="{TemplateBinding Control.Padding}"
                          Background="{TemplateBinding Control.Background}"
                          Foreground="{TemplateBinding Control.Foreground}"
                          ItemsSource="{TemplateBinding l:PropertyTreeView.ViewTree}">
            <l:ListTreeView.Columns>
              <GridViewColumn Header='Name' DisplayMemberBinding='{Binding Name}'/>
              <GridViewColumn Header="Type" DisplayMemberBinding='{Binding Type.Name}'/>
              <GridViewColumn Header="Value" DisplayMemberBinding='{Binding Value}'/>
            </l:ListTreeView.Columns>
            <l:ListTreeView.ItemTemplate>
              <HierarchicalDataTemplate ItemsSource="{Binding Items}">
                <l:ListTreeViewItemRow Content="{Binding}"/>
              </HierarchicalDataTemplate>
            </l:ListTreeView.ItemTemplate>
          </l:ListTreeView>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

</ResourceDictionary>
